{"message":"expected type, found `::alloc::vec::Vec::new()`","code":null,"level":"error","spans":[{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":4114,"byte_end":4116,"line_start":122,"line_end":122,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        $e","highlight_start":9,"highlight_end":11}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1412,"byte_end":1463,"line_start":43,"line_end":43,"column_start":9,"column_end":60,"is_primary":false,"text":[{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":9,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/parse_fen.rs","byte_start":29,"byte_end":35,"line_start":1,"line_end":1,"column_start":30,"column_end":36,"is_primary":false,"text":[{"text":"fn parse_fen(fen: String) -> vec![] {","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"vec!","def_site_span":{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1373,"byte_end":1684,"line_start":41,"line_end":51,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! vec {","highlight_start":1,"highlight_end":1},{"text":"    () => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":1,"highlight_end":1},{"text":"    );","highlight_start":1,"highlight_end":1},{"text":"    ($elem:expr; $n:expr) => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::__rust_force_expr!($crate::vec::from_elem($elem, $n))","highlight_start":1,"highlight_end":1},{"text":"    );","highlight_start":1,"highlight_end":1},{"text":"    ($($x:expr),+ $(,)?) => (","highlight_start":1,"highlight_end":1},{"text":"        $crate::__rust_force_expr!(<[_]>::into_vec(box [$($x),+]))","highlight_start":1,"highlight_end":1},{"text":"    );","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__rust_force_expr!","def_site_span":{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":4054,"byte_end":4125,"line_start":120,"line_end":124,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! __rust_force_expr {","highlight_start":1,"highlight_end":33},{"text":"    ($e:expr) => {","highlight_start":1,"highlight_end":19},{"text":"        $e","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1412,"byte_end":1463,"line_start":43,"line_end":43,"column_start":9,"column_end":60,"is_primary":false,"text":[{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":9,"highlight_end":60}],"label":"in this macro invocation","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/parse_fen.rs","byte_start":29,"byte_end":35,"line_start":1,"line_end":1,"column_start":30,"column_end":36,"is_primary":false,"text":[{"text":"fn parse_fen(fen: String) -> vec![] {","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"vec!","def_site_span":{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1373,"byte_end":1684,"line_start":41,"line_end":51,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! vec {","highlight_start":1,"highlight_end":19},{"text":"    () => (","highlight_start":1,"highlight_end":12},{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":1,"highlight_end":60},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($elem:expr; $n:expr) => (","highlight_start":1,"highlight_end":31},{"text":"        $crate::__rust_force_expr!($crate::vec::from_elem($elem, $n))","highlight_start":1,"highlight_end":70},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($($x:expr),+ $(,)?) => (","highlight_start":1,"highlight_end":30},{"text":"        $crate::__rust_force_expr!(<[_]>::into_vec(box [$($x),+]))","highlight_start":1,"highlight_end":67},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1412,"byte_end":1463,"line_start":43,"line_end":43,"column_start":9,"column_end":60,"is_primary":false,"text":[{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":9,"highlight_end":60}],"label":"this macro call doesn't expand to a type","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/parse_fen.rs","byte_start":29,"byte_end":35,"line_start":1,"line_end":1,"column_start":30,"column_end":36,"is_primary":false,"text":[{"text":"fn parse_fen(fen: String) -> vec![] {","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"vec!","def_site_span":{"file_name":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs","byte_start":1373,"byte_end":1684,"line_start":41,"line_end":51,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! vec {","highlight_start":1,"highlight_end":19},{"text":"    () => (","highlight_start":1,"highlight_end":12},{"text":"        $crate::__rust_force_expr!($crate::vec::Vec::new())","highlight_start":1,"highlight_end":60},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($elem:expr; $n:expr) => (","highlight_start":1,"highlight_end":31},{"text":"        $crate::__rust_force_expr!($crate::vec::from_elem($elem, $n))","highlight_start":1,"highlight_end":70},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    ($($x:expr),+ $(,)?) => (","highlight_start":1,"highlight_end":30},{"text":"        $crate::__rust_force_expr!(<[_]>::into_vec(box [$($x),+]))","highlight_start":1,"highlight_end":67},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected type, found `::alloc::vec::Vec::new()`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parse_fen.rs:1:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn parse_fen(fen: String) -> vec![] {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9min this macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis macro call doesn't expand to a type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__rust_force_expr` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
