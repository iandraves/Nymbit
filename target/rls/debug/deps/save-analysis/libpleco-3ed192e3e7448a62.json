{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0","program":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","pleco","/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=3ed192e3e7448a62","-C","extra-filename=-3ed192e3e7448a62","--out-dir","/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps","-L","dependency=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps","--extern","bitflags=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/libbitflags-d5bb11073aa2dcf9.rmeta","--extern","lazy_static=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/liblazy_static-6d32dfff5581f73f.rmeta","--extern","mucow=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/libmucow-0a6219ab06a4e0e1.rmeta","--extern","num_cpus=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/libnum_cpus-844984b398986f48.rmeta","--extern","rand=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/librand-74230ca5363d8549.rmeta","--extern","rayon=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/librayon-00540b0b74b1ee1e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/libpleco-3ed192e3e7448a62.rmeta"},"prelude":{"crate_id":{"name":"pleco","disambiguator":[5305236872047353619,0]},"crate_root":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src","external_crates":[{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8947264418412078715,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16214626321829081561,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14004541350322100676,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14513964228136080925,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[18071398054246242872,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9901929154766010641,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1992023595794582040,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3304853791930394566,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16365657126326177412,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1295476454418234886,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2217975506173844539,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10955358760156651288,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17029152361031566612,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4374745283242162134,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5422690374441455074,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16158478199367640957,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3064376627870306792,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[2537414487802356733,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[89345479795873267,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":20,"id":{"name":"num_cpus","disambiguator":[13689848000744781578,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[18258192749890366442,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":22,"id":{"name":"rand","disambiguator":[10225530725496779988,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":23,"id":{"name":"rand_jitter","disambiguator":[12644010755541473478,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":24,"id":{"name":"rand_core","disambiguator":[15958362186611498885,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":25,"id":{"name":"rand_os","disambiguator":[8117204723385555736,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":26,"id":{"name":"rand_isaac","disambiguator":[9977834566244208487,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":27,"id":{"name":"rand_core","disambiguator":[2312222061486916195,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":28,"id":{"name":"rand_chacha","disambiguator":[3802075044347895627,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":29,"id":{"name":"rand_hc","disambiguator":[2807290867054498857,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":30,"id":{"name":"rand_pcg","disambiguator":[17415271482555162184,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":31,"id":{"name":"rand_xorshift","disambiguator":[16217333145458959360,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":32,"id":{"name":"rayon","disambiguator":[941528401622271904,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":33,"id":{"name":"either","disambiguator":[3183833843564012904,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":34,"id":{"name":"rayon_core","disambiguator":[17629749475349403079,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":35,"id":{"name":"crossbeam_channel","disambiguator":[11471705962413863702,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":36,"id":{"name":"cfg_if","disambiguator":[18090141088928795859,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":37,"id":{"name":"crossbeam_utils","disambiguator":[5572696082850807199,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":38,"id":{"name":"crossbeam_deque","disambiguator":[18169996396578137147,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":39,"id":{"name":"crossbeam_epoch","disambiguator":[9505751493860650968,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":40,"id":{"name":"scopeguard","disambiguator":[17970148060099818384,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":41,"id":{"name":"memoffset","disambiguator":[12360758071551447829,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","num":42,"id":{"name":"mucow","disambiguator":[10832786778112315984,0]}}],"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":0,"byte_end":3448,"line_start":1,"line_end":119,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2887,"byte_end":2892,"line_start":100,"line_end":100,"column_start":16,"column_end":21},"alias_span":null,"name":"Board","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2519},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2921,"byte_end":2928,"line_start":101,"line_end":101,"column_start":28,"column_end":35},"alias_span":null,"name":"BitMove","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2584},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2929,"byte_end":2940,"line_start":101,"line_end":101,"column_start":36,"column_end":47},"alias_span":null,"name":"ScoringMove","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2969,"byte_end":2977,"line_start":102,"line_end":102,"column_start":27,"column_end":35},"alias_span":null,"name":"MoveList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2978,"byte_end":2993,"line_start":102,"line_end":102,"column_start":36,"column_end":51},"alias_span":null,"name":"ScoringMoveList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2595},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3014,"byte_end":3016,"line_start":103,"line_end":103,"column_start":19,"column_end":21},"alias_span":null,"name":"SQ","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3014,"byte_end":3016,"line_start":103,"line_end":103,"column_start":19,"column_end":21},"alias_span":null,"name":"SQ","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2714},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3042,"byte_end":3050,"line_start":104,"line_end":104,"column_start":25,"column_end":33},"alias_span":null,"name":"BitBoard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2715},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3042,"byte_end":3050,"line_start":104,"line_end":104,"column_start":25,"column_end":33},"alias_span":null,"name":"BitBoard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3264},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3068,"byte_end":3074,"line_start":105,"line_end":105,"column_start":17,"column_end":23},"alias_span":null,"name":"Helper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2865},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3091,"byte_end":3097,"line_start":106,"line_end":106,"column_start":16,"column_end":22},"alias_span":null,"name":"Player","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2934},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3099,"byte_end":3104,"line_start":106,"line_end":106,"column_start":24,"column_end":29},"alias_span":null,"name":"Piece","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2901},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3106,"byte_end":3115,"line_start":106,"line_end":106,"column_start":31,"column_end":40},"alias_span":null,"name":"PieceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3020},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3117,"byte_end":3121,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rank","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2980},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3123,"byte_end":3127,"line_start":106,"line_end":106,"column_start":48,"column_end":52},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1747},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3218,"byte_end":3227,"line_start":111,"line_end":111,"column_start":19,"column_end":28},"alias_span":null,"name":"RandomBot","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":1748},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3247,"byte_end":3262,"line_start":112,"line_end":112,"column_start":19,"column_end":34},"alias_span":null,"name":"MiniMaxSearcher","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":1749},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3282,"byte_end":3305,"line_start":113,"line_end":113,"column_start":19,"column_end":42},"alias_span":null,"name":"ParallelMiniMaxSearcher","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":1750},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3325,"byte_end":3342,"line_start":114,"line_end":114,"column_start":19,"column_end":36},"alias_span":null,"name":"AlphaBetaSearcher","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":1751},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3362,"byte_end":3378,"line_start":115,"line_end":115,"column_start":19,"column_end":35},"alias_span":null,"name":"JamboreeSearcher","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3398,"byte_end":3415,"line_start":116,"line_end":116,"column_start":19,"column_end":36},"alias_span":null,"name":"IterativeSearcher","value":"","parent":{"krate":0,"index":2497}},{"kind":"Use","ref_id":{"krate":0,"index":2439},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3437,"byte_end":3445,"line_start":118,"line_end":118,"column_start":20,"column_end":28},"alias_span":null,"name":"Searcher","value":"","parent":{"krate":0,"index":2497}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":0,"byte_end":3448,"line_start":1,"line_end":119,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":901},{"krate":0,"index":1653},{"krate":0,"index":1772},{"krate":0,"index":2173},{"krate":0,"index":2455},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":2488},{"krate":0,"index":2491},{"krate":0,"index":2494},{"krate":0,"index":2497}],"decl_id":null,"docs":" A blazingly fast chess library.","sig":null,"attributes":[{"value":"/ A blazingly fast chess library.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This package is separated into two parts. Firstly, the board representation & associated functions","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":40,"byte_end":142,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/ (the current crate, `pleco`), and secondly, the AI implementations using these chess foundations,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":143,"byte_end":244,"line_start":4,"line_end":4,"column_start":1,"column_end":102}},{"value":"/ [pleco_engine](https://crates.io/crates/pleco_engine).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":245,"byte_end":303,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":304,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The general formatting and structure of the library take heavy influence from the basic building","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":308,"byte_end":408,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"/ blocks of the [Stockfish](https://stockfishchess.org/) chess engine.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":409,"byte_end":481,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":482,"byte_end":485,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":486,"byte_end":497,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":498,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate is [on crates.io](https://crates.io/crates/pleco) and can be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":502,"byte_end":577,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ used by adding `pleco` to the dependencies in your project's `Cargo.toml`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":578,"byte_end":656,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":657,"byte_end":660,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platforms","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":661,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":677,"byte_end":680,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `pleco` is currently tested and created for use with the `x86_64` instruction set in mind.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":681,"byte_end":775,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ Currently, there are no guarantees of correct behavior if compiled for a different","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":776,"byte_end":862,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/ instruction set.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":863,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":884,"byte_end":887,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Nightly Features","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":888,"byte_end":910,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":911,"byte_end":914,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ If on nightly rust, the feature `nightly` is available. This enables some nightly","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":915,"byte_end":1000,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ optimizations and speed improvements.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1001,"byte_end":1042,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1047,"byte_end":1059,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1060,"byte_end":1063,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ While generally a safe library, pleco was built with a focus of speed in mind. Usage of methods","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1064,"byte_end":1163,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/ must be followed carefully, as there are many possible ways to `panic` unexpectedly. Methods","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1164,"byte_end":1260,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ with the ability to panic will be documented as such.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1261,"byte_end":1318,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1323,"byte_end":1337,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1338,"byte_end":1341,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ You can create a [`Board`] with the starting position like so:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1342,"byte_end":1408,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1409,"byte_end":1412,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1413,"byte_end":1426,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1427,"byte_end":1448,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ let board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1449,"byte_end":1484,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1485,"byte_end":1492,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1493,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Generating a list of moves (Contained inside a [`MoveList`]) can be done with:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1497,"byte_end":1579,"line_start":41,"line_end":41,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1580,"byte_end":1583,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1584,"byte_end":1597,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ let list = board.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1598,"byte_end":1636,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1637,"byte_end":1644,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1645,"byte_end":1648,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Applying and undoing moves is simple:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1649,"byte_end":1690,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1691,"byte_end":1694,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1695,"byte_end":1708,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ let mut board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1709,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let list = board.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1749,"byte_end":1787,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1788,"byte_end":1791,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ for mov in list.iter() {","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1792,"byte_end":1820,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/     board.apply_move(*mov);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1821,"byte_end":1852,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/     println!(\"{}\",board.get_fen());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1853,"byte_end":1892,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/     board.undo_move();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1893,"byte_end":1919,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1920,"byte_end":1925,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1926,"byte_end":1933,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Using fen strings is also supported:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1938,"byte_end":1978,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1979,"byte_end":1982,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1983,"byte_end":1996,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/ let start_position = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":1997,"byte_end":2081,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/ let board = Board::from_fen(start_position).unwrap();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2082,"byte_end":2139,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2140,"byte_end":2147,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2148,"byte_end":2151,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`MoveList`]: core/move_list/struct.MoveList.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2152,"byte_end":2205,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ [`Board`]: board/struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2206,"byte_end":2244,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"allow(clippy :: cast_lossless)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2545,"byte_end":2577,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2578,"byte_end":2615,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"allow(dead_code)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2617,"byte_end":2637,"line_start":83,"line_end":83,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":32},{"krate":0,"index":130},{"krate":0,"index":228},{"krate":0,"index":365},{"krate":0,"index":466},{"krate":0,"index":562},{"krate":0,"index":755},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":2865},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":846},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":2880},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2932},{"krate":0,"index":857},{"krate":0,"index":864},{"krate":0,"index":2934},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":866},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":2980},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":880},{"krate":0,"index":887},{"krate":0,"index":3020},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":890},{"krate":0,"index":3060},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900}],"decl_id":null,"docs":" Contains various components and structures supporting the creation of a chessboard. This\n includes `SQ`, `BitBoard`, `Player`, `Piece`, `GenTypes`, `Rank`, and `File`.\n","sig":null,"attributes":[{"value":"/ Contains various components and structures supporting the creation of a chessboard. This","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3569,"byte_end":3661,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ includes `SQ`, `BitBoard`, `Player`, `Piece`, `GenTypes`, `Rank`, and `File`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3662,"byte_end":3743,"line_start":2,"line_end":2,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bit_twiddles","qualname":"::core::bit_twiddles","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" Collection of useful functions oriented around modifying singular bits of integer types.\n You will rarely need to interact with this module directly unless you need functions\n involving the manipulation of bits.\n","sig":null,"attributes":[{"value":"/ Collection of useful functions oriented around modifying singular bits of integer types.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":33267,"byte_end":33359,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ You will rarely need to interact with this module directly unless you need functions","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":33360,"byte_end":33448,"line_start":2,"line_end":2,"column_start":1,"column_end":89}},{"value":"/ involving the manipulation of bits.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":33449,"byte_end":33488,"line_start":3,"line_end":3,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35085,"byte_end":35095,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"popcount64","qualname":"::core::bit_twiddles::popcount64","value":"pub fn popcount64(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits","sig":null,"attributes":[{"value":"/ Counts the number of bits","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34910,"byte_end":34939,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34940,"byte_end":34943,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34944,"byte_end":34958,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34959,"byte_end":34962,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34963,"byte_end":34970,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":34971,"byte_end":35008,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35009,"byte_end":35012,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(popcount64(0b1001), 2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35013,"byte_end":35051,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35052,"byte_end":35059,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35060,"byte_end":35077,"line_start":54,"line_end":54,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35338,"byte_end":35354,"line_start":70,"line_end":70,"column_start":8,"column_end":24},"name":"bit_scan_forward","qualname":"::core::bit_twiddles::bit_scan_forward","value":"pub fn bit_scan_forward(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns index of the Least Significant Bit","sig":null,"attributes":[{"value":"/ Returns index of the Least Significant Bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35136,"byte_end":35182,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35183,"byte_end":35186,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35187,"byte_end":35201,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35202,"byte_end":35205,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35206,"byte_end":35213,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35214,"byte_end":35251,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35252,"byte_end":35255,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bit_scan_forward(0b10100),2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35256,"byte_end":35300,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35301,"byte_end":35308,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35309,"byte_end":35312,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35313,"byte_end":35330,"line_start":69,"line_end":69,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35753,"byte_end":35783,"line_start":88,"line_end":88,"column_start":8,"column_end":38},"name":"bit_scan_forward_rust_trailing","qualname":"::core::bit_twiddles::bit_scan_forward_rust_trailing","value":"pub fn bit_scan_forward_rust_trailing(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns index of the Least Significant Bit","sig":null,"attributes":[{"value":"/ Returns index of the Least Significant Bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35539,"byte_end":35585,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35586,"byte_end":35589,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35590,"byte_end":35604,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35605,"byte_end":35608,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35609,"byte_end":35616,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35617,"byte_end":35654,"line_start":82,"line_end":82,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35655,"byte_end":35658,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bit_scan_forward_rust_trailing(0b100),2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35659,"byte_end":35715,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35716,"byte_end":35723,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35724,"byte_end":35727,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35728,"byte_end":35745,"line_start":87,"line_end":87,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36062,"byte_end":36078,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"bit_scan_reverse","qualname":"::core::bit_twiddles::bit_scan_reverse","value":"pub fn bit_scan_reverse(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns index of the Most Significant Bit","sig":null,"attributes":[{"value":"/ Returns index of the Most Significant Bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35863,"byte_end":35908,"line_start":93,"line_end":93,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35909,"byte_end":35912,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35913,"byte_end":35927,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35928,"byte_end":35931,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35932,"byte_end":35939,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35940,"byte_end":35977,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35978,"byte_end":35981,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bit_scan_reverse(0b101),2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":35982,"byte_end":36024,"line_start":100,"line_end":100,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36025,"byte_end":36032,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36033,"byte_end":36036,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36037,"byte_end":36054,"line_start":103,"line_end":103,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36590,"byte_end":36603,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"more_than_one","qualname":"::core::bit_twiddles::more_than_one","value":"pub fn more_than_one(u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there are more than one bits in a u64.","sig":null,"attributes":[{"value":"/ Returns if there are more than one bits in a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36350,"byte_end":36403,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36404,"byte_end":36407,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36408,"byte_end":36422,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36423,"byte_end":36426,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36427,"byte_end":36434,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36435,"byte_end":36472,"line_start":122,"line_end":122,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36473,"byte_end":36476,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ assert!(more_than_one(0b1111));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36477,"byte_end":36512,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36513,"byte_end":36516,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ assert!(!more_than_one(0b0001))","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36517,"byte_end":36552,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36553,"byte_end":36556,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36557,"byte_end":36564,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36565,"byte_end":36582,"line_start":129,"line_end":129,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36842,"byte_end":36845,"line_start":145,"line_end":145,"column_start":8,"column_end":11},"name":"lsb","qualname":"::core::bit_twiddles::lsb","value":"pub fn lsb(u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the least significant bit","sig":null,"attributes":[{"value":"/ Returns the least significant bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36661,"byte_end":36698,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36699,"byte_end":36702,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36703,"byte_end":36717,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36718,"byte_end":36721,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36722,"byte_end":36729,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36730,"byte_end":36767,"line_start":140,"line_end":140,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36768,"byte_end":36771,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(lsb(0b1001), 0b0001);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36772,"byte_end":36808,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36809,"byte_end":36816,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36817,"byte_end":36834,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36977,"byte_end":36991,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"popcount_table","qualname":"::core::bit_twiddles::popcount_table","value":"pub fn popcount_table(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits in a u64.\n","sig":null,"attributes":[{"value":"/ Counts the number of bits in a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36920,"byte_end":36959,"line_start":149,"line_end":149,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":36960,"byte_end":36969,"line_start":150,"line_end":150,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37427,"byte_end":37440,"line_start":167,"line_end":167,"column_start":8,"column_end":21},"name":"popcount_rust","qualname":"::core::bit_twiddles::popcount_rust","value":"pub fn popcount_rust(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits in a u64.\n","sig":null,"attributes":[{"value":"/ Counts the number of bits in a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37362,"byte_end":37401,"line_start":165,"line_end":165,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37402,"byte_end":37419,"line_start":166,"line_end":166,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37572,"byte_end":37576,"line_start":173,"line_end":173,"column_start":8,"column_end":12},"name":"diff","qualname":"::core::bit_twiddles::diff","value":"pub fn diff(u8, u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the positive difference between two unsigned u8s.\n","sig":null,"attributes":[{"value":"/ Returns the positive difference between two unsigned u8s.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37485,"byte_end":37546,"line_start":171,"line_end":171,"column_start":1,"column_end":62}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37547,"byte_end":37564,"line_start":172,"line_end":172,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37718,"byte_end":37721,"line_start":182,"line_end":182,"column_start":8,"column_end":11},"name":"msb","qualname":"::core::bit_twiddles::msb","value":"pub fn msb(u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Gives the most significant bit of a `u64`.\n","sig":null,"attributes":[{"value":"/ Gives the most significant bit of a `u64`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37664,"byte_end":37710,"line_start":181,"line_end":181,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38041,"byte_end":38054,"line_start":198,"line_end":198,"column_start":8,"column_end":21},"name":"reverse_bytes","qualname":"::core::bit_twiddles::reverse_bytes","value":"pub fn reverse_bytes(u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Reverses all the bytes in a u64.","sig":null,"attributes":[{"value":"/ Reverses all the bytes in a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37795,"byte_end":37831,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37832,"byte_end":37835,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37836,"byte_end":37850,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37851,"byte_end":37854,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37855,"byte_end":37862,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37863,"byte_end":37900,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37901,"byte_end":37904,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ let x: u64 =  0b11001100_00000001;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37905,"byte_end":37943,"line_start":194,"line_end":194,"column_start":1,"column_end":39}},{"value":"/ let reverse = 0b00110011_10000000;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37944,"byte_end":37982,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(reverse, reverse_bytes(x));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":37983,"byte_end":38025,"line_start":196,"line_end":196,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38026,"byte_end":38033,"line_start":197,"line_end":197,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38823,"byte_end":38835,"line_start":223,"line_end":223,"column_start":8,"column_end":20},"name":"reverse_byte","qualname":"::core::bit_twiddles::reverse_byte","value":"pub fn reverse_byte(u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Reverses all a byte.","sig":null,"attributes":[{"value":"/ Reverses all a byte.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38599,"byte_end":38623,"line_start":211,"line_end":211,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38624,"byte_end":38627,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38628,"byte_end":38642,"line_start":213,"line_end":213,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38643,"byte_end":38646,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38647,"byte_end":38654,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38655,"byte_end":38692,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38693,"byte_end":38696,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let x: u8 =  0b00000001;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38697,"byte_end":38725,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let reverse = 0b10000000;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38726,"byte_end":38755,"line_start":219,"line_end":219,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(reverse, reverse_byte(x));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38756,"byte_end":38797,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38798,"byte_end":38805,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":38806,"byte_end":38815,"line_start":222,"line_end":222,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":39233,"byte_end":39243,"line_start":233,"line_end":233,"column_start":8,"column_end":18},"name":"string_u64","qualname":"::core::bit_twiddles::string_u64","value":"pub fn string_u64(u64) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a String of the given u64, formatted in the order of where each bit maps to\n a specific square.\n","sig":null,"attributes":[{"value":"/ Returns a String of the given u64, formatted in the order of where each bit maps to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":39115,"byte_end":39202,"line_start":231,"line_end":231,"column_start":1,"column_end":88}},{"value":"/ a specific square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bit_twiddles.rs","byte_start":39203,"byte_end":39225,"line_start":232,"line_end":232,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"piece_move","qualname":"::core::piece_move","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":2584},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128}],"decl_id":null,"docs":" Module for the implementation and definition of a move to be played.","sig":null,"attributes":[{"value":"/ Module for the implementation and definition of a move to be played.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41145,"byte_end":41217,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41218,"byte_end":41221,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We define a move as the struct `BitMove`. A move needs 16 bits to be stored, and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41222,"byte_end":41306,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ they are used as such:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41307,"byte_end":41333,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41334,"byte_end":41337,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41338,"byte_end":41354,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/ bits  0 - 5:  destination square (from 0 to 63)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41355,"byte_end":41406,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/ bits  6 - 11: origin square (from 0 to 63)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41407,"byte_end":41453,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/ bits 12 - 13: promotion piece type - 2 (from KNIGHT-0 to QUEEN-4)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41454,"byte_end":41523,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ bits 14 - 15: special move flag: promotion (1), en passant (2), castling (3)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41524,"byte_end":41604,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41605,"byte_end":41612,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41613,"byte_end":41616,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Special cases","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41617,"byte_end":41636,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41637,"byte_end":41640,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Special cases are MOVE_NONE and MOVE_NULL. We can sneak these in because in","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41641,"byte_end":41720,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ any normal move destination square is always different from origin square","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41721,"byte_end":41798,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ while MOVE_NONE and MOVE_NULL have the same origin and destination square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41799,"byte_end":41877,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41878,"byte_end":41881,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Another special case is where the move is a castling move. If the move is a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41882,"byte_end":41961,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ castle, then the corresponding flags will be set and the origin square will be the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":41962,"byte_end":42048,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ square of the king, while the destination square will be the square of the rook to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42049,"byte_end":42135,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ castle with.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42136,"byte_end":42152,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42153,"byte_end":42156,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Lastly, the En-passant flag is only set if the move is a pawn double-push.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42157,"byte_end":42235,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42236,"byte_end":42239,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Bit Flags for a `BitMove`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42240,"byte_end":42271,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42272,"byte_end":42275,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The flags for a move are set as such:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42276,"byte_end":42317,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42318,"byte_end":42321,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42322,"byte_end":42338,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ x??? --> Promotion bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42339,"byte_end":42365,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ ?x?? --> Capture bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42366,"byte_end":42390,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ ??xx --> flag Bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42391,"byte_end":42412,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42413,"byte_end":42420,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42421,"byte_end":42424,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ More specifically, the flags correspond to the following bit patterns:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42425,"byte_end":42499,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42500,"byte_end":42503,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42504,"byte_end":42520,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ 0000  ===> Quiet move","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42521,"byte_end":42546,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ 0001  ===> Double Pawn Push","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42547,"byte_end":42578,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ 0010  ===> King Castle","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42579,"byte_end":42605,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ 0011  ===> Queen Castle","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42606,"byte_end":42633,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ 0100  ===> Capture","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42634,"byte_end":42656,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ 0101  ===> EP Capture","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42657,"byte_end":42682,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/ 0110  ===>","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42683,"byte_end":42697,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ 0111  ===>","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42698,"byte_end":42712,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ 1000  ===> Knight Promotion","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42713,"byte_end":42744,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ 1001  ===> Bishop Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42745,"byte_end":42772,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ 1010  ===> Rook   Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42773,"byte_end":42800,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/ 1011  ===> Queen  Capture  Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42801,"byte_end":42837,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/ 1100  ===> Knight Capture  Promotion","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42838,"byte_end":42878,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ 1101  ===> Bishop Capture  Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42879,"byte_end":42915,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ 1110  ===> Rook   Capture  Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42916,"byte_end":42952,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ 1111  ===> Queen  Capture  Promo","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42953,"byte_end":42989,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42990,"byte_end":42997,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":42998,"byte_end":43001,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43002,"byte_end":43014,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43015,"byte_end":43018,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ A `BitMove` is only guaranteed to be legal for a specific position. If a Board generates a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43019,"byte_end":43113,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ list of moves, then only those moves are correct. It is not recommended to use `BitMove`s","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43114,"byte_end":43207,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ on a `Board` that didn't directly create them, unless it is otherwise known that move","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43208,"byte_end":43297,"line_start":61,"line_end":61,"column_start":1,"column_end":90}},{"value":"/ correlates to that specific board position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43298,"byte_end":43345,"line_start":62,"line_end":62,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44332,"byte_end":44339,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"BitMove","qualname":"::core::piece_move::BitMove","value":"BitMove {  }","parent":null,"children":[{"krate":0,"index":2520}],"decl_id":null,"docs":" Represents a singular move. ","sig":null,"attributes":[{"value":"/ Represents a singular move. ","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43848,"byte_end":43880,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43881,"byte_end":43884,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ A `BitMove` consists of 16 bits, all of which to include a source square, destination square,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43885,"byte_end":43982,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ and special move-flags to differentiate types of moves. ","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":43983,"byte_end":44043,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44044,"byte_end":44047,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ A `BitMove` should never be created directly, but rather instigated with a `PreMoveInfo`. This is because","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44048,"byte_end":44157,"line_start":84,"line_end":84,"column_start":1,"column_end":110}},{"value":"/ the bits are in a special order, and manually creating moves risks creating an invalid move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44158,"byte_end":44254,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"repr(transparent)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44300,"byte_end":44320,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44498,"byte_end":44507,"line_start":96,"line_end":96,"column_start":5,"column_end":14},"name":"Promotion","qualname":"::core::piece_move::MoveFlag::Promotion","value":"MoveFlag::Promotion { capture, prom }","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" The move is a promotion.\n","sig":null,"attributes":[{"value":"/ The move is a promotion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44465,"byte_end":44493,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44700,"byte_end":44706,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"Castle","qualname":"::core::piece_move::MoveFlag::Castle","value":"MoveFlag::Castle { king_side }","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" The move is a castle.\n","sig":null,"attributes":[{"value":"/ The move is a castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44670,"byte_end":44695,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44851,"byte_end":44865,"line_start":108,"line_end":108,"column_start":5,"column_end":19},"name":"DoublePawnPush","qualname":"::core::piece_move::MoveFlag::DoublePawnPush","value":"MoveFlag::DoublePawnPush","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" The move is a double pawn push.\n","sig":null,"attributes":[{"value":"/ The move is a double pawn push.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44811,"byte_end":44846,"line_start":107,"line_end":107,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44909,"byte_end":44916,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"Capture","qualname":"::core::piece_move::MoveFlag::Capture","value":"MoveFlag::Capture { ep_capture }","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" The move is a capturing move.\n","sig":null,"attributes":[{"value":"/ The move is a capturing move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44871,"byte_end":44904,"line_start":109,"line_end":109,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45113,"byte_end":45122,"line_start":115,"line_end":115,"column_start":5,"column_end":14},"name":"QuietMove","qualname":"::core::piece_move::MoveFlag::QuietMove","value":"MoveFlag::QuietMove","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":" The move is a quiet move. This means its not a capture, promotion, castle, or double-pawn push.\n","sig":null,"attributes":[{"value":"/ The move is a quiet move. This means its not a capture, promotion, castle, or double-pawn push.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45009,"byte_end":45108,"line_start":114,"line_end":114,"column_start":5,"column_end":104}}]},{"kind":"Enum","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44450,"byte_end":44458,"line_start":94,"line_end":94,"column_start":10,"column_end":18},"name":"MoveFlag","qualname":"::core::piece_move::MoveFlag","value":"pub enum MoveFlag {\n    Promotion {\n        capture: bool,\n        prom: PieceType,\n    },\n    Castle {\n        king_side: bool,\n    },\n    DoublePawnPush,\n    Capture {\n        ep_capture: bool,\n    },\n    QuietMove,\n}","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2539},{"krate":0,"index":2541},{"krate":0,"index":2543}],"decl_id":null,"docs":" Selected Meta-Data to accompany each move.\n","sig":null,"attributes":[{"value":"/ Selected Meta-Data to accompany each move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":44360,"byte_end":44406,"line_start":92,"line_end":92,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45365,"byte_end":45371,"line_start":123,"line_end":123,"column_start":5,"column_end":11},"name":"Normal","qualname":"::core::piece_move::MoveType::Normal","value":"MoveType::Normal","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":" The move is \"Normal\", So its not a castle, promotion, or en-passant.\n","sig":null,"attributes":[{"value":"/ The move is \"Normal\", So its not a castle, promotion, or en-passant.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45288,"byte_end":45360,"line_start":122,"line_end":122,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45428,"byte_end":45434,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"Castle","qualname":"::core::piece_move::MoveType::Castle","value":"MoveType::Castle","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":" The move is castling move.\n","sig":null,"attributes":[{"value":"/ The move is castling move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45393,"byte_end":45423,"line_start":124,"line_end":124,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45499,"byte_end":45508,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"name":"EnPassant","qualname":"::core::piece_move::MoveType::EnPassant","value":"MoveType::EnPassant","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":" The move is an en-passant capture.\n","sig":null,"attributes":[{"value":"/ The move is an en-passant capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45456,"byte_end":45494,"line_start":126,"line_end":126,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45561,"byte_end":45570,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"Promotion","qualname":"::core::piece_move::MoveType::Promotion","value":"MoveType::Promotion","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":" The move is a promotion.\n","sig":null,"attributes":[{"value":"/ The move is a promotion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45528,"byte_end":45556,"line_start":128,"line_end":128,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45273,"byte_end":45281,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"name":"MoveType","qualname":"::core::piece_move::MoveType","value":"pub enum MoveType { Normal = , Castle = , EnPassant = , Promotion = , }","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562}],"decl_id":null,"docs":" A Subset of `MoveFlag`, used to determine the overall classification of a move.\n","sig":null,"attributes":[{"value":"/ A Subset of `MoveFlag`, used to determine the overall classification of a move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45127,"byte_end":45210,"line_start":118,"line_end":118,"column_start":1,"column_end":84}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45252,"byte_end":45263,"line_start":120,"line_end":120,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45735,"byte_end":45746,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"PreMoveInfo","qualname":"::core::piece_move::PreMoveInfo","value":"PreMoveInfo { src, dst, flags }","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576}],"decl_id":null,"docs":" Useful pre-encoding of a move's information before it is compressed into a `BitMove` struct.\n","sig":null,"attributes":[{"value":"/ Useful pre-encoding of a move's information before it is compressed into a `BitMove` struct.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45593,"byte_end":45689,"line_start":132,"line_end":132,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45810,"byte_end":45813,"line_start":136,"line_end":136,"column_start":9,"column_end":12},"name":"src","qualname":"::core::piece_move::PreMoveInfo::src","value":"core::sq::SQ","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" The square the moving piece originates from.\n","sig":null,"attributes":[{"value":"/ The square the moving piece originates from.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45753,"byte_end":45801,"line_start":135,"line_end":135,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45870,"byte_end":45873,"line_start":138,"line_end":138,"column_start":9,"column_end":12},"name":"dst","qualname":"::core::piece_move::PreMoveInfo::dst","value":"core::sq::SQ","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" The square the piece is moving to.\n","sig":null,"attributes":[{"value":"/ The square the piece is moving to.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45823,"byte_end":45861,"line_start":137,"line_end":137,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45952,"byte_end":45957,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"name":"flags","qualname":"::core::piece_move::PreMoveInfo::flags","value":"core::piece_move::MoveFlag","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" Marks the type of move. E.g, Promotion, Castle, Capture.\n","sig":null,"attributes":[{"value":"/ Marks the type of move. E.g, Promotion, Castle, Capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45883,"byte_end":45943,"line_start":139,"line_end":139,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":63},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46202,"byte_end":46212,"line_start":152,"line_end":152,"column_start":15,"column_end":25},"name":"FLAG_QUIET","qualname":"::core::piece_move::BitMove::FLAG_QUIET","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":64},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46250,"byte_end":46266,"line_start":153,"line_end":153,"column_start":15,"column_end":31},"name":"FLAG_DOUBLE_PAWN","qualname":"::core::piece_move::BitMove::FLAG_DOUBLE_PAWN","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":65},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46298,"byte_end":46314,"line_start":154,"line_end":154,"column_start":15,"column_end":31},"name":"FLAG_KING_CASTLE","qualname":"::core::piece_move::BitMove::FLAG_KING_CASTLE","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46346,"byte_end":46363,"line_start":155,"line_end":155,"column_start":15,"column_end":32},"name":"FLAG_QUEEN_CASTLE","qualname":"::core::piece_move::BitMove::FLAG_QUEEN_CASTLE","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":67},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46394,"byte_end":46406,"line_start":156,"line_end":156,"column_start":15,"column_end":27},"name":"FLAG_CAPTURE","qualname":"::core::piece_move::BitMove::FLAG_CAPTURE","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46442,"byte_end":46449,"line_start":157,"line_end":157,"column_start":15,"column_end":22},"name":"FLAG_EP","qualname":"::core::piece_move::BitMove::FLAG_EP","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46490,"byte_end":46504,"line_start":158,"line_end":158,"column_start":15,"column_end":29},"name":"ILLEGAL_FLAG_1","qualname":"::core::piece_move::BitMove::ILLEGAL_FLAG_1","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":70},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46538,"byte_end":46552,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"ILLEGAL_FLAG_2","qualname":"::core::piece_move::BitMove::ILLEGAL_FLAG_2","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46586,"byte_end":46598,"line_start":160,"line_end":160,"column_start":15,"column_end":27},"name":"FLAG_PROMO_N","qualname":"::core::piece_move::BitMove::FLAG_PROMO_N","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46634,"byte_end":46646,"line_start":161,"line_end":161,"column_start":15,"column_end":27},"name":"FLAG_PROMO_B","qualname":"::core::piece_move::BitMove::FLAG_PROMO_B","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46682,"byte_end":46694,"line_start":162,"line_end":162,"column_start":15,"column_end":27},"name":"FLAG_PROMO_R","qualname":"::core::piece_move::BitMove::FLAG_PROMO_R","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46730,"byte_end":46742,"line_start":163,"line_end":163,"column_start":15,"column_end":27},"name":"FLAG_PROMO_Q","qualname":"::core::piece_move::BitMove::FLAG_PROMO_Q","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46778,"byte_end":46794,"line_start":164,"line_end":164,"column_start":15,"column_end":31},"name":"FLAG_PROMO_CAP_N","qualname":"::core::piece_move::BitMove::FLAG_PROMO_CAP_N","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46826,"byte_end":46842,"line_start":165,"line_end":165,"column_start":15,"column_end":31},"name":"FLAG_PROMO_CAP_B","qualname":"::core::piece_move::BitMove::FLAG_PROMO_CAP_B","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":77},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46874,"byte_end":46890,"line_start":166,"line_end":166,"column_start":15,"column_end":31},"name":"FLAG_PROMO_CAP_R","qualname":"::core::piece_move::BitMove::FLAG_PROMO_CAP_R","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":78},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46922,"byte_end":46938,"line_start":167,"line_end":167,"column_start":15,"column_end":31},"name":"FLAG_PROMO_CAP_Q","qualname":"::core::piece_move::BitMove::FLAG_PROMO_CAP_Q","value":"u16","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47257,"byte_end":47260,"line_start":176,"line_end":176,"column_start":18,"column_end":21},"name":"new","qualname":"<BitMove>::new","value":"pub const fn new(u16) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BitMove from raw bits.","sig":null,"attributes":[{"value":"/ Creates a new BitMove from raw bits.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46961,"byte_end":47001,"line_start":169,"line_end":169,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47006,"byte_end":47009,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47014,"byte_end":47026,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47031,"byte_end":47034,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Using this method cannot guarantee that the move is legal. The input bits must be encoding a legal","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47039,"byte_end":47141,"line_start":173,"line_end":173,"column_start":5,"column_end":107}},{"value":"/ move, or else there is Undefined Behavior if the resulting BitMove is used.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47146,"byte_end":47225,"line_start":174,"line_end":174,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47230,"byte_end":47239,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47434,"byte_end":47444,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"name":"make_quiet","qualname":"<BitMove>::make_quiet","value":"pub const fn make_quiet(SQ, SQ) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Makes a quiet `BitMove` from a source and destination square.\n","sig":null,"attributes":[{"value":"/ Makes a quiet `BitMove` from a source and destination square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47329,"byte_end":47394,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47399,"byte_end":47416,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47647,"byte_end":47661,"line_start":188,"line_end":188,"column_start":18,"column_end":32},"name":"make_pawn_push","qualname":"<BitMove>::make_pawn_push","value":"pub const fn make_pawn_push(SQ, SQ) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Makes a pawn-push `BitMove` from a source and destination square.\n","sig":null,"attributes":[{"value":"/ Makes a pawn-push `BitMove` from a source and destination square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47538,"byte_end":47607,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47612,"byte_end":47629,"line_start":187,"line_end":187,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47884,"byte_end":47896,"line_start":194,"line_end":194,"column_start":18,"column_end":30},"name":"make_capture","qualname":"<BitMove>::make_capture","value":"pub const fn make_capture(SQ, SQ) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Makes a non-enpassant capturing `BitMove` from a source and destination square.\n","sig":null,"attributes":[{"value":"/ Makes a non-enpassant capturing `BitMove` from a source and destination square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47761,"byte_end":47844,"line_start":192,"line_end":192,"column_start":5,"column_end":88}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47849,"byte_end":47866,"line_start":193,"line_end":193,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48102,"byte_end":48117,"line_start":200,"line_end":200,"column_start":18,"column_end":33},"name":"make_ep_capture","qualname":"<BitMove>::make_ep_capture","value":"pub const fn make_ep_capture(SQ, SQ) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Makes an enpassant `BitMove` from a source and destination square.\n","sig":null,"attributes":[{"value":"/ Makes an enpassant `BitMove` from a source and destination square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":47992,"byte_end":48062,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48067,"byte_end":48084,"line_start":199,"line_end":199,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48346,"byte_end":48350,"line_start":207,"line_end":207,"column_start":18,"column_end":22},"name":"make","qualname":"<BitMove>::make","value":"pub const fn make(u16, SQ, SQ) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitMove` from a source and destination square, as well as the current\n flag.\n","sig":null,"attributes":[{"value":"/ Creates a `BitMove` from a source and destination square, as well as the current","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48208,"byte_end":48292,"line_start":204,"line_end":204,"column_start":5,"column_end":89}},{"value":"/ flag.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48297,"byte_end":48306,"line_start":205,"line_end":205,"column_start":5,"column_end":14}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48311,"byte_end":48328,"line_start":206,"line_end":206,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48864,"byte_end":48868,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"init","qualname":"<BitMove>::init","value":"pub fn init(PreMoveInfo) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Creates a BitMove from a `PreMoveInfo`.\n","sig":null,"attributes":[{"value":"/ Creates a BitMove from a `PreMoveInfo`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48795,"byte_end":48838,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":48843,"byte_end":48852,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50032,"byte_end":50036,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"null","qualname":"<BitMove>::null","value":"pub const fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Null Move.","sig":null,"attributes":[{"value":"/ Creates a Null Move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49811,"byte_end":49835,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49840,"byte_end":49843,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49848,"byte_end":49860,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49865,"byte_end":49868,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ A Null move is never a valid move to play. Using a Null move should onl be used for search and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49873,"byte_end":49971,"line_start":259,"line_end":259,"column_start":5,"column_end":103}},{"value":"/ evaluation purposes.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":49976,"byte_end":50000,"line_start":260,"line_end":260,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50005,"byte_end":50014,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50236,"byte_end":50243,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"is_null","qualname":"<BitMove>::is_null","value":"pub const fn is_null(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a Null Move.","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a Null Move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50088,"byte_end":50130,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50135,"byte_end":50138,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ See `BitMove::null()` for more information on Null moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50143,"byte_end":50204,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50209,"byte_end":50218,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50390,"byte_end":50400,"line_start":276,"line_end":276,"column_start":18,"column_end":28},"name":"is_capture","qualname":"<BitMove>::is_capture","value":"pub const fn is_capture(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` captures an opponent's piece.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` captures an opponent's piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50294,"byte_end":50350,"line_start":274,"line_end":274,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50355,"byte_end":50372,"line_start":275,"line_end":275,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50645,"byte_end":50658,"line_start":282,"line_end":282,"column_start":18,"column_end":31},"name":"is_quiet_move","qualname":"<BitMove>::is_quiet_move","value":"pub const fn is_quiet_move(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a Quiet Move, meaning it is not any of the following: a capture, promotion, castle, or double pawn push.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a Quiet Move, meaning it is not any of the following: a capture, promotion, castle, or double pawn push.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50471,"byte_end":50605,"line_start":280,"line_end":280,"column_start":5,"column_end":139}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50610,"byte_end":50627,"line_start":281,"line_end":281,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50793,"byte_end":50801,"line_start":288,"line_end":288,"column_start":18,"column_end":26},"name":"is_promo","qualname":"<BitMove>::is_promo","value":"pub const fn is_promo(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a promotion.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a promotion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50711,"byte_end":50753,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50758,"byte_end":50775,"line_start":287,"line_end":287,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50947,"byte_end":50955,"line_start":294,"line_end":294,"column_start":18,"column_end":26},"name":"get_dest","qualname":"<BitMove>::get_dest","value":"pub const fn get_dest(Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the destination of a `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the destination of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50864,"byte_end":50907,"line_start":292,"line_end":292,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":50912,"byte_end":50929,"line_start":293,"line_end":293,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51095,"byte_end":51106,"line_start":300,"line_end":300,"column_start":18,"column_end":29},"name":"get_dest_u8","qualname":"<BitMove>::get_dest_u8","value":"pub const fn get_dest_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the destination of a `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the destination of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51012,"byte_end":51055,"line_start":298,"line_end":298,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51060,"byte_end":51077,"line_start":299,"line_end":299,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51261,"byte_end":51268,"line_start":306,"line_end":306,"column_start":18,"column_end":25},"name":"get_src","qualname":"<BitMove>::get_src","value":"pub const fn get_src(Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the source square of a `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the source square of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51176,"byte_end":51221,"line_start":304,"line_end":304,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51226,"byte_end":51243,"line_start":305,"line_end":305,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51409,"byte_end":51419,"line_start":312,"line_end":312,"column_start":18,"column_end":28},"name":"get_src_u8","qualname":"<BitMove>::get_src_u8","value":"pub const fn get_src_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the source square of a `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the source square of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51324,"byte_end":51369,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51374,"byte_end":51391,"line_start":311,"line_end":311,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51561,"byte_end":51570,"line_start":318,"line_end":318,"column_start":18,"column_end":27},"name":"is_castle","qualname":"<BitMove>::is_castle","value":"pub const fn is_castle(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a castle.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51482,"byte_end":51521,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51526,"byte_end":51543,"line_start":317,"line_end":317,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51736,"byte_end":51750,"line_start":324,"line_end":324,"column_start":18,"column_end":32},"name":"is_king_castle","qualname":"<BitMove>::is_king_castle","value":"pub const fn is_king_castle(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a Castle && it is a KingSide Castle.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a Castle && it is a KingSide Castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51630,"byte_end":51696,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51701,"byte_end":51718,"line_start":323,"line_end":323,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51934,"byte_end":51949,"line_start":330,"line_end":330,"column_start":18,"column_end":33},"name":"is_queen_castle","qualname":"<BitMove>::is_queen_castle","value":"pub const fn is_queen_castle(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a Castle && it is a QueenSide Castle.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a Castle && it is a QueenSide Castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51827,"byte_end":51894,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":51899,"byte_end":51916,"line_start":329,"line_end":329,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52118,"byte_end":52131,"line_start":336,"line_end":336,"column_start":18,"column_end":31},"name":"is_en_passant","qualname":"<BitMove>::is_en_passant","value":"pub const fn is_en_passant(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is an enpassant capture.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is an enpassant capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52027,"byte_end":52078,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52083,"byte_end":52100,"line_start":335,"line_end":335,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52327,"byte_end":52341,"line_start":342,"line_end":342,"column_start":12,"column_end":26},"name":"is_double_push","qualname":"<BitMove>::is_double_push","value":"pub fn is_double_push(Self) -> (bool, u8)","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `BitMove` is a double push, and if so returns the Destination square as well.\n","sig":null,"attributes":[{"value":"/ Returns if a `BitMove` is a double push, and if so returns the Destination square as well.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52199,"byte_end":52293,"line_start":340,"line_end":340,"column_start":5,"column_end":99}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52298,"byte_end":52315,"line_start":341,"line_end":341,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52690,"byte_end":52698,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"dest_row","qualname":"<BitMove>::dest_row","value":"pub fn dest_row(Self) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rank` (otherwise known as row) that the destination square  of a `BitMove`\n lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `Rank` (otherwise known as row) that the destination square  of a `BitMove`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52548,"byte_end":52639,"line_start":350,"line_end":350,"column_start":5,"column_end":96}},{"value":"/ lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52644,"byte_end":52656,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52661,"byte_end":52678,"line_start":352,"line_end":352,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52973,"byte_end":52981,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"dest_col","qualname":"<BitMove>::dest_col","value":"pub fn dest_col(Self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Returns the `File` (otherwise known as column) that the destination square of a `BitMove`\n lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `File` (otherwise known as column) that the destination square of a `BitMove`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52829,"byte_end":52922,"line_start":358,"line_end":358,"column_start":5,"column_end":98}},{"value":"/ lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52927,"byte_end":52939,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":52944,"byte_end":52961,"line_start":360,"line_end":360,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53166,"byte_end":53173,"line_start":367,"line_end":367,"column_start":12,"column_end":19},"name":"src_row","qualname":"<BitMove>::src_row","value":"pub fn src_row(Self) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rank` (otherwise known as row) that the from-square of a `BitMove` lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `Rank` (otherwise known as row) that the from-square of a `BitMove` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53040,"byte_end":53132,"line_start":365,"line_end":365,"column_start":5,"column_end":97}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53137,"byte_end":53154,"line_start":366,"line_end":366,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53360,"byte_end":53367,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"src_col","qualname":"<BitMove>::src_col","value":"pub fn src_col(Self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Returns the `File` (otherwise known as column) that the from-square of a `BitMove` lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `File` (otherwise known as column) that the from-square of a `BitMove` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53231,"byte_end":53326,"line_start":371,"line_end":371,"column_start":5,"column_end":100}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53331,"byte_end":53348,"line_start":372,"line_end":372,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53649,"byte_end":53660,"line_start":383,"line_end":383,"column_start":12,"column_end":23},"name":"promo_piece","qualname":"<BitMove>::promo_piece","value":"pub fn promo_piece(Self) -> PieceType","parent":null,"children":[],"decl_id":null,"docs":" Returns the Promotion Piece of a [BitMove].","sig":null,"attributes":[{"value":"/ Returns the Promotion Piece of a [BitMove].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53425,"byte_end":53472,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53477,"byte_end":53480,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53485,"byte_end":53497,"line_start":379,"line_end":379,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53502,"byte_end":53505,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Method should only be used if the [BitMove] is a promotion. Otherwise, Undefined Behavior may result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53510,"byte_end":53615,"line_start":381,"line_end":381,"column_start":5,"column_end":110}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53620,"byte_end":53637,"line_start":382,"line_end":382,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53985,"byte_end":53994,"line_start":396,"line_end":396,"column_start":12,"column_end":21},"name":"move_type","qualname":"<BitMove>::move_type","value":"pub fn move_type(Self) -> MoveType","parent":null,"children":[],"decl_id":null,"docs":" Returns the `MoveType` of a `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the `MoveType` of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53909,"byte_end":53951,"line_start":394,"line_end":394,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":53956,"byte_end":53973,"line_start":395,"line_end":395,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54657,"byte_end":54666,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"stringify","qualname":"<BitMove>::stringify","value":"pub fn stringify(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a String representation of a `BitMove`.","sig":null,"attributes":[{"value":"/ Returns a String representation of a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54291,"byte_end":54342,"line_start":409,"line_end":409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54347,"byte_end":54350,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Format goes \"Source Square, Destination Square, (Promo Piece)\". Moving a Queen from A1 to B8","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54355,"byte_end":54451,"line_start":411,"line_end":411,"column_start":5,"column_end":101}},{"value":"/ will stringify to \"a1b8\". If there is a pawn promotion involved, the piece promoted to will be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54456,"byte_end":54554,"line_start":412,"line_end":412,"column_start":5,"column_end":103}},{"value":"/ appended to the end of the string, alike \"a7a8q\" in the case of a queen promotion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":54559,"byte_end":54645,"line_start":413,"line_end":413,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55411,"byte_end":55418,"line_start":439,"line_end":439,"column_start":18,"column_end":25},"name":"get_raw","qualname":"<BitMove>::get_raw","value":"pub const fn get_raw(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw number representation of the move.\n","sig":null,"attributes":[{"value":"/ Returns the raw number representation of the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55317,"byte_end":55371,"line_start":437,"line_end":437,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55376,"byte_end":55393,"line_start":438,"line_end":438,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55576,"byte_end":55590,"line_start":445,"line_end":445,"column_start":12,"column_end":26},"name":"incorrect_flag","qualname":"<BitMove>::incorrect_flag","value":"pub fn incorrect_flag(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the move has an incorrect flag inside, and therefore is invalid.\n","sig":null,"attributes":[{"value":"/ Returns if the move has an incorrect flag inside, and therefore is invalid.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55463,"byte_end":55542,"line_start":443,"line_end":443,"column_start":5,"column_end":84}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55547,"byte_end":55564,"line_start":444,"line_end":444,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55745,"byte_end":55749,"line_start":451,"line_end":451,"column_start":18,"column_end":22},"name":"flag","qualname":"<BitMove>::flag","value":"pub const fn flag(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the 4 bit flag of the `BitMove`.\n","sig":null,"attributes":[{"value":"/ Returns the 4 bit flag of the `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55661,"byte_end":55705,"line_start":449,"line_end":449,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55710,"byte_end":55727,"line_start":450,"line_end":450,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55932,"byte_end":55939,"line_start":458,"line_end":458,"column_start":18,"column_end":25},"name":"is_okay","qualname":"<BitMove>::is_okay","value":"pub const fn is_okay(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the move is within bounds, ala the to and from squares\n are not equal.\n","sig":null,"attributes":[{"value":"/ Returns if the move is within bounds, ala the to and from squares","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55800,"byte_end":55869,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/ are not equal.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55874,"byte_end":55892,"line_start":456,"line_end":456,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":55897,"byte_end":55914,"line_start":457,"line_end":457,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56113,"byte_end":56120,"line_start":464,"line_end":464,"column_start":18,"column_end":25},"name":"from_to","qualname":"<BitMove>::from_to","value":"pub const fn from_to(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns only from \"from\" and \"to\" squares of the move.\n","sig":null,"attributes":[{"value":"/ Returns only from \"from\" and \"to\" squares of the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56015,"byte_end":56073,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56078,"byte_end":56095,"line_start":463,"line_end":463,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56396,"byte_end":56407,"line_start":474,"line_end":474,"column_start":12,"column_end":23},"name":"ScoringMove","qualname":"::core::piece_move::ScoringMove","value":"ScoringMove { bit_move, score }","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586}],"decl_id":null,"docs":" Structure containing both a score (represented as a i16) and a `BitMove`.","sig":null,"attributes":[{"value":"/ Structure containing both a score (represented as a i16) and a `BitMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56178,"byte_end":56255,"line_start":469,"line_end":469,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56256,"byte_end":56259,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ This is useful for tracking a list of moves alongside each of their scores.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56260,"byte_end":56339,"line_start":471,"line_end":471,"column_start":1,"column_end":80}},{"value":"repr(C)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56374,"byte_end":56384,"line_start":473,"line_end":473,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56418,"byte_end":56426,"line_start":475,"line_end":475,"column_start":9,"column_end":17},"name":"bit_move","qualname":"::core::piece_move::ScoringMove::bit_move","value":"core::piece_move::BitMove","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56445,"byte_end":56450,"line_start":476,"line_end":476,"column_start":9,"column_end":14},"name":"score","qualname":"::core::piece_move::ScoringMove::score","value":"i16","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56755,"byte_end":56758,"line_start":492,"line_end":492,"column_start":12,"column_end":15},"name":"new","qualname":"<ScoringMove>::new","value":"pub fn new(BitMove) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ScoringMove` with a default score of 0.\n","sig":null,"attributes":[{"value":"/ Creates a new `ScoringMove` with a default score of 0.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56663,"byte_end":56721,"line_start":490,"line_end":490,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56726,"byte_end":56743,"line_start":491,"line_end":491,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56936,"byte_end":56945,"line_start":501,"line_end":501,"column_start":12,"column_end":21},"name":"new_score","qualname":"<ScoringMove>::new_score","value":"pub fn new_score(BitMove, i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ScoringMove`.\n","sig":null,"attributes":[{"value":"/ Creates a new `ScoringMove`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56870,"byte_end":56902,"line_start":499,"line_end":499,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56907,"byte_end":56924,"line_start":500,"line_end":500,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57185,"byte_end":57190,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"blank","qualname":"<ScoringMove>::blank","value":"pub fn blank(i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ScoringMove` containing a `BitMove::null()` and a user-defined score.\n","sig":null,"attributes":[{"value":"/ Returns a `ScoringMove` containing a `BitMove::null()` and a user-defined score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57067,"byte_end":57151,"line_start":508,"line_end":508,"column_start":5,"column_end":89}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57156,"byte_end":57173,"line_start":509,"line_end":509,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57369,"byte_end":57376,"line_start":519,"line_end":519,"column_start":12,"column_end":19},"name":"bitmove","qualname":"<ScoringMove>::bitmove","value":"pub fn bitmove(Self) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":" Returns the move.\n","sig":null,"attributes":[{"value":"/ Returns the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57314,"byte_end":57335,"line_start":517,"line_end":517,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57340,"byte_end":57357,"line_start":518,"line_end":518,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57485,"byte_end":57490,"line_start":525,"line_end":525,"column_start":12,"column_end":17},"name":"score","qualname":"<ScoringMove>::score","value":"pub fn score(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Returns the score.\n","sig":null,"attributes":[{"value":"/ Returns the score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57429,"byte_end":57451,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57456,"byte_end":57473,"line_start":524,"line_end":524,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57600,"byte_end":57606,"line_start":531,"line_end":531,"column_start":12,"column_end":18},"name":"negate","qualname":"<ScoringMove>::negate","value":"pub fn negate(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the current score.\n","sig":null,"attributes":[{"value":"/ Negates the current score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57536,"byte_end":57566,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57571,"byte_end":57588,"line_start":530,"line_end":530,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57778,"byte_end":57787,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"swap_move","qualname":"<ScoringMove>::swap_move","value":"pub fn swap_move(Self, BitMove) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swaps the current move with another move.\n","sig":null,"attributes":[{"value":"/ Swaps the current move with another move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57699,"byte_end":57744,"line_start":536,"line_end":536,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57749,"byte_end":57766,"line_start":537,"line_end":537,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57994,"byte_end":57998,"line_start":545,"line_end":545,"column_start":18,"column_end":22},"name":"null","qualname":"<ScoringMove>::null","value":"pub const fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ScoringMove` containing a `BitMove::null()` and a score of zero.\n","sig":null,"attributes":[{"value":"/ Returns a `ScoringMove` containing a `BitMove::null()` and a score of zero.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57875,"byte_end":57954,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":57959,"byte_end":57976,"line_start":544,"line_end":544,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":130},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"masks","qualname":"::core::masks","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":226}],"decl_id":null,"docs":" Masks and various other constants.\n","sig":null,"attributes":[{"value":"/ Masks and various other constants.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59079,"byte_end":59117,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":134},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59198,"byte_end":59208,"line_start":6,"line_end":6,"column_start":11,"column_end":21},"name":"PLAYER_CNT","qualname":"::core::masks::PLAYER_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of players on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of players on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59139,"byte_end":59187,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":135},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59288,"byte_end":59302,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"PIECE_TYPE_CNT","qualname":"::core::masks::PIECE_TYPE_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of types of pieces on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of types of pieces on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59221,"byte_end":59277,"line_start":7,"line_end":7,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":136},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59404,"byte_end":59413,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"PIECE_CNT","qualname":"::core::masks::PIECE_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of types of pieces & player combinations on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of types of pieces & player combinations on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59315,"byte_end":59393,"line_start":9,"line_end":9,"column_start":1,"column_end":79}}]},{"kind":"Const","id":{"krate":0,"index":137},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59486,"byte_end":59492,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"SQ_CNT","qualname":"::core::masks::SQ_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of squares on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of squares on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59427,"byte_end":59475,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59563,"byte_end":59571,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"FILE_CNT","qualname":"::core::masks::FILE_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of files on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of files on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59506,"byte_end":59552,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59641,"byte_end":59649,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"RANK_CNT","qualname":"::core::masks::RANK_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of ranks on a chessboard.\n","sig":null,"attributes":[{"value":"/ The total number of ranks on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59584,"byte_end":59630,"line_start":15,"line_end":15,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":140},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59736,"byte_end":59745,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"PHASE_CNT","qualname":"::core::masks::PHASE_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of game phases, being middle and end game\n","sig":null,"attributes":[{"value":"/ The total number of game phases, being middle and end game","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59663,"byte_end":59725,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":141},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59862,"byte_end":59876,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"name":"CASTLING_SIDES","qualname":"::core::masks::CASTLING_SIDES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of types of castling a player can perform: king side and\n queen side.\n","sig":null,"attributes":[{"value":"/ The total number of types of castling a player can perform: king side and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59758,"byte_end":59835,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ queen side.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59836,"byte_end":59851,"line_start":21,"line_end":21,"column_start":1,"column_end":16}}]},{"kind":"Const","id":{"krate":0,"index":142},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60173,"byte_end":60191,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"TOTAL_CASTLING_CNT","qualname":"::core::masks::TOTAL_CASTLING_CNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of types of castling rights available for a chessboard,\n concerning a singular player. eg, a player either has 1) both K side and\n Q side castling possible, 2) K side castling possible, 3) Q side castling\n possible, or 4) no castling possible.\n","sig":null,"attributes":[{"value":"/ The total number of types of castling rights available for a chessboard,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59889,"byte_end":59965,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ concerning a singular player. eg, a player either has 1) both K side and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":59966,"byte_end":60042,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ Q side castling possible, 2) K side castling possible, 3) Q side castling","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60043,"byte_end":60120,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ possible, or 4) no castling possible.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60121,"byte_end":60162,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":143},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60298,"byte_end":60317,"line_start":29,"line_end":29,"column_start":11,"column_end":30},"name":"ALL_CASTLING_RIGHTS","qualname":"::core::masks::ALL_CASTLING_RIGHTS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of castling rights for both players.\n","sig":null,"attributes":[{"value":"/ Total number of castling rights for both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60234,"byte_end":60287,"line_start":28,"line_end":28,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60443,"byte_end":60453,"line_start":32,"line_end":32,"column_start":11,"column_end":21},"name":"BLACK_SIDE","qualname":"::core::masks::BLACK_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of the black player's side of the board.\n","sig":null,"attributes":[{"value":"/ Bit representation of the black player's side of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60369,"byte_end":60432,"line_start":31,"line_end":31,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":145},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60614,"byte_end":60624,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"WHITE_SIDE","qualname":"::core::masks::WHITE_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of the White player's side of the board.\n","sig":null,"attributes":[{"value":"/ Bit representation of the White player's side of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60540,"byte_end":60603,"line_start":34,"line_end":34,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60756,"byte_end":60762,"line_start":39,"line_end":39,"column_start":11,"column_end":17},"name":"FILE_A","qualname":"::core::masks::FILE_A","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file A.\n","sig":null,"attributes":[{"value":"/ Bit representation of file A.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60712,"byte_end":60745,"line_start":38,"line_end":38,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":147},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60889,"byte_end":60895,"line_start":41,"line_end":41,"column_start":11,"column_end":17},"name":"FILE_B","qualname":"::core::masks::FILE_B","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file B.\n","sig":null,"attributes":[{"value":"/ Bit representation of file B.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60845,"byte_end":60878,"line_start":40,"line_end":40,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":148},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61022,"byte_end":61028,"line_start":43,"line_end":43,"column_start":11,"column_end":17},"name":"FILE_C","qualname":"::core::masks::FILE_C","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file C.\n","sig":null,"attributes":[{"value":"/ Bit representation of file C.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":60978,"byte_end":61011,"line_start":42,"line_end":42,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":149},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61155,"byte_end":61161,"line_start":45,"line_end":45,"column_start":11,"column_end":17},"name":"FILE_D","qualname":"::core::masks::FILE_D","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file D.\n","sig":null,"attributes":[{"value":"/ Bit representation of file D.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61111,"byte_end":61144,"line_start":44,"line_end":44,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":150},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61288,"byte_end":61294,"line_start":47,"line_end":47,"column_start":11,"column_end":17},"name":"FILE_E","qualname":"::core::masks::FILE_E","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file E.\n","sig":null,"attributes":[{"value":"/ Bit representation of file E.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61244,"byte_end":61277,"line_start":46,"line_end":46,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":151},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61421,"byte_end":61427,"line_start":49,"line_end":49,"column_start":11,"column_end":17},"name":"FILE_F","qualname":"::core::masks::FILE_F","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file F.\n","sig":null,"attributes":[{"value":"/ Bit representation of file F.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61377,"byte_end":61410,"line_start":48,"line_end":48,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":152},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61554,"byte_end":61560,"line_start":51,"line_end":51,"column_start":11,"column_end":17},"name":"FILE_G","qualname":"::core::masks::FILE_G","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file H.\n","sig":null,"attributes":[{"value":"/ Bit representation of file H.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61510,"byte_end":61543,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61687,"byte_end":61693,"line_start":53,"line_end":53,"column_start":11,"column_end":17},"name":"FILE_H","qualname":"::core::masks::FILE_H","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of file G.\n","sig":null,"attributes":[{"value":"/ Bit representation of file G.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61643,"byte_end":61676,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61821,"byte_end":61827,"line_start":56,"line_end":56,"column_start":11,"column_end":17},"name":"RANK_1","qualname":"::core::masks::RANK_1","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 1.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 1.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61777,"byte_end":61810,"line_start":55,"line_end":55,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":155},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61902,"byte_end":61908,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"RANK_2","qualname":"::core::masks::RANK_2","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 2.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 2.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61858,"byte_end":61891,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":156},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61983,"byte_end":61989,"line_start":60,"line_end":60,"column_start":11,"column_end":17},"name":"RANK_3","qualname":"::core::masks::RANK_3","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 3.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 3.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":61939,"byte_end":61972,"line_start":59,"line_end":59,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":157},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62064,"byte_end":62070,"line_start":62,"line_end":62,"column_start":11,"column_end":17},"name":"RANK_4","qualname":"::core::masks::RANK_4","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 4.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 4.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62020,"byte_end":62053,"line_start":61,"line_end":61,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":158},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62145,"byte_end":62151,"line_start":64,"line_end":64,"column_start":11,"column_end":17},"name":"RANK_5","qualname":"::core::masks::RANK_5","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 5.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 5.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62101,"byte_end":62134,"line_start":63,"line_end":63,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":159},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62226,"byte_end":62232,"line_start":66,"line_end":66,"column_start":11,"column_end":17},"name":"RANK_6","qualname":"::core::masks::RANK_6","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 6.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 6.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62182,"byte_end":62215,"line_start":65,"line_end":65,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":160},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62307,"byte_end":62313,"line_start":68,"line_end":68,"column_start":11,"column_end":17},"name":"RANK_7","qualname":"::core::masks::RANK_7","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 7.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 7.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62263,"byte_end":62296,"line_start":67,"line_end":67,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62388,"byte_end":62394,"line_start":70,"line_end":70,"column_start":11,"column_end":17},"name":"RANK_8","qualname":"::core::masks::RANK_8","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank 8.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank 8.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62344,"byte_end":62377,"line_start":69,"line_end":69,"column_start":1,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62481,"byte_end":62493,"line_start":73,"line_end":73,"column_start":11,"column_end":23},"name":"DARK_SQUARES","qualname":"::core::masks::DARK_SQUARES","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of rank dark squares.\n","sig":null,"attributes":[{"value":"/ Bit representation of rank dark squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62426,"byte_end":62470,"line_start":72,"line_end":72,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62576,"byte_end":62589,"line_start":75,"line_end":75,"column_start":11,"column_end":24},"name":"LIGHT_SQUARES","qualname":"::core::masks::LIGHT_SQUARES","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of all light squares.\n","sig":null,"attributes":[{"value":"/ Bit representation of all light squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62521,"byte_end":62565,"line_start":74,"line_end":74,"column_start":1,"column_end":45}}]},{"kind":"Static","id":{"krate":0,"index":164},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62712,"byte_end":62719,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"FILE_BB","qualname":"::core::masks::FILE_BB","value":"[u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of all files and their corresponding bits, indexed from\n file A to file H.\n","sig":null,"attributes":[{"value":"/ Array of all files and their corresponding bits, indexed from","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62613,"byte_end":62678,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ file A to file H.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62679,"byte_end":62700,"line_start":78,"line_end":78,"column_start":1,"column_end":22}}]},{"kind":"Static","id":{"krate":0,"index":166},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62940,"byte_end":62947,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"RANK_BB","qualname":"::core::masks::RANK_BB","value":"[u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of all ranks and their corresponding bits, indexed from\n rank 1 to rank 8.\n","sig":null,"attributes":[{"value":"/ Array of all ranks and their corresponding bits, indexed from","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62841,"byte_end":62906,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ rank 1 to rank 8.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":62907,"byte_end":62928,"line_start":91,"line_end":91,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":168},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63125,"byte_end":63130,"line_start":104,"line_end":104,"column_start":11,"column_end":16},"name":"NORTH","qualname":"::core::masks::NORTH","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going north on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going north on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63069,"byte_end":63114,"line_start":103,"line_end":103,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":169},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63196,"byte_end":63201,"line_start":106,"line_end":106,"column_start":11,"column_end":16},"name":"SOUTH","qualname":"::core::masks::SOUTH","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going south on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going south on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63140,"byte_end":63185,"line_start":105,"line_end":105,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":170},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63267,"byte_end":63271,"line_start":108,"line_end":108,"column_start":11,"column_end":15},"name":"WEST","qualname":"::core::masks::WEST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going west on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going west on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63212,"byte_end":63256,"line_start":107,"line_end":107,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":171},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63337,"byte_end":63341,"line_start":110,"line_end":110,"column_start":11,"column_end":15},"name":"EAST","qualname":"::core::masks::EAST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going east on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going east on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63282,"byte_end":63326,"line_start":109,"line_end":109,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":172},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63412,"byte_end":63422,"line_start":113,"line_end":113,"column_start":11,"column_end":21},"name":"NORTH_EAST","qualname":"::core::masks::NORTH_EAST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going northeast on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going northeast on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63352,"byte_end":63401,"line_start":112,"line_end":112,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":173},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63492,"byte_end":63502,"line_start":115,"line_end":115,"column_start":11,"column_end":21},"name":"NORTH_WEST","qualname":"::core::masks::NORTH_WEST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going northwest on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going northwest on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63432,"byte_end":63481,"line_start":114,"line_end":114,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":174},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63572,"byte_end":63582,"line_start":117,"line_end":117,"column_start":11,"column_end":21},"name":"SOUTH_EAST","qualname":"::core::masks::SOUTH_EAST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going southeast on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going southeast on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63512,"byte_end":63561,"line_start":116,"line_end":116,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":175},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63653,"byte_end":63663,"line_start":119,"line_end":119,"column_start":11,"column_end":21},"name":"SOUTH_WEST","qualname":"::core::masks::SOUTH_WEST","value":"i8","parent":null,"children":[],"decl_id":null,"docs":" Direction of going southwest on a chessboard.\n","sig":null,"attributes":[{"value":"/ Direction of going southwest on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63593,"byte_end":63642,"line_start":118,"line_end":118,"column_start":1,"column_end":50}}]},{"kind":"Static","id":{"krate":0,"index":176},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63744,"byte_end":63760,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"START_OCC_BOARDS","qualname":"::core::masks::START_OCC_BOARDS","value":"[u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Array for starting occupancy boards for both players.\n","sig":null,"attributes":[{"value":"/ Array for starting occupancy boards for both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63675,"byte_end":63732,"line_start":121,"line_end":121,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":178},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63886,"byte_end":63898,"line_start":125,"line_end":125,"column_start":11,"column_end":23},"name":"START_W_PAWN","qualname":"::core::masks::START_W_PAWN","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a white pawn.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a white pawn.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63819,"byte_end":63875,"line_start":124,"line_end":124,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":179},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64054,"byte_end":64068,"line_start":128,"line_end":128,"column_start":11,"column_end":25},"name":"START_W_KNIGHT","qualname":"::core::masks::START_W_KNIGHT","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a white knight.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a white knight.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":63985,"byte_end":64043,"line_start":127,"line_end":127,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64225,"byte_end":64239,"line_start":131,"line_end":131,"column_start":11,"column_end":25},"name":"START_W_BISHOP","qualname":"::core::masks::START_W_BISHOP","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Array for starting occupancy boards for a white bishop.\n","sig":null,"attributes":[{"value":"/ Array for starting occupancy boards for a white bishop.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64155,"byte_end":64214,"line_start":130,"line_end":130,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":181},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64393,"byte_end":64405,"line_start":134,"line_end":134,"column_start":11,"column_end":23},"name":"START_W_ROOK","qualname":"::core::masks::START_W_ROOK","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a white rook.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a white rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64326,"byte_end":64382,"line_start":133,"line_end":133,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":182},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64560,"byte_end":64573,"line_start":137,"line_end":137,"column_start":11,"column_end":24},"name":"START_W_QUEEN","qualname":"::core::masks::START_W_QUEEN","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a white queen.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a white queen.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64492,"byte_end":64549,"line_start":136,"line_end":136,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":183},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64727,"byte_end":64739,"line_start":140,"line_end":140,"column_start":11,"column_end":23},"name":"START_W_KING","qualname":"::core::masks::START_W_KING","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a white king.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a white king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64660,"byte_end":64716,"line_start":139,"line_end":139,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64894,"byte_end":64906,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"START_B_PAWN","qualname":"::core::masks::START_B_PAWN","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black pawn.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black pawn.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64827,"byte_end":64883,"line_start":143,"line_end":143,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":185},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65062,"byte_end":65076,"line_start":147,"line_end":147,"column_start":11,"column_end":25},"name":"START_B_KNIGHT","qualname":"::core::masks::START_B_KNIGHT","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black knight.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black knight.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":64993,"byte_end":65051,"line_start":146,"line_end":146,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65232,"byte_end":65246,"line_start":150,"line_end":150,"column_start":11,"column_end":25},"name":"START_B_BISHOP","qualname":"::core::masks::START_B_BISHOP","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black bishop.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black bishop.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65163,"byte_end":65221,"line_start":149,"line_end":149,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65400,"byte_end":65412,"line_start":153,"line_end":153,"column_start":11,"column_end":23},"name":"START_B_ROOK","qualname":"::core::masks::START_B_ROOK","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black rook.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65333,"byte_end":65389,"line_start":152,"line_end":152,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65567,"byte_end":65580,"line_start":156,"line_end":156,"column_start":11,"column_end":24},"name":"START_B_QUEEN","qualname":"::core::masks::START_B_QUEEN","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black queen.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black queen.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65499,"byte_end":65556,"line_start":155,"line_end":155,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":189},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65734,"byte_end":65746,"line_start":159,"line_end":159,"column_start":11,"column_end":23},"name":"START_B_KING","qualname":"::core::masks::START_B_KING","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for starting occupancy boards for a black king.\n","sig":null,"attributes":[{"value":"/ Bits for starting occupancy boards for a black king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65667,"byte_end":65723,"line_start":158,"line_end":158,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65908,"byte_end":65923,"line_start":163,"line_end":163,"column_start":11,"column_end":26},"name":"START_WHITE_OCC","qualname":"::core::masks::START_WHITE_OCC","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for the starting occupancy board for the white player.\n","sig":null,"attributes":[{"value":"/ Bits for the starting occupancy board for the white player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":65834,"byte_end":65897,"line_start":162,"line_end":162,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66084,"byte_end":66099,"line_start":166,"line_end":166,"column_start":11,"column_end":26},"name":"START_BLACK_OCC","qualname":"::core::masks::START_BLACK_OCC","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for the starting occupancy board for the black player.\n","sig":null,"attributes":[{"value":"/ Bits for the starting occupancy board for the black player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66010,"byte_end":66073,"line_start":165,"line_end":165,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66256,"byte_end":66269,"line_start":169,"line_end":169,"column_start":11,"column_end":24},"name":"START_OCC_ALL","qualname":"::core::masks::START_OCC_ALL","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits for the starting occupancy board for both players.\n","sig":null,"attributes":[{"value":"/ Bits for the starting occupancy board for both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66186,"byte_end":66245,"line_start":168,"line_end":168,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66369,"byte_end":66385,"line_start":172,"line_end":172,"column_start":11,"column_end":27},"name":"WHITE_KING_START","qualname":"::core::masks::WHITE_KING_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the white king.\n","sig":null,"attributes":[{"value":"/ Starting square number of the white king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66313,"byte_end":66358,"line_start":171,"line_end":171,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66451,"byte_end":66467,"line_start":174,"line_end":174,"column_start":11,"column_end":27},"name":"BLACK_KING_START","qualname":"::core::masks::BLACK_KING_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the black king.\n","sig":null,"attributes":[{"value":"/ Starting square number of the black king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66395,"byte_end":66440,"line_start":173,"line_end":173,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66545,"byte_end":66567,"line_start":177,"line_end":177,"column_start":11,"column_end":33},"name":"ROOK_BLACK_KSIDE_START","qualname":"::core::masks::ROOK_BLACK_KSIDE_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the black king-side rook.\n","sig":null,"attributes":[{"value":"/ Starting square number of the black king-side rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66479,"byte_end":66534,"line_start":176,"line_end":176,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66645,"byte_end":66667,"line_start":179,"line_end":179,"column_start":11,"column_end":33},"name":"ROOK_BLACK_QSIDE_START","qualname":"::core::masks::ROOK_BLACK_QSIDE_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the black queen-side rook.\n","sig":null,"attributes":[{"value":"/ Starting square number of the black queen-side rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66578,"byte_end":66634,"line_start":178,"line_end":178,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66744,"byte_end":66766,"line_start":181,"line_end":181,"column_start":11,"column_end":33},"name":"ROOK_WHITE_KSIDE_START","qualname":"::core::masks::ROOK_WHITE_KSIDE_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the white king-side rook.\n","sig":null,"attributes":[{"value":"/ Starting square number of the white king-side rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66678,"byte_end":66733,"line_start":180,"line_end":180,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66843,"byte_end":66865,"line_start":183,"line_end":183,"column_start":11,"column_end":33},"name":"ROOK_WHITE_QSIDE_START","qualname":"::core::masks::ROOK_WHITE_QSIDE_START","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Starting square number of the white queen-side rook.\n","sig":null,"attributes":[{"value":"/ Starting square number of the white queen-side rook.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66776,"byte_end":66832,"line_start":182,"line_end":182,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66968,"byte_end":66982,"line_start":186,"line_end":186,"column_start":11,"column_end":25},"name":"C_WHITE_K_MASK","qualname":"::core::masks::C_WHITE_K_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Castling right bit representing the white king-side castle is still possible.\n","sig":null,"attributes":[{"value":"/ Castling right bit representing the white king-side castle is still possible.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":66876,"byte_end":66957,"line_start":185,"line_end":185,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67095,"byte_end":67109,"line_start":188,"line_end":188,"column_start":11,"column_end":25},"name":"C_WHITE_Q_MASK","qualname":"::core::masks::C_WHITE_Q_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Castling right bit representing the white queen-side castle is still possible.\n","sig":null,"attributes":[{"value":"/ Castling right bit representing the white queen-side castle is still possible.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67002,"byte_end":67084,"line_start":187,"line_end":187,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67221,"byte_end":67235,"line_start":190,"line_end":190,"column_start":11,"column_end":25},"name":"C_BLACK_K_MASK","qualname":"::core::masks::C_BLACK_K_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Castling right bit representing the black king-side castle is still possible.\n","sig":null,"attributes":[{"value":"/ Castling right bit representing the black king-side castle is still possible.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67129,"byte_end":67210,"line_start":189,"line_end":189,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67348,"byte_end":67362,"line_start":192,"line_end":192,"column_start":11,"column_end":25},"name":"C_BLACK_Q_MASK","qualname":"::core::masks::C_BLACK_Q_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Castling right bit representing the black queen-side castle is still possible.\n","sig":null,"attributes":[{"value":"/ Castling right bit representing the black queen-side castle is still possible.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67255,"byte_end":67337,"line_start":191,"line_end":191,"column_start":1,"column_end":83}}]},{"kind":"Static","id":{"krate":0,"index":203},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67479,"byte_end":67498,"line_start":195,"line_end":195,"column_start":12,"column_end":31},"name":"CASTLING_ROOK_START","qualname":"::core::masks::CASTLING_ROOK_START","value":"[[u8; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Array containing all the starting rook positions for each side, for each player.\n","sig":null,"attributes":[{"value":"/ Array containing all the starting rook positions for each side, for each player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67383,"byte_end":67467,"line_start":194,"line_end":194,"column_start":1,"column_end":85}}]},{"kind":"Const","id":{"krate":0,"index":206},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67747,"byte_end":67773,"line_start":202,"line_end":202,"column_start":11,"column_end":37},"name":"CASTLING_PATH_WHITE_K_SIDE","qualname":"::core::masks::CASTLING_PATH_WHITE_K_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits representing the castling path for a white king-side castle.\n","sig":null,"attributes":[{"value":"/ Bits representing the castling path for a white king-side castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67667,"byte_end":67736,"line_start":201,"line_end":201,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":207},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67929,"byte_end":67955,"line_start":205,"line_end":205,"column_start":11,"column_end":37},"name":"CASTLING_PATH_WHITE_Q_SIDE","qualname":"::core::masks::CASTLING_PATH_WHITE_Q_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits representing the castling path for a white queen-side castle.\n","sig":null,"attributes":[{"value":"/ Bits representing the castling path for a white queen-side castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":67848,"byte_end":67918,"line_start":204,"line_end":204,"column_start":1,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":208},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68147,"byte_end":68173,"line_start":210,"line_end":210,"column_start":11,"column_end":37},"name":"CASTLING_PATH_BLACK_K_SIDE","qualname":"::core::masks::CASTLING_PATH_BLACK_K_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits representing the castling path for a black king-side castle.\n","sig":null,"attributes":[{"value":"/ Bits representing the castling path for a black king-side castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68067,"byte_end":68136,"line_start":209,"line_end":209,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68329,"byte_end":68355,"line_start":213,"line_end":213,"column_start":11,"column_end":37},"name":"CASTLING_PATH_BLACK_Q_SIDE","qualname":"::core::masks::CASTLING_PATH_BLACK_Q_SIDE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Bits representing the castling path for a black queen-side castle.\n","sig":null,"attributes":[{"value":"/ Bits representing the castling path for a black queen-side castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68248,"byte_end":68318,"line_start":212,"line_end":212,"column_start":1,"column_end":71}}]},{"kind":"Static","id":{"krate":0,"index":210},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68612,"byte_end":68631,"line_start":219,"line_end":219,"column_start":12,"column_end":31},"name":"CASTLING_PATH_WHITE","qualname":"::core::masks::CASTLING_PATH_WHITE","value":"[u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Array for the bits representing the castling path for a white castle, indexed\n per the side available (king-side, queen-side).\n","sig":null,"attributes":[{"value":"/ Array for the bits representing the castling path for a white castle, indexed","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68467,"byte_end":68548,"line_start":217,"line_end":217,"column_start":1,"column_end":82}},{"value":"/ per the side available (king-side, queen-side).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68549,"byte_end":68600,"line_start":218,"line_end":218,"column_start":1,"column_end":52}}]},{"kind":"Static","id":{"krate":0,"index":212},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68865,"byte_end":68884,"line_start":224,"line_end":224,"column_start":12,"column_end":31},"name":"CASTLING_PATH_BLACK","qualname":"::core::masks::CASTLING_PATH_BLACK","value":"[u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Array for the bits representing the castling path for a white castle, indexed\n per the side available (king-side, queen-side).\n","sig":null,"attributes":[{"value":"/ Array for the bits representing the castling path for a white castle, indexed","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68720,"byte_end":68801,"line_start":222,"line_end":222,"column_start":1,"column_end":82}},{"value":"/ per the side available (king-side, queen-side).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68802,"byte_end":68853,"line_start":223,"line_end":223,"column_start":1,"column_end":52}}]},{"kind":"Static","id":{"krate":0,"index":214},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69141,"byte_end":69154,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"CASTLING_PATH","qualname":"::core::masks::CASTLING_PATH","value":"[[u64; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Array for the bits representing the castling path for castle, indexed\n per the side available (king-side, queen-side), as well as indexed per player.\n","sig":null,"attributes":[{"value":"/ Array for the bits representing the castling path for castle, indexed","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":68973,"byte_end":69046,"line_start":227,"line_end":227,"column_start":1,"column_end":74}},{"value":"/ per the side available (king-side, queen-side), as well as indexed per player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69047,"byte_end":69129,"line_start":228,"line_end":228,"column_start":1,"column_end":83}}]},{"kind":"Static","id":{"krate":0,"index":217},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69470,"byte_end":69486,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"SQ_DISPLAY_ORDER","qualname":"::core::masks::SQ_DISPLAY_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Display order for a squares. Used for printing, and for answering the question\n of which square to print first.\n","sig":null,"attributes":[{"value":"/ Display order for a squares. Used for printing, and for answering the question","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69340,"byte_end":69422,"line_start":235,"line_end":235,"column_start":1,"column_end":83}},{"value":"/ of which square to print first.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69423,"byte_end":69458,"line_start":236,"line_end":236,"column_start":1,"column_end":36}}]},{"kind":"Static","id":{"krate":0,"index":219},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70056,"byte_end":70066,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"SQ_DISPLAY","qualname":"::core::masks::SQ_DISPLAY","value":"[&str; ]","parent":null,"children":[],"decl_id":null,"docs":" Array mapping a square index to a string representation.","sig":null,"attributes":[{"value":"/ Array mapping a square index to a string representation.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69790,"byte_end":69850,"line_start":246,"line_end":246,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69851,"byte_end":69854,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69855,"byte_end":69869,"line_start":248,"line_end":248,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69870,"byte_end":69873,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69874,"byte_end":69881,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::masks::SQ_DISPLAY;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69882,"byte_end":69921,"line_start":251,"line_end":251,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69922,"byte_end":69925,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(SQ_DISPLAY[0], \"a1\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69926,"byte_end":69962,"line_start":253,"line_end":253,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(SQ_DISPLAY[1], \"b1\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":69963,"byte_end":69999,"line_start":254,"line_end":254,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(SQ_DISPLAY[8], \"a2\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70000,"byte_end":70036,"line_start":255,"line_end":255,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70037,"byte_end":70044,"line_start":256,"line_end":256,"column_start":1,"column_end":8}}]},{"kind":"Static","id":{"krate":0,"index":221},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70664,"byte_end":70678,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"PIECE_DISPLAYS","qualname":"::core::masks::PIECE_DISPLAYS","value":"[[char; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Characters for each combination of player and piece.","sig":null,"attributes":[{"value":"/ Characters for each combination of player and piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70505,"byte_end":70561,"line_start":267,"line_end":267,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70562,"byte_end":70565,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ White pieces are displayed as Uppercase letters, while black pieces are lowercase.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70566,"byte_end":70652,"line_start":269,"line_end":269,"column_start":1,"column_end":87}}]},{"kind":"Static","id":{"krate":0,"index":224},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71086,"byte_end":71099,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"FILE_DISPLAYS","qualname":"::core::masks::FILE_DISPLAYS","value":"[char; ]","parent":null,"children":[],"decl_id":null,"docs":" Characters for each file, index from file A to file H.\n # Examples","sig":null,"attributes":[{"value":"/ Characters for each file, index from file A to file H.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70817,"byte_end":70875,"line_start":275,"line_end":275,"column_start":1,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70876,"byte_end":70890,"line_start":276,"line_end":276,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70891,"byte_end":70894,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70895,"byte_end":70902,"line_start":278,"line_end":278,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::masks::FILE_DISPLAYS;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70903,"byte_end":70945,"line_start":279,"line_end":279,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70946,"byte_end":70949,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(FILE_DISPLAYS[0], 'a');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70950,"byte_end":70988,"line_start":281,"line_end":281,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(FILE_DISPLAYS[1], 'b');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":70989,"byte_end":71027,"line_start":282,"line_end":282,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(FILE_DISPLAYS[7], 'h');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71028,"byte_end":71066,"line_start":283,"line_end":283,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71067,"byte_end":71074,"line_start":284,"line_end":284,"column_start":1,"column_end":8}}]},{"kind":"Static","id":{"krate":0,"index":226},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71436,"byte_end":71449,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"RANK_DISPLAYS","qualname":"::core::masks::RANK_DISPLAYS","value":"[char; ]","parent":null,"children":[],"decl_id":null,"docs":" Characters for each rank, index from rank 1 to rank 8.","sig":null,"attributes":[{"value":"/ Characters for each rank, index from rank 1 to rank 8.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71163,"byte_end":71221,"line_start":287,"line_end":287,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71222,"byte_end":71225,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71226,"byte_end":71240,"line_start":289,"line_end":289,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71241,"byte_end":71244,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71245,"byte_end":71252,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use pleco::core::masks::RANK_DISPLAYS;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71253,"byte_end":71295,"line_start":292,"line_end":292,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71296,"byte_end":71299,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(RANK_DISPLAYS[0], '1');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71300,"byte_end":71338,"line_start":294,"line_end":294,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(RANK_DISPLAYS[1], '2');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71339,"byte_end":71377,"line_start":295,"line_end":295,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(RANK_DISPLAYS[7], '8');","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71378,"byte_end":71416,"line_start":296,"line_end":296,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/masks.rs","byte_start":71417,"byte_end":71424,"line_start":297,"line_end":297,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mono_traits","qualname":"::core::mono_traits","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":287},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":362}],"decl_id":null,"docs":" Traits and Dummy Types defined for various Enum types. Shouldn't be used in place\n of their enum representations.","sig":null,"attributes":[{"value":"/ Traits and Dummy Types defined for various Enum types. Shouldn't be used in place","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":71811,"byte_end":71896,"line_start":1,"line_end":1,"column_start":1,"column_end":86}},{"value":"/ of their enum representations.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":71897,"byte_end":71931,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":71932,"byte_end":71935,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This modules only use is to allow for compile-time mono-morphization of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":71936,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ functions / methods, where each method created can be optimized further.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72012,"byte_end":72088,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72089,"byte_end":72092,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ We are awaiting the stabilization of `const fn` and constant generics to remove these traits.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72093,"byte_end":72190,"line_start":7,"line_end":7,"column_start":1,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72525,"byte_end":72536,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"PlayerTrait","qualname":"::core::mono_traits::PlayerTrait","value":"PlayerTrait","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Defines a Player Trait, allowing for specific functions in relation\n to a certain player.","sig":null,"attributes":[{"value":"/ Defines a Player Trait, allowing for specific functions in relation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72285,"byte_end":72356,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ to a certain player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72357,"byte_end":72381,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72382,"byte_end":72385,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ These shouldn't be used in place of `Player`, as they are only used for","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72386,"byte_end":72461,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ compile-time optimizations of certain functions.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72462,"byte_end":72514,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72583,"byte_end":72589,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"player","qualname":"::core::mono_traits::PlayerTrait::player","value":"pub fn player() -> Player","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the current `Player`.\n","sig":null,"attributes":[{"value":"/ Return the current `Player`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72543,"byte_end":72575,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72649,"byte_end":72659,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"opp_player","qualname":"::core::mono_traits::PlayerTrait::opp_player","value":"pub fn opp_player() -> Player","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the opposing `Player`.\n","sig":null,"attributes":[{"value":"/ Return the opposing `Player`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72608,"byte_end":72641,"line_start":22,"line_end":22,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72721,"byte_end":72731,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"player_idx","qualname":"::core::mono_traits::PlayerTrait::player_idx","value":"pub fn player_idx() -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the index of the player\n","sig":null,"attributes":[{"value":"/ Returns the index of the player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72678,"byte_end":72713,"line_start":25,"line_end":25,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72835,"byte_end":72839,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"down","qualname":"::core::mono_traits::PlayerTrait::down","value":"pub fn down(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is down relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is down relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72749,"byte_end":72827,"line_start":28,"line_end":28,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72944,"byte_end":72946,"line_start":32,"line_end":32,"column_start":8,"column_end":10},"name":"up","qualname":"::core::mono_traits::PlayerTrait::up","value":"pub fn up(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is up relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is up relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72860,"byte_end":72936,"line_start":31,"line_end":31,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73053,"byte_end":73057,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"left","qualname":"::core::mono_traits::PlayerTrait::left","value":"pub fn left(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is left relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is left relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":72967,"byte_end":73045,"line_start":34,"line_end":34,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73165,"byte_end":73170,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"right","qualname":"::core::mono_traits::PlayerTrait::right","value":"pub fn right(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is right relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is right relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73078,"byte_end":73157,"line_start":37,"line_end":37,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73282,"byte_end":73291,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"down_left","qualname":"::core::mono_traits::PlayerTrait::down_left","value":"pub fn down_left(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is down-left relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is down-left relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73191,"byte_end":73274,"line_start":40,"line_end":40,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73404,"byte_end":73414,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"down_right","qualname":"::core::mono_traits::PlayerTrait::down_right","value":"pub fn down_right(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is down-right relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is down-right relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73312,"byte_end":73396,"line_start":43,"line_end":43,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73525,"byte_end":73532,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"up_left","qualname":"::core::mono_traits::PlayerTrait::up_left","value":"pub fn up_left(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is up-right relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is up-right relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73435,"byte_end":73517,"line_start":46,"line_end":46,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73643,"byte_end":73651,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"up_right","qualname":"::core::mono_traits::PlayerTrait::up_right","value":"pub fn up_right(SQ) -> SQ","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Given a `SQ`, return a square that is up-right relative to the current player.\n","sig":null,"attributes":[{"value":"/ Given a `SQ`, return a square that is up-right relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73553,"byte_end":73635,"line_start":49,"line_end":49,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73755,"byte_end":73765,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"shift_down","qualname":"::core::mono_traits::PlayerTrait::shift_down","value":"pub fn shift_down(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"down\" relative to the current player.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"down\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73672,"byte_end":73747,"line_start":52,"line_end":52,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73879,"byte_end":73887,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"shift_up","qualname":"::core::mono_traits::PlayerTrait::shift_up","value":"pub fn shift_up(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"up\" relative to the current player.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"up\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73798,"byte_end":73871,"line_start":55,"line_end":55,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74062,"byte_end":74072,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"shift_left","qualname":"::core::mono_traits::PlayerTrait::shift_left","value":"pub fn shift_left(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"left\" relative to the current player. Does not\n include the left-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"left\" relative to the current player. Does not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":73920,"byte_end":74004,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ include the left-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74009,"byte_end":74054,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74248,"byte_end":74259,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"shift_right","qualname":"::core::mono_traits::PlayerTrait::shift_right","value":"pub fn shift_right(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"right\" relative to the current player. Does not\n include the left-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"right\" relative to the current player. Does not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74105,"byte_end":74190,"line_start":62,"line_end":62,"column_start":5,"column_end":90}},{"value":"/ include the left-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74195,"byte_end":74240,"line_start":63,"line_end":63,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74445,"byte_end":74460,"line_start":68,"line_end":68,"column_start":8,"column_end":23},"name":"shift_down_left","qualname":"::core::mono_traits::PlayerTrait::shift_down_left","value":"pub fn shift_down_left(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"left\" and \"down\" relative to the current player.\n Does not include the left-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"left\" and \"down\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74292,"byte_end":74378,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ Does not include the left-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74383,"byte_end":74437,"line_start":67,"line_end":67,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74648,"byte_end":74664,"line_start":72,"line_end":72,"column_start":8,"column_end":24},"name":"shift_down_right","qualname":"::core::mono_traits::PlayerTrait::shift_down_right","value":"pub fn shift_down_right(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"right\" and \"down\" relative to the current player.\n Does not include the right-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"right\" and \"down\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74493,"byte_end":74580,"line_start":70,"line_end":70,"column_start":5,"column_end":92}},{"value":"/ Does not include the right-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74585,"byte_end":74640,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74848,"byte_end":74861,"line_start":76,"line_end":76,"column_start":8,"column_end":21},"name":"shift_up_left","qualname":"::core::mono_traits::PlayerTrait::shift_up_left","value":"pub fn shift_up_left(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"left\" and \"up\" relative to the current player.\n Does not include the left-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"left\" and \"up\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74697,"byte_end":74781,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/ Does not include the left-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74786,"byte_end":74840,"line_start":75,"line_end":75,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75047,"byte_end":75061,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"shift_up_right","qualname":"::core::mono_traits::PlayerTrait::shift_up_right","value":"pub fn shift_up_right(BitBoard) -> BitBoard","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Return the same BitBoard shifted \"right\" and \"up\" relative to the current player.\n Does not include the right-most file in the result.\n","sig":null,"attributes":[{"value":"/ Return the same BitBoard shifted \"right\" and \"up\" relative to the current player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74894,"byte_end":74979,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/ Does not include the right-most file in the result.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":74984,"byte_end":75039,"line_start":79,"line_end":79,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75181,"byte_end":75190,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"WhiteType","qualname":"::core::mono_traits::WhiteType","value":"WhiteType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Player::White` which implements `PlayerTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Player::White` which implements `PlayerTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75092,"byte_end":75169,"line_start":83,"line_end":83,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75284,"byte_end":75293,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"BlackType","qualname":"::core::mono_traits::BlackType","value":"BlackType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Player::Black` which implements `PlayerTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Player::Black` which implements `PlayerTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75195,"byte_end":75272,"line_start":86,"line_end":86,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":307},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78834,"byte_end":78846,"line_start":232,"line_end":232,"column_start":11,"column_end":23},"name":"GenTypeTrait","qualname":"::core::mono_traits::GenTypeTrait","value":"GenTypeTrait","parent":null,"children":[{"krate":0,"index":308}],"decl_id":null,"docs":" A `GenTypeTrait` allows for specific functions in relation\n to a certain type of move generation.","sig":null,"attributes":[{"value":"/ A `GenTypeTrait` allows for specific functions in relation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78553,"byte_end":78615,"line_start":226,"line_end":226,"column_start":1,"column_end":63}},{"value":"/ to a certain type of move generation.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78616,"byte_end":78657,"line_start":227,"line_end":227,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78658,"byte_end":78661,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Alike `PlayerTrait`, `GenTypeTrait` is only used for compile-time","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78662,"byte_end":78731,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ optimization through mono-morphism. This trait isn't intended to be used","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78732,"byte_end":78808,"line_start":230,"line_end":230,"column_start":1,"column_end":77}},{"value":"/ elsewhere.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78809,"byte_end":78823,"line_start":231,"line_end":231,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78887,"byte_end":78895,"line_start":234,"line_end":234,"column_start":8,"column_end":16},"name":"gen_type","qualname":"::core::mono_traits::GenTypeTrait::gen_type","value":"pub fn gen_type() -> GenTypes","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Returns the `GenType`.\n","sig":null,"attributes":[{"value":"/ Returns the `GenType`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78853,"byte_end":78879,"line_start":233,"line_end":233,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79004,"byte_end":79014,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"AllGenType","qualname":"::core::mono_traits::AllGenType","value":"AllGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::All` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::All` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":78914,"byte_end":78992,"line_start":237,"line_end":237,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79113,"byte_end":79128,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"CapturesGenType","qualname":"::core::mono_traits::CapturesGenType","value":"CapturesGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::Captures` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::Captures` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79018,"byte_end":79101,"line_start":239,"line_end":239,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79225,"byte_end":79238,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"QuietsGenType","qualname":"::core::mono_traits::QuietsGenType","value":"QuietsGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::Quiets` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::Quiets` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79132,"byte_end":79213,"line_start":241,"line_end":241,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79340,"byte_end":79358,"line_start":244,"line_end":244,"column_start":12,"column_end":30},"name":"QuietChecksGenType","qualname":"::core::mono_traits::QuietChecksGenType","value":"QuietChecksGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::QuietChecks` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::QuietChecks` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79242,"byte_end":79328,"line_start":243,"line_end":243,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79457,"byte_end":79472,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"EvasionsGenType","qualname":"::core::mono_traits::EvasionsGenType","value":"EvasionsGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::Evasions` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::Evasions` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79362,"byte_end":79445,"line_start":245,"line_end":245,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79574,"byte_end":79592,"line_start":248,"line_end":248,"column_start":12,"column_end":30},"name":"NonEvasionsGenType","qualname":"::core::mono_traits::NonEvasionsGenType","value":"NonEvasionsGenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `GenTypes::NonEvasions` which implements `GenTypeTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `GenTypes::NonEvasions` which implements `GenTypeTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79476,"byte_end":79562,"line_start":247,"line_end":247,"column_start":1,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":327},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80654,"byte_end":80664,"line_start":298,"line_end":298,"column_start":11,"column_end":21},"name":"PieceTrait","qualname":"::core::mono_traits::PieceTrait","value":"PieceTrait","parent":null,"children":[{"krate":0,"index":328}],"decl_id":null,"docs":" A `PieceTrait` allows for specific functions in relation\n to the type of move.","sig":null,"attributes":[{"value":"/ A `PieceTrait` allows for specific functions in relation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80375,"byte_end":80435,"line_start":292,"line_end":292,"column_start":1,"column_end":61}},{"value":"/ to the type of move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80436,"byte_end":80460,"line_start":293,"line_end":293,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80461,"byte_end":80464,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Alike `PlayerTrait` and `GenTypeTrait`, `PieceTrait` is only used for compile-time","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80465,"byte_end":80551,"line_start":295,"line_end":295,"column_start":1,"column_end":87}},{"value":"/ optimization through mono-morphism. This trait isn't intended to be used","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80552,"byte_end":80628,"line_start":296,"line_end":296,"column_start":1,"column_end":77}},{"value":"/ elsewhere.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80629,"byte_end":80643,"line_start":297,"line_end":297,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80716,"byte_end":80726,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"piece_type","qualname":"::core::mono_traits::PieceTrait::piece_type","value":"pub fn piece_type() -> PieceType","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Returns the `Piece` of an object.\n","sig":null,"attributes":[{"value":"/ Returns the `Piece` of an object.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80671,"byte_end":80708,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81380,"byte_end":81388,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"PawnType","qualname":"::core::mono_traits::PawnType","value":"PawnType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::P` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::P` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81297,"byte_end":81368,"line_start":322,"line_end":322,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81475,"byte_end":81485,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"KnightType","qualname":"::core::mono_traits::KnightType","value":"KnightType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::N` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::N` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81392,"byte_end":81463,"line_start":324,"line_end":324,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81572,"byte_end":81582,"line_start":327,"line_end":327,"column_start":12,"column_end":22},"name":"BishopType","qualname":"::core::mono_traits::BishopType","value":"BishopType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::B` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::B` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81489,"byte_end":81560,"line_start":326,"line_end":326,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81669,"byte_end":81677,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"RookType","qualname":"::core::mono_traits::RookType","value":"RookType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::R` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::R` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81586,"byte_end":81657,"line_start":328,"line_end":328,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":333},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81764,"byte_end":81773,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"QueenType","qualname":"::core::mono_traits::QueenType","value":"QueenType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::Q` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::Q` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81681,"byte_end":81752,"line_start":330,"line_end":330,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81860,"byte_end":81868,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"KingType","qualname":"::core::mono_traits::KingType","value":"KingType {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy type to represent a `Piece::K` which implements `PieceTrait`.\n","sig":null,"attributes":[{"value":"/ Dummy type to represent a `Piece::K` which implements `PieceTrait`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81777,"byte_end":81848,"line_start":332,"line_end":332,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":365},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sq","qualname":"::core::sq","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2621},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":398},{"krate":0,"index":464}],"decl_id":null,"docs":" Contains the representation of a chessboard's square.","sig":null,"attributes":[{"value":"/ Contains the representation of a chessboard's square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83619,"byte_end":83676,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83677,"byte_end":83680,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Internally, a `SQ` is just a u8. The number of a `SQ` maps to the following","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83681,"byte_end":83760,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ squares of a chessboard:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83761,"byte_end":83789,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83790,"byte_end":83793,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83794,"byte_end":83810,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/ 8 | 56 57 58 59 60 61 62 63","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83811,"byte_end":83842,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ 7 | 48 49 50 51 52 53 54 55","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83843,"byte_end":83874,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/ 6 | 40 41 42 43 44 45 46 47","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83875,"byte_end":83906,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/ 5 | 32 33 34 35 36 37 38 39","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83907,"byte_end":83938,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ 4 | 24 25 26 27 28 29 30 31","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83939,"byte_end":83970,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/ 3 | 16 17 18 19 20 21 22 23","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":83971,"byte_end":84002,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/ 2 | 8  9  10 11 12 13 14 15","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84003,"byte_end":84034,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ 1 | 0  1  2  3  4  5  6  7","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84035,"byte_end":84065,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/   -------------------------","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84066,"byte_end":84097,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/      a  b  c  d  e  f  g  h","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84098,"byte_end":84129,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84130,"byte_end":84137,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84138,"byte_end":84141,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84142,"byte_end":84156,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84157,"byte_end":84160,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84161,"byte_end":84172,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use pleco::core::sq::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84173,"byte_end":84200,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ let h1 = SQ::H1;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84201,"byte_end":84221,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/ let h2 = SQ::H2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84222,"byte_end":84242,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84243,"byte_end":84246,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let g2 = SQ(14);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84247,"byte_end":84267,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84268,"byte_end":84271,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(h1.distance(h2), 1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84272,"byte_end":84307,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(h1.file(), h2.file());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84308,"byte_end":84345,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(g2.rank(), h2.rank());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84346,"byte_end":84383,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84384,"byte_end":84391,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84392,"byte_end":84395,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Use of `NO_SQ`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84396,"byte_end":84416,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84417,"byte_end":84420,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `NO_SQ` is used to signify the lack of a legal square. Think about this as being a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84421,"byte_end":84507,"line_start":35,"line_end":35,"column_start":1,"column_end":87}},{"value":"/ lazy version of `Option<SQ>` where the result is `None`. With normal operation, this","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84508,"byte_end":84596,"line_start":36,"line_end":36,"column_start":1,"column_end":89}},{"value":"/ shouldn't be a case worth considering.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84597,"byte_end":84639,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84640,"byte_end":84643,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84644,"byte_end":84655,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ use pleco::core::sq::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84656,"byte_end":84683,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ let no_sq: SQ = NO_SQ;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84684,"byte_end":84710,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ let sq_64 = SQ(64);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84711,"byte_end":84734,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84735,"byte_end":84738,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert!(!no_sq.is_okay());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84739,"byte_end":84769,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ assert!(!sq_64.is_okay());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84770,"byte_end":84800,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(no_sq, sq_64);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84801,"byte_end":84830,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84831,"byte_end":84838,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84839,"byte_end":84842,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # General Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84843,"byte_end":84863,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84864,"byte_end":84867,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Generally, all of these methods for a `SQ` are safe to use. The exception to this is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84868,"byte_end":84956,"line_start":51,"line_end":51,"column_start":1,"column_end":89}},{"value":"/ when a `SQ::is_okay()` returns false, meaning the square is outside the legal bounds.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":84957,"byte_end":85046,"line_start":52,"line_end":52,"column_start":1,"column_end":90}},{"value":"/ If methods are used on a square that is not legal, then undefined behavior will follow.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85047,"byte_end":85138,"line_start":53,"line_end":53,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85477,"byte_end":85479,"line_start":68,"line_end":68,"column_start":12,"column_end":14},"name":"SQ","qualname":"::core::sq::SQ","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a singular square of a chessboard.\n","sig":null,"attributes":[{"value":"/ Represents a singular square of a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85323,"byte_end":85372,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"repr(transparent)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85445,"byte_end":85465,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85480,"byte_end":85486,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"name":"0","qualname":"::core::sq::SQ::0","value":"u8","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":378},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85644,"byte_end":85649,"line_start":74,"line_end":74,"column_start":11,"column_end":16},"name":"NO_SQ","qualname":"::core::sq::NO_SQ","value":"SQ","parent":null,"children":[],"decl_id":null,"docs":" `SQ` representing no square available. Used internally to represent\n the lack of an available en-passant square.\n","sig":null,"attributes":[{"value":"/ `SQ` representing no square available. Used internally to represent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85514,"byte_end":85585,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ the lack of an available en-passant square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85586,"byte_end":85633,"line_start":73,"line_end":73,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":380},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85803,"byte_end":85807,"line_start":79,"line_end":79,"column_start":15,"column_end":19},"name":"NONE","qualname":"::core::sq::SQ::NONE","value":"SQ","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":" A square that isn't on the board. Basically equivilant to `Option<SQ>` where the value is\n `None`.\n","sig":null,"attributes":[{"value":"/ A square that isn't on the board. Basically equivilant to `Option<SQ>` where the value is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85679,"byte_end":85772,"line_start":77,"line_end":77,"column_start":5,"column_end":98}},{"value":"/ `None`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85777,"byte_end":85788,"line_start":78,"line_end":78,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85911,"byte_end":85920,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"to_string","qualname":"<SQ>::to_string","value":"pub fn to_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the UCI String representation of a `SQ`.\n","sig":null,"attributes":[{"value":"/ Returns the UCI String representation of a `SQ`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85826,"byte_end":85878,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline(never)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85883,"byte_end":85899,"line_start":82,"line_end":82,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86397,"byte_end":86404,"line_start":102,"line_end":102,"column_start":18,"column_end":25},"name":"is_okay","qualname":"<SQ>::is_okay","value":"pub const fn is_okay(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a `SQ` is within the legal bounds of a square,\n which is inclusively between 0 - 63.","sig":null,"attributes":[{"value":"/ Returns if a `SQ` is within the legal bounds of a square,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86033,"byte_end":86094,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ which is inclusively between 0 - 63.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86099,"byte_end":86139,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86144,"byte_end":86147,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86152,"byte_end":86166,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86171,"byte_end":86174,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86179,"byte_end":86190,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use pleco::SQ;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86195,"byte_end":86213,"line_start":94,"line_end":94,"column_start":5,"column_end":23}},{"value":"/ let sq_ok = SQ(5);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86218,"byte_end":86240,"line_start":95,"line_end":95,"column_start":5,"column_end":27}},{"value":"/ let no_sq = SQ(64);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86245,"byte_end":86268,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86273,"byte_end":86276,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert!(sq_ok.is_okay());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86281,"byte_end":86310,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ assert!(!no_sq.is_okay());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86315,"byte_end":86345,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86350,"byte_end":86357,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86362,"byte_end":86379,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86905,"byte_end":86913,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"distance","qualname":"<SQ>::distance","value":"pub fn distance(Self, SQ) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns distance between this square and another square. Distance is\n not in algebraic difference, but in squares away.","sig":null,"attributes":[{"value":"/ Returns distance between this square and another square. Distance is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86452,"byte_end":86524,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ not in algebraic difference, but in squares away.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86529,"byte_end":86582,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86587,"byte_end":86590,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86595,"byte_end":86609,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86614,"byte_end":86617,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86622,"byte_end":86633,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ use pleco::SQ;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86638,"byte_end":86656,"line_start":112,"line_end":112,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86661,"byte_end":86664,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let a1 = SQ::A1;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86669,"byte_end":86689,"line_start":114,"line_end":114,"column_start":5,"column_end":25}},{"value":"/ let b2 = SQ::B2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86694,"byte_end":86714,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/ let b3 = SQ::B3;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86719,"byte_end":86739,"line_start":116,"line_end":116,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86744,"byte_end":86747,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a1.distance(a1), 0);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86752,"byte_end":86787,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a1.distance(b2), 1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86792,"byte_end":86827,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a1.distance(b3), 2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86832,"byte_end":86867,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86872,"byte_end":86879,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":86884,"byte_end":86893,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87384,"byte_end":87389,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"to_bb","qualname":"<SQ>::to_bb","value":"pub fn to_bb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SQ` to it's `BitBoard` equivalent. The resulting `BitBoard` will\n have exactly 1 bit set at the index where the square is location on the\n chessboard.\n","sig":null,"attributes":[{"value":"/ Converts a `SQ` to it's `BitBoard` equivalent. The resulting `BitBoard` will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87170,"byte_end":87250,"line_start":133,"line_end":133,"column_start":5,"column_end":85}},{"value":"/ have exactly 1 bit set at the index where the square is location on the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87255,"byte_end":87330,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87335,"byte_end":87350,"line_start":135,"line_end":135,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87355,"byte_end":87372,"line_start":136,"line_end":136,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87732,"byte_end":87736,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"rank","qualname":"<SQ>::rank","value":"pub fn rank(Self) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rank` that a `SQ` lies on.","sig":null,"attributes":[{"value":"/ Returns the `Rank` that a `SQ` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87482,"byte_end":87525,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87530,"byte_end":87533,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87538,"byte_end":87552,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87557,"byte_end":87560,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87565,"byte_end":87576,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/ use pleco::{SQ,Rank};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87581,"byte_end":87606,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87611,"byte_end":87614,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let sq_f2 = SQ::F2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87619,"byte_end":87642,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(sq_f2.rank(), Rank::R2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87647,"byte_end":87686,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87691,"byte_end":87698,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87703,"byte_end":87720,"line_start":152,"line_end":152,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88005,"byte_end":88012,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"rank_bb","qualname":"<SQ>::rank_bb","value":"pub fn rank_bb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` representation of a `Rank` that a `SQ` lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` representation of a `Rank` that a `SQ` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87897,"byte_end":87971,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":87976,"byte_end":87993,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88178,"byte_end":88192,"line_start":168,"line_end":168,"column_start":18,"column_end":32},"name":"rank_idx_of_sq","qualname":"<SQ>::rank_idx_of_sq","value":"pub const fn rank_idx_of_sq(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the rank index (number) of a `SQ`.\n","sig":null,"attributes":[{"value":"/ Returns the rank index (number) of a `SQ`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88092,"byte_end":88138,"line_start":166,"line_end":166,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88143,"byte_end":88160,"line_start":167,"line_end":167,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88495,"byte_end":88499,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"file","qualname":"<SQ>::file","value":"pub fn file(Self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Returns the `File` that a `SQ` lies on.","sig":null,"attributes":[{"value":"/ Returns the `File` that a `SQ` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88246,"byte_end":88289,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88294,"byte_end":88297,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88302,"byte_end":88316,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88321,"byte_end":88324,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88329,"byte_end":88340,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ use pleco::{SQ,File};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88345,"byte_end":88370,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88375,"byte_end":88378,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let sq_f2 = SQ::F2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88383,"byte_end":88406,"line_start":179,"line_end":179,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(sq_f2.file(), File::F);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88411,"byte_end":88449,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88454,"byte_end":88461,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88466,"byte_end":88483,"line_start":182,"line_end":182,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88717,"byte_end":88724,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"file_bb","qualname":"<SQ>::file_bb","value":"pub fn file_bb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` representation of a `File` that a `SQ` lies on.\n","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` representation of a `File` that a `SQ` lies on.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88609,"byte_end":88683,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88688,"byte_end":88705,"line_start":190,"line_end":190,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88890,"byte_end":88904,"line_start":197,"line_end":197,"column_start":18,"column_end":32},"name":"file_idx_of_sq","qualname":"<SQ>::file_idx_of_sq","value":"pub const fn file_idx_of_sq(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the file index (number) of a `SQ`.\n","sig":null,"attributes":[{"value":"/ Returns the file index (number) of a `SQ`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88804,"byte_end":88850,"line_start":195,"line_end":195,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88855,"byte_end":88872,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89118,"byte_end":89136,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"castle_rights_mask","qualname":"<SQ>::castle_rights_mask","value":"pub fn castle_rights_mask(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the castle rights mask for the given square. If the\n square does not have a castle rights mask, returns 0.\n","sig":null,"attributes":[{"value":"/ Returns the castle rights mask for the given square. If the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":88967,"byte_end":89030,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/ square does not have a castle rights mask, returns 0.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89035,"byte_end":89092,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89097,"byte_end":89106,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89903,"byte_end":89907,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"make","qualname":"<SQ>::make","value":"pub fn make(File, Rank) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SQ` from the designated File and Rank.","sig":null,"attributes":[{"value":"/ Creates a `SQ` from the designated File and Rank.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89560,"byte_end":89613,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89618,"byte_end":89621,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89626,"byte_end":89640,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89645,"byte_end":89648,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89653,"byte_end":89664,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ use pleco::{SQ,Rank,File};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89669,"byte_end":89699,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89704,"byte_end":89707,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let file_f = File::F;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89712,"byte_end":89737,"line_start":223,"line_end":223,"column_start":5,"column_end":30}},{"value":"/ let rank_2 = Rank::R2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89742,"byte_end":89768,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/ let sq_f2 = SQ::F2;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89773,"byte_end":89796,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89801,"byte_end":89804,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sq_f2, SQ::make(file_f, rank_2));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89809,"byte_end":89857,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89862,"byte_end":89869,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":89874,"byte_end":89891,"line_start":229,"line_end":229,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90090,"byte_end":90104,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"on_dark_square","qualname":"<SQ>::on_dark_square","value":"pub fn on_dark_square(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the `SQ` is a dark square.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90015,"byte_end":90032,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ Returns if the `SQ` is a dark square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90037,"byte_end":90078,"line_start":235,"line_end":235,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90266,"byte_end":90281,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"on_light_square","qualname":"<SQ>::on_light_square","value":"pub fn on_light_square(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the `SQ` is a dark square.\n","sig":null,"attributes":[{"value":"/ Returns if the `SQ` is a dark square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90191,"byte_end":90232,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90237,"byte_end":90254,"line_start":241,"line_end":241,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90505,"byte_end":90523,"line_start":249,"line_end":249,"column_start":12,"column_end":30},"name":"square_color_index","qualname":"<SQ>::square_color_index","value":"pub fn square_color_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the player index of the color of the square.\n","sig":null,"attributes":[{"value":"/ Returns the player index of the color of the square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90415,"byte_end":90471,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90476,"byte_end":90493,"line_start":248,"line_end":248,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90678,"byte_end":90682,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"flip","qualname":"<SQ>::flip","value":"pub fn flip(Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Flips the square's rank, so `SQ::A1` -> `SQ::A8`.\n","sig":null,"attributes":[{"value":"/ Flips the square's rank, so `SQ::A1` -> `SQ::A8`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90591,"byte_end":90644,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90649,"byte_end":90666,"line_start":254,"line_end":254,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90825,"byte_end":90840,"line_start":261,"line_end":261,"column_start":12,"column_end":27},"name":"opposite_colors","qualname":"<SQ>::opposite_colors","value":"pub fn opposite_colors(Self, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if two squares are on opposite colors.\n","sig":null,"attributes":[{"value":"/ Determines if two squares are on opposite colors.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90738,"byte_end":90791,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90796,"byte_end":90813,"line_start":260,"line_end":260,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":399},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91015,"byte_end":91020,"line_start":270,"line_end":270,"column_start":15,"column_end":20},"name":"NO_SQ","qualname":"::core::sq::SQ::NO_SQ","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":400},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91067,"byte_end":91069,"line_start":272,"line_end":272,"column_start":15,"column_end":17},"name":"A1","qualname":"::core::sq::SQ::A1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":401},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91123,"byte_end":91125,"line_start":274,"line_end":274,"column_start":15,"column_end":17},"name":"B1","qualname":"::core::sq::SQ::B1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":402},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91179,"byte_end":91181,"line_start":276,"line_end":276,"column_start":15,"column_end":17},"name":"C1","qualname":"::core::sq::SQ::C1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":403},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91235,"byte_end":91237,"line_start":278,"line_end":278,"column_start":15,"column_end":17},"name":"D1","qualname":"::core::sq::SQ::D1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":404},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91291,"byte_end":91293,"line_start":280,"line_end":280,"column_start":15,"column_end":17},"name":"E1","qualname":"::core::sq::SQ::E1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":405},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91347,"byte_end":91349,"line_start":282,"line_end":282,"column_start":15,"column_end":17},"name":"F1","qualname":"::core::sq::SQ::F1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":406},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91403,"byte_end":91405,"line_start":284,"line_end":284,"column_start":15,"column_end":17},"name":"G1","qualname":"::core::sq::SQ::G1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":407},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91459,"byte_end":91461,"line_start":286,"line_end":286,"column_start":15,"column_end":17},"name":"H1","qualname":"::core::sq::SQ::H1","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":408},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91515,"byte_end":91517,"line_start":288,"line_end":288,"column_start":15,"column_end":17},"name":"A2","qualname":"::core::sq::SQ::A2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":409},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91571,"byte_end":91573,"line_start":290,"line_end":290,"column_start":15,"column_end":17},"name":"B2","qualname":"::core::sq::SQ::B2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":410},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91627,"byte_end":91629,"line_start":292,"line_end":292,"column_start":15,"column_end":17},"name":"C2","qualname":"::core::sq::SQ::C2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":411},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91683,"byte_end":91685,"line_start":294,"line_end":294,"column_start":15,"column_end":17},"name":"D2","qualname":"::core::sq::SQ::D2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":412},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91739,"byte_end":91741,"line_start":296,"line_end":296,"column_start":15,"column_end":17},"name":"E2","qualname":"::core::sq::SQ::E2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":413},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91795,"byte_end":91797,"line_start":298,"line_end":298,"column_start":15,"column_end":17},"name":"F2","qualname":"::core::sq::SQ::F2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":414},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91851,"byte_end":91853,"line_start":300,"line_end":300,"column_start":15,"column_end":17},"name":"G2","qualname":"::core::sq::SQ::G2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":415},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91907,"byte_end":91909,"line_start":302,"line_end":302,"column_start":15,"column_end":17},"name":"H2","qualname":"::core::sq::SQ::H2","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":416},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":91963,"byte_end":91965,"line_start":304,"line_end":304,"column_start":15,"column_end":17},"name":"A3","qualname":"::core::sq::SQ::A3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":417},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92019,"byte_end":92021,"line_start":306,"line_end":306,"column_start":15,"column_end":17},"name":"B3","qualname":"::core::sq::SQ::B3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":418},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92075,"byte_end":92077,"line_start":308,"line_end":308,"column_start":15,"column_end":17},"name":"C3","qualname":"::core::sq::SQ::C3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":419},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92131,"byte_end":92133,"line_start":310,"line_end":310,"column_start":15,"column_end":17},"name":"D3","qualname":"::core::sq::SQ::D3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":420},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92187,"byte_end":92189,"line_start":312,"line_end":312,"column_start":15,"column_end":17},"name":"E3","qualname":"::core::sq::SQ::E3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":421},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92243,"byte_end":92245,"line_start":314,"line_end":314,"column_start":15,"column_end":17},"name":"F3","qualname":"::core::sq::SQ::F3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92299,"byte_end":92301,"line_start":316,"line_end":316,"column_start":15,"column_end":17},"name":"G3","qualname":"::core::sq::SQ::G3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":423},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92355,"byte_end":92357,"line_start":318,"line_end":318,"column_start":15,"column_end":17},"name":"H3","qualname":"::core::sq::SQ::H3","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":424},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92411,"byte_end":92413,"line_start":320,"line_end":320,"column_start":15,"column_end":17},"name":"A4","qualname":"::core::sq::SQ::A4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":425},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92467,"byte_end":92469,"line_start":322,"line_end":322,"column_start":15,"column_end":17},"name":"B4","qualname":"::core::sq::SQ::B4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":426},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92523,"byte_end":92525,"line_start":324,"line_end":324,"column_start":15,"column_end":17},"name":"C4","qualname":"::core::sq::SQ::C4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":427},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92579,"byte_end":92581,"line_start":326,"line_end":326,"column_start":15,"column_end":17},"name":"D4","qualname":"::core::sq::SQ::D4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":428},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92635,"byte_end":92637,"line_start":328,"line_end":328,"column_start":15,"column_end":17},"name":"E4","qualname":"::core::sq::SQ::E4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":429},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92691,"byte_end":92693,"line_start":330,"line_end":330,"column_start":15,"column_end":17},"name":"F4","qualname":"::core::sq::SQ::F4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":430},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92747,"byte_end":92749,"line_start":332,"line_end":332,"column_start":15,"column_end":17},"name":"G4","qualname":"::core::sq::SQ::G4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":431},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92803,"byte_end":92805,"line_start":334,"line_end":334,"column_start":15,"column_end":17},"name":"H4","qualname":"::core::sq::SQ::H4","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":432},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92859,"byte_end":92861,"line_start":336,"line_end":336,"column_start":15,"column_end":17},"name":"A5","qualname":"::core::sq::SQ::A5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":433},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92915,"byte_end":92917,"line_start":338,"line_end":338,"column_start":15,"column_end":17},"name":"B5","qualname":"::core::sq::SQ::B5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":434},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":92971,"byte_end":92973,"line_start":340,"line_end":340,"column_start":15,"column_end":17},"name":"C5","qualname":"::core::sq::SQ::C5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":435},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93027,"byte_end":93029,"line_start":342,"line_end":342,"column_start":15,"column_end":17},"name":"D5","qualname":"::core::sq::SQ::D5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":436},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93083,"byte_end":93085,"line_start":344,"line_end":344,"column_start":15,"column_end":17},"name":"E5","qualname":"::core::sq::SQ::E5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":437},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93139,"byte_end":93141,"line_start":346,"line_end":346,"column_start":15,"column_end":17},"name":"F5","qualname":"::core::sq::SQ::F5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":438},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93195,"byte_end":93197,"line_start":348,"line_end":348,"column_start":15,"column_end":17},"name":"G5","qualname":"::core::sq::SQ::G5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":439},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93251,"byte_end":93253,"line_start":350,"line_end":350,"column_start":15,"column_end":17},"name":"H5","qualname":"::core::sq::SQ::H5","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":440},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93307,"byte_end":93309,"line_start":352,"line_end":352,"column_start":15,"column_end":17},"name":"A6","qualname":"::core::sq::SQ::A6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":441},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93363,"byte_end":93365,"line_start":354,"line_end":354,"column_start":15,"column_end":17},"name":"B6","qualname":"::core::sq::SQ::B6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":442},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93419,"byte_end":93421,"line_start":356,"line_end":356,"column_start":15,"column_end":17},"name":"C6","qualname":"::core::sq::SQ::C6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":443},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93475,"byte_end":93477,"line_start":358,"line_end":358,"column_start":15,"column_end":17},"name":"D6","qualname":"::core::sq::SQ::D6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":444},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93531,"byte_end":93533,"line_start":360,"line_end":360,"column_start":15,"column_end":17},"name":"E6","qualname":"::core::sq::SQ::E6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":445},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93587,"byte_end":93589,"line_start":362,"line_end":362,"column_start":15,"column_end":17},"name":"F6","qualname":"::core::sq::SQ::F6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":446},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93643,"byte_end":93645,"line_start":364,"line_end":364,"column_start":15,"column_end":17},"name":"G6","qualname":"::core::sq::SQ::G6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":447},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93699,"byte_end":93701,"line_start":366,"line_end":366,"column_start":15,"column_end":17},"name":"H6","qualname":"::core::sq::SQ::H6","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":448},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93755,"byte_end":93757,"line_start":368,"line_end":368,"column_start":15,"column_end":17},"name":"A7","qualname":"::core::sq::SQ::A7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":449},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93811,"byte_end":93813,"line_start":370,"line_end":370,"column_start":15,"column_end":17},"name":"B7","qualname":"::core::sq::SQ::B7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":450},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93867,"byte_end":93869,"line_start":372,"line_end":372,"column_start":15,"column_end":17},"name":"C7","qualname":"::core::sq::SQ::C7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":451},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93923,"byte_end":93925,"line_start":374,"line_end":374,"column_start":15,"column_end":17},"name":"D7","qualname":"::core::sq::SQ::D7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":452},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":93979,"byte_end":93981,"line_start":376,"line_end":376,"column_start":15,"column_end":17},"name":"E7","qualname":"::core::sq::SQ::E7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":453},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94035,"byte_end":94037,"line_start":378,"line_end":378,"column_start":15,"column_end":17},"name":"F7","qualname":"::core::sq::SQ::F7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":454},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94091,"byte_end":94093,"line_start":380,"line_end":380,"column_start":15,"column_end":17},"name":"G7","qualname":"::core::sq::SQ::G7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":455},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94147,"byte_end":94149,"line_start":382,"line_end":382,"column_start":15,"column_end":17},"name":"H7","qualname":"::core::sq::SQ::H7","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":456},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94203,"byte_end":94205,"line_start":384,"line_end":384,"column_start":15,"column_end":17},"name":"A8","qualname":"::core::sq::SQ::A8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":457},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94259,"byte_end":94261,"line_start":386,"line_end":386,"column_start":15,"column_end":17},"name":"B8","qualname":"::core::sq::SQ::B8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":458},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94315,"byte_end":94317,"line_start":388,"line_end":388,"column_start":15,"column_end":17},"name":"C8","qualname":"::core::sq::SQ::C8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":459},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94371,"byte_end":94373,"line_start":390,"line_end":390,"column_start":15,"column_end":17},"name":"D8","qualname":"::core::sq::SQ::D8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":460},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94427,"byte_end":94429,"line_start":392,"line_end":392,"column_start":15,"column_end":17},"name":"E8","qualname":"::core::sq::SQ::E8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":461},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94483,"byte_end":94485,"line_start":394,"line_end":394,"column_start":15,"column_end":17},"name":"F8","qualname":"::core::sq::SQ::F8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":462},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94539,"byte_end":94541,"line_start":396,"line_end":396,"column_start":15,"column_end":17},"name":"G8","qualname":"::core::sq::SQ::G8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":463},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94595,"byte_end":94597,"line_start":398,"line_end":398,"column_start":15,"column_end":17},"name":"H8","qualname":"::core::sq::SQ::H8","value":"SQ","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":466},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitboard","qualname":"::core::bitboard","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2738},{"krate":0,"index":489},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":2831},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":544},{"krate":0,"index":550},{"krate":0,"index":552}],"decl_id":null,"docs":" Module containing the `BitBoard` and associated functions / constants.","sig":null,"attributes":[{"value":"/ Module containing the `BitBoard` and associated functions / constants.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95176,"byte_end":95250,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95251,"byte_end":95254,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`BitBoard`] is a set of bits, where the index of each bit represents a square on the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95255,"byte_end":95346,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/ Board. We use this to mark whether or not something is residing at a certain square. For","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95347,"byte_end":95439,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ example, if we are using it to map the positions of the white pawns, and there exists a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95440,"byte_end":95531,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ pawn at square B9, the bit at index 9 will be set to '1'. The lack of a piece is marked","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95532,"byte_end":95623,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ with a '0' instead.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95624,"byte_end":95647,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95648,"byte_end":95651,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Each bit's index of a [`BitBoard`] maps to the following squares:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95652,"byte_end":95721,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95722,"byte_end":95725,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95726,"byte_end":95742,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ 8 | 56 57 58 59 60 61 62 63","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95743,"byte_end":95774,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/ 7 | 48 49 50 51 52 53 54 55","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95775,"byte_end":95806,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ 6 | 40 41 42 43 44 45 46 47","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95807,"byte_end":95838,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ 5 | 32 33 34 35 36 37 38 39","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95839,"byte_end":95870,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/ 4 | 24 25 26 27 28 29 30 31","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95871,"byte_end":95902,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ 3 | 16 17 18 19 20 21 22 23","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95903,"byte_end":95934,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/ 2 | 8  9  10 11 12 13 14 15","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95935,"byte_end":95966,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ 1 | 0  1  2  3  4  5  6  7","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95967,"byte_end":95997,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/   -------------------------","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":95998,"byte_end":96029,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/      a  b  c  d  e  f  g  h","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96030,"byte_end":96061,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96062,"byte_end":96069,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96070,"byte_end":96073,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`BitBoard`]: struct.BitBoard.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96074,"byte_end":96112,"line_start":24,"line_end":24,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96647,"byte_end":96655,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"BitBoard","qualname":"::core::bitboard::BitBoard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BitBoard` is simply a 64 bit long integer where each\n bit maps to a specific square. Used for mapping occupancy, where '1' represents\n a piece being at that index's square, and a '0' represents a lack of a piece.\n","sig":null,"attributes":[{"value":"/ A `BitBoard` is simply a 64 bit long integer where each","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96329,"byte_end":96388,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ bit maps to a specific square. Used for mapping occupancy, where '1' represents","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96389,"byte_end":96472,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ a piece being at that index's square, and a '0' represents a lack of a piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96473,"byte_end":96554,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"repr(transparent)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96615,"byte_end":96635,"line_start":43,"line_end":43,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96656,"byte_end":96663,"line_start":44,"line_end":44,"column_start":21,"column_end":28},"name":"0","qualname":"::core::bitboard::BitBoard::0","value":"u64","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":490},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96757,"byte_end":96763,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"FILE_A","qualname":"::core::bitboard::BitBoard::FILE_A","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File A.\n","sig":null,"attributes":[{"value":"/ BitBoard of File A.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96719,"byte_end":96742,"line_start":50,"line_end":50,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":491},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96836,"byte_end":96842,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"FILE_B","qualname":"::core::bitboard::BitBoard::FILE_B","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File B.\n","sig":null,"attributes":[{"value":"/ BitBoard of File B.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96798,"byte_end":96821,"line_start":52,"line_end":52,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":492},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96915,"byte_end":96921,"line_start":55,"line_end":55,"column_start":15,"column_end":21},"name":"FILE_C","qualname":"::core::bitboard::BitBoard::FILE_C","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File C.\n","sig":null,"attributes":[{"value":"/ BitBoard of File C.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96877,"byte_end":96900,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":493},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96994,"byte_end":97000,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"FILE_D","qualname":"::core::bitboard::BitBoard::FILE_D","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File D.\n","sig":null,"attributes":[{"value":"/ BitBoard of File D.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96956,"byte_end":96979,"line_start":56,"line_end":56,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":494},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97073,"byte_end":97079,"line_start":59,"line_end":59,"column_start":15,"column_end":21},"name":"FILE_E","qualname":"::core::bitboard::BitBoard::FILE_E","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File E.\n","sig":null,"attributes":[{"value":"/ BitBoard of File E.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97035,"byte_end":97058,"line_start":58,"line_end":58,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":495},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97152,"byte_end":97158,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"name":"FILE_F","qualname":"::core::bitboard::BitBoard::FILE_F","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File F.\n","sig":null,"attributes":[{"value":"/ BitBoard of File F.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97114,"byte_end":97137,"line_start":60,"line_end":60,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":496},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97231,"byte_end":97237,"line_start":63,"line_end":63,"column_start":15,"column_end":21},"name":"FILE_G","qualname":"::core::bitboard::BitBoard::FILE_G","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File G.\n","sig":null,"attributes":[{"value":"/ BitBoard of File G.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97193,"byte_end":97216,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":497},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97310,"byte_end":97316,"line_start":65,"line_end":65,"column_start":15,"column_end":21},"name":"FILE_H","qualname":"::core::bitboard::BitBoard::FILE_H","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of File H.\n","sig":null,"attributes":[{"value":"/ BitBoard of File H.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97272,"byte_end":97295,"line_start":64,"line_end":64,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":498},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97389,"byte_end":97395,"line_start":67,"line_end":67,"column_start":15,"column_end":21},"name":"RANK_1","qualname":"::core::bitboard::BitBoard::RANK_1","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 1.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 1.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97351,"byte_end":97374,"line_start":66,"line_end":66,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97468,"byte_end":97474,"line_start":69,"line_end":69,"column_start":15,"column_end":21},"name":"RANK_2","qualname":"::core::bitboard::BitBoard::RANK_2","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 2.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 2.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97430,"byte_end":97453,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":500},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97547,"byte_end":97553,"line_start":71,"line_end":71,"column_start":15,"column_end":21},"name":"RANK_3","qualname":"::core::bitboard::BitBoard::RANK_3","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 3.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 3.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97509,"byte_end":97532,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":501},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97626,"byte_end":97632,"line_start":73,"line_end":73,"column_start":15,"column_end":21},"name":"RANK_4","qualname":"::core::bitboard::BitBoard::RANK_4","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 4.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 4.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97588,"byte_end":97611,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":502},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97705,"byte_end":97711,"line_start":75,"line_end":75,"column_start":15,"column_end":21},"name":"RANK_5","qualname":"::core::bitboard::BitBoard::RANK_5","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 5.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 5.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97667,"byte_end":97690,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":503},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97784,"byte_end":97790,"line_start":77,"line_end":77,"column_start":15,"column_end":21},"name":"RANK_6","qualname":"::core::bitboard::BitBoard::RANK_6","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 6.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 6.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97746,"byte_end":97769,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":504},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97863,"byte_end":97869,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"name":"RANK_7","qualname":"::core::bitboard::BitBoard::RANK_7","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 7.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 7.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97825,"byte_end":97848,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":505},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97942,"byte_end":97948,"line_start":81,"line_end":81,"column_start":15,"column_end":21},"name":"RANK_8","qualname":"::core::bitboard::BitBoard::RANK_8","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of Rank 8.\n","sig":null,"attributes":[{"value":"/ BitBoard of Rank 8.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97904,"byte_end":97927,"line_start":80,"line_end":80,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":506},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98032,"byte_end":98044,"line_start":84,"line_end":84,"column_start":15,"column_end":27},"name":"DARK_SQUARES","qualname":"::core::bitboard::BitBoard::DARK_SQUARES","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of all dark squares.\n","sig":null,"attributes":[{"value":"/ BitBoard of all dark squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":97984,"byte_end":98017,"line_start":83,"line_end":83,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":507},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98134,"byte_end":98147,"line_start":86,"line_end":86,"column_start":15,"column_end":28},"name":"LIGHT_SQUARES","qualname":"::core::bitboard::BitBoard::LIGHT_SQUARES","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of all light squares.\n","sig":null,"attributes":[{"value":"/ BitBoard of all light squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98085,"byte_end":98119,"line_start":85,"line_end":85,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":508},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98238,"byte_end":98241,"line_start":88,"line_end":88,"column_start":15,"column_end":18},"name":"ALL","qualname":"::core::bitboard::BitBoard::ALL","value":"BitBoard","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":" BitBoard of all light squares.\n","sig":null,"attributes":[{"value":"/ BitBoard of all light squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98189,"byte_end":98223,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98515,"byte_end":98520,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"to_sq","qualname":"<BitBoard>::to_sq","value":"pub fn to_sq(Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Converts a `BitBoard` to a square.","sig":null,"attributes":[{"value":"/ Converts a `BitBoard` to a square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98273,"byte_end":98311,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98316,"byte_end":98319,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98324,"byte_end":98336,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98341,"byte_end":98344,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ The `BitBoard` must have exactly one bit inside of it, or else","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98349,"byte_end":98415,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ this will return the square of the least significant bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98420,"byte_end":98481,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98486,"byte_end":98503,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98711,"byte_end":98721,"line_start":104,"line_end":104,"column_start":12,"column_end":22},"name":"count_bits","qualname":"<BitBoard>::count_bits","value":"pub fn count_bits(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits in a `BitBoard`\n","sig":null,"attributes":[{"value":"/ Returns the number of bits in a `BitBoard`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98631,"byte_end":98677,"line_start":102,"line_end":102,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98682,"byte_end":98699,"line_start":103,"line_end":103,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98937,"byte_end":98953,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"bit_scan_forward","qualname":"<BitBoard>::bit_scan_forward","value":"pub fn bit_scan_forward(Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SQ` of the least significant bit.","sig":null,"attributes":[{"value":"/ Returns the `SQ` of the least significant bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98774,"byte_end":98824,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98829,"byte_end":98832,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98837,"byte_end":98848,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98853,"byte_end":98856,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Will panic if the `BitBoard` is empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98861,"byte_end":98903,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":98908,"byte_end":98925,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99187,"byte_end":99206,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"bit_scan_forward_u8","qualname":"<BitBoard>::bit_scan_forward_u8","value":"pub fn bit_scan_forward_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the index (u8) of the least significant bit.","sig":null,"attributes":[{"value":"/ Returns the index (u8) of the least significant bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99018,"byte_end":99074,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99079,"byte_end":99082,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99087,"byte_end":99098,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99103,"byte_end":99106,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Will panic if the `BitBoard` is empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99111,"byte_end":99153,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99158,"byte_end":99175,"line_start":123,"line_end":123,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99348,"byte_end":99361,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"more_than_one","qualname":"<BitBoard>::more_than_one","value":"pub fn more_than_one(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there are more than 1 bits inside.\n","sig":null,"attributes":[{"value":"/ Returns if there are more than 1 bits inside.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99265,"byte_end":99314,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99319,"byte_end":99336,"line_start":129,"line_end":129,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99514,"byte_end":99522,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitBoard>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the `BitBoard` is empty (contains no bits).\n","sig":null,"attributes":[{"value":"/ Determines if the `BitBoard` is empty (contains no bits).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99419,"byte_end":99480,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99485,"byte_end":99502,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99678,"byte_end":99690,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"is_not_empty","qualname":"<BitBoard>::is_not_empty","value":"pub fn is_not_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the `BitBoard` is not empty (contains one or more bits).\n","sig":null,"attributes":[{"value":"/ Determines if the `BitBoard` is not empty (contains one or more bits).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99570,"byte_end":99644,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99649,"byte_end":99666,"line_start":141,"line_end":141,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99824,"byte_end":99827,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"lsb","qualname":"<BitBoard>::lsb","value":"pub fn lsb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the least significant bit as a BitBoard.\n","sig":null,"attributes":[{"value":"/ Returns the least significant bit as a BitBoard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99738,"byte_end":99790,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99795,"byte_end":99812,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99962,"byte_end":99965,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"msb","qualname":"<BitBoard>::msb","value":"pub fn msb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the most significant bit\n","sig":null,"attributes":[{"value":"/ Returns the most significant bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99892,"byte_end":99928,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":99933,"byte_end":99950,"line_start":153,"line_end":153,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100108,"byte_end":100115,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"lsb_u64","qualname":"<BitBoard>::lsb_u64","value":"pub fn lsb_u64(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the least significant bit as a u64.\n","sig":null,"attributes":[{"value":"/ Returns the least significant bit as a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100027,"byte_end":100074,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100079,"byte_end":100096,"line_start":159,"line_end":159,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100553,"byte_end":100560,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"pop_lsb","qualname":"<BitBoard>::pop_lsb","value":"pub fn pop_lsb(&mut Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the index (as a square) of the least significant bit and removes\n that bit from the `BitBoard`.","sig":null,"attributes":[{"value":"/ Returns the index (as a square) of the least significant bit and removes","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100162,"byte_end":100238,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ that bit from the `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100243,"byte_end":100276,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100281,"byte_end":100284,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100289,"byte_end":100301,"line_start":167,"line_end":167,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100306,"byte_end":100309,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Panics if the `BitBoard` is empty. See [`BitBoard::pop_some_lsb`] for a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100314,"byte_end":100389,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ non-panicking version of the method.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100394,"byte_end":100434,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100439,"byte_end":100442,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`BitBoard::pop_some_lsb`]: struct.BitBoard.html#method.pop_some_lsb","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100447,"byte_end":100519,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100524,"byte_end":100541,"line_start":173,"line_end":173,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100845,"byte_end":100857,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"pop_some_lsb","qualname":"<BitBoard>::pop_some_lsb","value":"pub fn pop_some_lsb(&mut Self) -> Option<SQ>","parent":null,"children":[],"decl_id":null,"docs":" Returns the least significant bit of a `BitBoard`, if it has any. If there is a bit to\n return, it removes that bit from itself.\n","sig":null,"attributes":[{"value":"/ Returns the least significant bit of a `BitBoard`, if it has any. If there is a bit to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100672,"byte_end":100762,"line_start":180,"line_end":180,"column_start":5,"column_end":95}},{"value":"/ return, it removes that bit from itself.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100767,"byte_end":100811,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":100816,"byte_end":100833,"line_start":182,"line_end":182,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101425,"byte_end":101440,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"pop_lsb_and_bit","qualname":"<BitBoard>::pop_lsb_and_bit","value":"pub fn pop_lsb_and_bit(&mut Self) -> (SQ, BitBoard)","parent":null,"children":[],"decl_id":null,"docs":" Returns the index (as a square) and bit of the least significant bit and removes\n that bit from the `BitBoard`.","sig":null,"attributes":[{"value":"/ Returns the index (as a square) and bit of the least significant bit and removes","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101002,"byte_end":101086,"line_start":191,"line_end":191,"column_start":5,"column_end":89}},{"value":"/ that bit from the `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101091,"byte_end":101124,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101129,"byte_end":101132,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101137,"byte_end":101149,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101154,"byte_end":101157,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the `BitBoard` is empty. See [`BitBoard::pop_some_lsb_and_bit`] for a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101162,"byte_end":101245,"line_start":196,"line_end":196,"column_start":5,"column_end":88}},{"value":"/ non-panicking version of the method.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101250,"byte_end":101290,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101295,"byte_end":101298,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`BitBoard::pop_some_lsb_and_bit`]: struct.BitBoard.html#method.pop_some_lsb_and_bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101303,"byte_end":101391,"line_start":199,"line_end":199,"column_start":5,"column_end":93}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101396,"byte_end":101413,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101810,"byte_end":101830,"line_start":211,"line_end":211,"column_start":12,"column_end":32},"name":"pop_some_lsb_and_bit","qualname":"<BitBoard>::pop_some_lsb_and_bit","value":"pub fn pop_some_lsb_and_bit(&mut Self) -> Option<(SQ, BitBoard)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index (as a square) and bit of the least significant bit and removes\n that bit from the `BitBoard`. If there are no bits left (the board is empty), returns\n `None`.\n","sig":null,"attributes":[{"value":"/ Returns the index (as a square) and bit of the least significant bit and removes","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101582,"byte_end":101666,"line_start":207,"line_end":207,"column_start":5,"column_end":89}},{"value":"/ that bit from the `BitBoard`. If there are no bits left (the board is empty), returns","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101671,"byte_end":101760,"line_start":208,"line_end":208,"column_start":5,"column_end":94}},{"value":"/ `None`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101765,"byte_end":101776,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101781,"byte_end":101798,"line_start":210,"line_end":210,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102170,"byte_end":102182,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"frontmost_sq","qualname":"<BitBoard>::frontmost_sq","value":"pub fn frontmost_sq(Self, Player) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the front-most square of a player on the current `BitBoard`.","sig":null,"attributes":[{"value":"/ Returns the front-most square of a player on the current `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":101996,"byte_end":102068,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102073,"byte_end":102076,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102081,"byte_end":102093,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102098,"byte_end":102101,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Panics if the `BitBoard` is empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102106,"byte_end":102144,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102149,"byte_end":102158,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102533,"byte_end":102544,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"backmost_sq","qualname":"<BitBoard>::backmost_sq","value":"pub fn backmost_sq(Self, Player) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the back-most square of a player on the current `BitBoard`.","sig":null,"attributes":[{"value":"/ Returns the back-most square of a player on the current `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102360,"byte_end":102431,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102436,"byte_end":102439,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102444,"byte_end":102456,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102461,"byte_end":102464,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ panics if the `BitBoard` is empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102469,"byte_end":102507,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102512,"byte_end":102521,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102881,"byte_end":102894,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"clone_all_occ","qualname":"<BitBoard>::clone_all_occ","value":"pub fn clone_all_occ(&[[BitBoard; ]; ]) -> [[BitBoard; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of a `[[BitBoard; 6]; 2]`. Used to duplicate occupancy `BitBoard`s of each\n piece for each player.\n","sig":null,"attributes":[{"value":"/ Returns a clone of a `[[BitBoard; 6]; 2]`. Used to duplicate occupancy `BitBoard`s of each","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102722,"byte_end":102816,"line_start":245,"line_end":245,"column_start":5,"column_end":99}},{"value":"/ piece for each player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102821,"byte_end":102847,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":102852,"byte_end":102869,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103250,"byte_end":103263,"line_start":255,"line_end":255,"column_start":12,"column_end":25},"name":"clone_occ_bbs","qualname":"<BitBoard>::clone_occ_bbs","value":"pub fn clone_occ_bbs(&[BitBoard; ]) -> [BitBoard; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of a `[BitBoard; 2]`. Used to duplicate occupancy `BitBoard`s of each player.\n","sig":null,"attributes":[{"value":"/ Returns a clone of a `[BitBoard; 2]`. Used to duplicate occupancy `BitBoard`s of each player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103119,"byte_end":103216,"line_start":253,"line_end":253,"column_start":5,"column_end":102}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103221,"byte_end":103238,"line_start":254,"line_end":254,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104427,"byte_end":104439,"line_start":303,"line_end":303,"column_start":12,"column_end":24},"name":"RandBitBoard","qualname":"::core::bitboard::RandBitBoard","value":"RandBitBoard {  }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" BitBoard generating structure.\n","sig":null,"attributes":[{"value":"/ BitBoard generating structure.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104381,"byte_end":104415,"line_start":302,"line_end":302,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104839,"byte_end":104843,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"many","qualname":"<RandBitBoard>::many","value":"pub fn many(Self, usize) -> Vec<BitBoard>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of \"amount\" BitBoards.\n","sig":null,"attributes":[{"value":"/ Returns a vector of \"amount\" BitBoards.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104784,"byte_end":104827,"line_start":324,"line_end":324,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105110,"byte_end":105113,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"one","qualname":"<RandBitBoard>::one","value":"pub fn one(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a singular random BitBoard.\n","sig":null,"attributes":[{"value":"/ Returns a singular random BitBoard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105059,"byte_end":105098,"line_start":333,"line_end":333,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105241,"byte_end":105244,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"avg","qualname":"<RandBitBoard>::avg","value":"pub fn avg(Self, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the average number of bits in the resulting Bitboard.\n","sig":null,"attributes":[{"value":"/ Sets the average number of bits in the resulting Bitboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105167,"byte_end":105229,"line_start":338,"line_end":338,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105742,"byte_end":105753,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"allow_empty","qualname":"<RandBitBoard>::allow_empty","value":"pub fn allow_empty(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows empty BitBoards to be returned.\n","sig":null,"attributes":[{"value":"/ Allows empty BitBoards to be returned.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105688,"byte_end":105730,"line_start":356,"line_end":356,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105884,"byte_end":105887,"line_start":363,"line_end":363,"column_start":12,"column_end":15},"name":"max","qualname":"<RandBitBoard>::max","value":"pub fn max(Self, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bits in a `BitBoard`.\n","sig":null,"attributes":[{"value":"/ Sets the maximum number of bits in a `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105820,"byte_end":105872,"line_start":362,"line_end":362,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":106030,"byte_end":106033,"line_start":369,"line_end":369,"column_start":12,"column_end":15},"name":"min","qualname":"<RandBitBoard>::min","value":"pub fn min(Self, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum number of bits in a `BitBoard`.\n","sig":null,"attributes":[{"value":"/ Sets the minimum number of bits in a `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":105966,"byte_end":106018,"line_start":368,"line_end":368,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":106294,"byte_end":106307,"line_start":377,"line_end":377,"column_start":12,"column_end":25},"name":"pseudo_random","qualname":"<RandBitBoard>::pseudo_random","value":"pub fn pseudo_random(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the generation to use pseudo-random numbers instead of random\n numbers. The seed is a random number for the random numbers to be generated\n off of.\n","sig":null,"attributes":[{"value":"/ Sets the generation to use pseudo-random numbers instead of random","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":106112,"byte_end":106182,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ numbers. The seed is a random number for the random numbers to be generated","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":106187,"byte_end":106266,"line_start":375,"line_end":375,"column_start":5,"column_end":84}},{"value":"/ off of.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":106271,"byte_end":106282,"line_start":376,"line_end":376,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"move_list","qualname":"::core::move_list","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":651},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":754}],"decl_id":null,"docs":" Contains the `MoveList` & `ScoreMoveList` structures, akin to a `Vec<BitMove>` but faster for\n our purposes.","sig":null,"attributes":[{"value":"/ Contains the `MoveList` & `ScoreMoveList` structures, akin to a `Vec<BitMove>` but faster for","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109230,"byte_end":109327,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/ our purposes.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109328,"byte_end":109345,"line_start":2,"line_end":2,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109346,"byte_end":109349,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`MoveList`] structure is guaranteed to be exactly 512 bytes long, containing a maximum of 256","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109350,"byte_end":109450,"line_start":4,"line_end":4,"column_start":1,"column_end":101}},{"value":"/ moves. This number was chosen as no possible chess position has been found to contain more than","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109451,"byte_end":109550,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ 232 possible moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109551,"byte_end":109574,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109575,"byte_end":109578,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to mainly be used for generation of moves for a certain position. If","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109579,"byte_end":109678,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ you need to a more versatile collection of moves to manipulate, considering using a `Vec<BitMove>`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109679,"byte_end":109781,"line_start":9,"line_end":9,"column_start":1,"column_end":103}},{"value":"/ instead.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109782,"byte_end":109794,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109795,"byte_end":109798,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`ScoreMoveList`] is practically the same as the [`MoveList`], but it allows for each move to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109799,"byte_end":109900,"line_start":12,"line_end":12,"column_start":1,"column_end":102}},{"value":"/ have a score attached to it as well.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109901,"byte_end":109941,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109942,"byte_end":109945,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`MoveList`]: struct.MoveList.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109946,"byte_end":109984,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ [`ScoreMoveList`]: struct.MoveList.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":109985,"byte_end":110028,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110389,"byte_end":110399,"line_start":27,"line_end":27,"column_start":11,"column_end":21},"name":"MVPushable","qualname":"::core::move_list::MVPushable","value":"MVPushable: Sized + IndexMut<usize> + Index<usize> + DerefMut","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"decl_id":null,"docs":" Trait to help generalize operations involving sctures containing a collection of `BitMove`s.\n","sig":null,"attributes":[{"value":"/ Trait to help generalize operations involving sctures containing a collection of `BitMove`s.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110282,"byte_end":110378,"line_start":26,"line_end":26,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110606,"byte_end":110613,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"push_mv","qualname":"::core::move_list::MVPushable::push_mv","value":"pub fn push_mv(&mut Self, BitMove)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Adds a `BitMove` to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a `BitMove` to the end of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110458,"byte_end":110502,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110507,"byte_end":110510,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110515,"byte_end":110527,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110532,"byte_end":110535,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If pushing to the list when at capacity, does nothing.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110540,"byte_end":110598,"line_start":33,"line_end":33,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110822,"byte_end":110839,"line_start":41,"line_end":41,"column_start":15,"column_end":32},"name":"unchecked_push_mv","qualname":"::core::move_list::MVPushable::unchecked_push_mv","value":"pub unsafe fn unchecked_push_mv(&mut Self, BitMove)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Adds a `BitMove` to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a `BitMove` to the end of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110644,"byte_end":110688,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110693,"byte_end":110696,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110701,"byte_end":110713,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110718,"byte_end":110721,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Undefined behavior if pushing to the list when `MoveList::len() = MAX_MOVES`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110726,"byte_end":110807,"line_start":40,"line_end":40,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111006,"byte_end":111023,"line_start":48,"line_end":48,"column_start":15,"column_end":32},"name":"unchecked_set_len","qualname":"::core::move_list::MVPushable::unchecked_set_len","value":"pub unsafe fn unchecked_set_len(&mut Self, usize)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Set the length of the list.","sig":null,"attributes":[{"value":"/ Set the length of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110870,"byte_end":110901,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110906,"byte_end":110909,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110914,"byte_end":110926,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110931,"byte_end":110934,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Unsafe due to overwriting the length of the list","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110939,"byte_end":110991,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111254,"byte_end":111262,"line_start":56,"line_end":56,"column_start":15,"column_end":23},"name":"list_ptr","qualname":"::core::move_list::MVPushable::list_ptr","value":"pub unsafe fn list_ptr(&mut Self) -> *mut Self::Output","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Return a pointer to the first (0-th index) element in the list.","sig":null,"attributes":[{"value":"/ Return a pointer to the first (0-th index) element in the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111054,"byte_end":111121,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111126,"byte_end":111129,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111134,"byte_end":111146,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111151,"byte_end":111154,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Unsafe due to allow modification of elements possibly not inside the length.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111159,"byte_end":111239,"line_start":55,"line_end":55,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111507,"byte_end":111522,"line_start":63,"line_end":63,"column_start":15,"column_end":30},"name":"over_bounds_ptr","qualname":"::core::move_list::MVPushable::over_bounds_ptr","value":"pub unsafe fn over_bounds_ptr(&mut Self) -> *mut Self::Output","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Return a pointer to the element next to the last element in the list.","sig":null,"attributes":[{"value":"/ Return a pointer to the element next to the last element in the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111301,"byte_end":111374,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111379,"byte_end":111382,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111387,"byte_end":111399,"line_start":60,"line_end":60,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111404,"byte_end":111407,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Unsafe due to allow modification of elements possibly not inside the length.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111412,"byte_end":111492,"line_start":62,"line_end":62,"column_start":5,"column_end":85}}]},{"kind":"Const","id":{"krate":0,"index":608},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111895,"byte_end":111904,"line_start":73,"line_end":73,"column_start":11,"column_end":20},"name":"MAX_MOVES","qualname":"::core::move_list::MAX_MOVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":111849,"byte_end":111884,"line_start":72,"line_end":72,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":609},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112297,"byte_end":112305,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"MoveList","qualname":"::core::move_list::MoveList","value":"MoveList {  }","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":612}],"decl_id":null,"docs":" This is the list of possible moves for a current position. Think of it alike a faster\n version of `Vec<BitMove>`, as all the data is stored in the Stack rather than the Heap.\n","sig":null,"attributes":[{"value":"/ This is the list of possible moves for a current position. Think of it alike a faster","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112104,"byte_end":112193,"line_start":82,"line_end":82,"column_start":1,"column_end":90}},{"value":"/ version of `Vec<BitMove>`, as all the data is stored in the Stack rather than the Heap.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112194,"byte_end":112285,"line_start":83,"line_end":83,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113268,"byte_end":113272,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"push","qualname":"<MoveList>::push","value":"pub fn push(&mut Self, BitMove)","parent":null,"children":[],"decl_id":null,"docs":" Adds a `BitMove` to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a `BitMove` to the end of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113094,"byte_end":113138,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113143,"byte_end":113146,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113151,"byte_end":113163,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113168,"byte_end":113171,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ If pushing to the list when at capacity, does nothing.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113176,"byte_end":113234,"line_start":128,"line_end":128,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113239,"byte_end":113256,"line_start":129,"line_end":129,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113580,"byte_end":113588,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MoveList>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if empty.","sig":null,"attributes":[{"value":"/ Returns true if empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113336,"byte_end":113362,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113367,"byte_end":113370,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113375,"byte_end":113389,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113394,"byte_end":113397,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113402,"byte_end":113409,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use pleco::{BitMove,MoveList};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113414,"byte_end":113448,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113453,"byte_end":113456,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut list = MoveList::default();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113461,"byte_end":113500,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ assert!(list.is_empty());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113505,"byte_end":113534,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113539,"byte_end":113546,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113551,"byte_end":113568,"line_start":144,"line_end":144,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113939,"byte_end":113942,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"vec","qualname":"<MoveList>::vec","value":"pub fn vec(&Self) -> Vec<BitMove>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Vec<BitMove>` from this `MoveList`.","sig":null,"attributes":[{"value":"/ Creates a `Vec<BitMove>` from this `MoveList`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113639,"byte_end":113689,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113694,"byte_end":113697,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113702,"byte_end":113716,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113721,"byte_end":113724,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113729,"byte_end":113736,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use pleco::{BitMove,MoveList};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113741,"byte_end":113775,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113780,"byte_end":113783,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut list = MoveList::default();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113788,"byte_end":113827,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ list.push(BitMove::null());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113832,"byte_end":113863,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113868,"byte_end":113871,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<BitMove> = list.vec();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113876,"byte_end":113915,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113920,"byte_end":113927,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114529,"byte_end":114532,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"len","qualname":"<MoveList>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of moves inside the list.","sig":null,"attributes":[{"value":"/ Returns the number of moves inside the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114154,"byte_end":114202,"line_start":170,"line_end":170,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114207,"byte_end":114210,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114215,"byte_end":114229,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114234,"byte_end":114237,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114242,"byte_end":114249,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use pleco::{BitMove,MoveList};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114254,"byte_end":114288,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114293,"byte_end":114296,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut list = MoveList::default();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114301,"byte_end":114340,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ list.push(BitMove::null());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114345,"byte_end":114376,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ list.push(BitMove::null());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114381,"byte_end":114412,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ list.push(BitMove::null());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114417,"byte_end":114448,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(list.len(), 3);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114453,"byte_end":114483,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114488,"byte_end":114495,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114500,"byte_end":114517,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114894,"byte_end":114902,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<MoveList>::as_slice","value":"pub fn as_slice(&Self) -> &[BitMove]","parent":null,"children":[],"decl_id":null,"docs":" Returns the `MoveList` as a slice.","sig":null,"attributes":[{"value":"/ Returns the `MoveList` as a slice.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114579,"byte_end":114617,"line_start":188,"line_end":188,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114622,"byte_end":114625,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114630,"byte_end":114644,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114649,"byte_end":114652,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114657,"byte_end":114664,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use pleco::{BitMove,MoveList};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114669,"byte_end":114703,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114708,"byte_end":114711,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut list = MoveList::default();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114716,"byte_end":114755,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/ list.push(BitMove::null());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114760,"byte_end":114791,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114796,"byte_end":114799,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let slice: &[BitMove] = list.as_slice();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114804,"byte_end":114848,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114853,"byte_end":114860,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114865,"byte_end":114882,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115030,"byte_end":115042,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<MoveList>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [BitMove]","parent":null,"children":[],"decl_id":null,"docs":" Returns the `MoveList` as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the `MoveList` as a mutable slice.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":114950,"byte_end":114996,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115001,"byte_end":115018,"line_start":206,"line_end":206,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":116616,"byte_end":116624,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"MoveIter","qualname":"::core::move_list::MoveIter","value":"MoveIter {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117669,"byte_end":117681,"line_start":332,"line_end":332,"column_start":12,"column_end":24},"name":"MoveIntoIter","qualname":"::core::move_list::MoveIntoIter","value":"MoveIntoIter {  }","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118988,"byte_end":119003,"line_start":392,"line_end":392,"column_start":12,"column_end":27},"name":"ScoringMoveList","qualname":"::core::move_list::ScoringMoveList","value":"ScoringMoveList {  }","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684}],"decl_id":null,"docs":" This is similar to a `MoveList`, but also keeps the scores for each move as well.\n","sig":null,"attributes":[{"value":"/ This is similar to a `MoveList`, but also keeps the scores for each move as well.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118891,"byte_end":118976,"line_start":391,"line_end":391,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120017,"byte_end":120021,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"push","qualname":"<ScoringMoveList>::push","value":"pub fn push(&mut Self, BitMove)","parent":null,"children":[],"decl_id":null,"docs":" Adds a `BitMove` to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a `BitMove` to the end of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119843,"byte_end":119887,"line_start":431,"line_end":431,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119892,"byte_end":119895,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119900,"byte_end":119912,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119917,"byte_end":119920,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If pushing to the list when at capacity, does nothing.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119925,"byte_end":119983,"line_start":435,"line_end":435,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119988,"byte_end":120005,"line_start":436,"line_end":436,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120146,"byte_end":120154,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ScoringMoveList>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if empty.\n","sig":null,"attributes":[{"value":"/ Returns true if empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120086,"byte_end":120112,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120117,"byte_end":120134,"line_start":442,"line_end":442,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120259,"byte_end":120262,"line_start":448,"line_end":448,"column_start":12,"column_end":15},"name":"vec","qualname":"<ScoringMoveList>::vec","value":"pub fn vec(&Self) -> Vec<ScoringMove>","parent":null,"children":[],"decl_id":null,"docs":" Creates a vector from this `MoveList`.\n","sig":null,"attributes":[{"value":"/ Creates a vector from this `MoveList`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120205,"byte_end":120247,"line_start":447,"line_end":447,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120655,"byte_end":120665,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"push_score","qualname":"<ScoringMoveList>::push_score","value":"pub fn push_score(&mut Self, BitMove, i16)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a `BitMove` and a score to the list.","sig":null,"attributes":[{"value":"/ Pushes a `BitMove` and a score to the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120480,"byte_end":120527,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120532,"byte_end":120535,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Unlike a normal score, which is a `i32`, the score pushed is of a type `i16`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120540,"byte_end":120621,"line_start":459,"line_end":459,"column_start":5,"column_end":86}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120626,"byte_end":120643,"line_start":460,"line_end":460,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120886,"byte_end":120906,"line_start":470,"line_end":470,"column_start":19,"column_end":39},"name":"push_score_unchecked","qualname":"<ScoringMoveList>::push_score_unchecked","value":"pub unsafe fn push_score_unchecked(&mut Self, BitMove, i16)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":120850,"byte_end":120867,"line_start":469,"line_end":469,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121171,"byte_end":121174,"line_start":478,"line_end":478,"column_start":12,"column_end":15},"name":"len","qualname":"<ScoringMoveList>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of moves inside the list.\n","sig":null,"attributes":[{"value":"/ Returns the number of moves inside the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121089,"byte_end":121137,"line_start":476,"line_end":476,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121142,"byte_end":121159,"line_start":477,"line_end":477,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121300,"byte_end":121308,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ScoringMoveList>::as_slice","value":"pub fn as_slice(&Self) -> &[ScoringMove]","parent":null,"children":[],"decl_id":null,"docs":" Returns the `ScoringMoveList` as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the `ScoringMoveList` as a slice.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121221,"byte_end":121266,"line_start":482,"line_end":482,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121271,"byte_end":121288,"line_start":483,"line_end":483,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121447,"byte_end":121459,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<ScoringMoveList>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [ScoringMove]","parent":null,"children":[],"decl_id":null,"docs":" Returns the `ScoringMoveList` as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the `ScoringMoveList` as a mutable slice.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121360,"byte_end":121413,"line_start":488,"line_end":488,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121418,"byte_end":121435,"line_start":489,"line_end":489,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":123122,"byte_end":123135,"line_start":566,"line_end":566,"column_start":12,"column_end":25},"name":"ScoreMoveIter","qualname":"::core::move_list::ScoreMoveIter","value":"ScoreMoveIter {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124231,"byte_end":124248,"line_start":615,"line_end":615,"column_start":12,"column_end":29},"name":"ScoreMoveIntoIter","qualname":"::core::move_list::ScoreMoveIntoIter","value":"ScoreMoveIntoIter {  }","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":755},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"score","qualname":"::core::score","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":2852},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":787},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818}],"decl_id":null,"docs":" Primitives for determining the value / score of a specific location.","sig":null,"attributes":[{"value":"/ Primitives for determining the value / score of a specific location.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126186,"byte_end":126258,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126259,"byte_end":126262,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Value` stores a single `i32` to represent a score. `Score` stores two `i32`s inside of it,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126263,"byte_end":126360,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ the first to determine the mid-game score, and the second to determine the end-game score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126361,"byte_end":126455,"line_start":4,"line_end":4,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":760},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126632,"byte_end":126637,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Value","qualname":"::core::score::Value","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Type for `i32` to determine the `Value` of an evaluation.\n","sig":null,"attributes":[{"value":"/ Type for `i32` to determine the `Value` of an evaluation.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126561,"byte_end":126622,"line_start":11,"line_end":11,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":761},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126657,"byte_end":126661,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::core::score::ZERO","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":762},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126684,"byte_end":126688,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"DRAW","qualname":"::core::score::DRAW","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":763},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126711,"byte_end":126721,"line_start":17,"line_end":17,"column_start":11,"column_end":21},"name":"LIKELY_WIN","qualname":"::core::score::LIKELY_WIN","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":764},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126749,"byte_end":126753,"line_start":18,"line_end":18,"column_start":11,"column_end":15},"name":"MATE","qualname":"::core::score::MATE","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":765},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126780,"byte_end":126788,"line_start":19,"line_end":19,"column_start":11,"column_end":19},"name":"INFINITE","qualname":"::core::score::INFINITE","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":766},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126815,"byte_end":126827,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"NEG_INFINITE","qualname":"::core::score::NEG_INFINITE","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":767},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126855,"byte_end":126859,"line_start":21,"line_end":21,"column_start":11,"column_end":15},"name":"NONE","qualname":"::core::score::NONE","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":768},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126887,"byte_end":126891,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"PAWN","qualname":"::core::score::PAWN","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":769},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126916,"byte_end":126922,"line_start":24,"line_end":24,"column_start":11,"column_end":17},"name":"KNIGHT","qualname":"::core::score::KNIGHT","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":770},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126947,"byte_end":126953,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"BISHOP","qualname":"::core::score::BISHOP","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":771},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":126978,"byte_end":126982,"line_start":26,"line_end":26,"column_start":11,"column_end":15},"name":"ROOK","qualname":"::core::score::ROOK","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":772},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127007,"byte_end":127012,"line_start":27,"line_end":27,"column_start":11,"column_end":16},"name":"QUEEN","qualname":"::core::score::QUEEN","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":773},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127038,"byte_end":127045,"line_start":29,"line_end":29,"column_start":11,"column_end":18},"name":"PAWN_MG","qualname":"::core::score::PAWN_MG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":774},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127070,"byte_end":127079,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"KNIGHT_MG","qualname":"::core::score::KNIGHT_MG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":775},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127104,"byte_end":127113,"line_start":31,"line_end":31,"column_start":11,"column_end":20},"name":"BISHOP_MG","qualname":"::core::score::BISHOP_MG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":776},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127138,"byte_end":127145,"line_start":32,"line_end":32,"column_start":11,"column_end":18},"name":"ROOK_MG","qualname":"::core::score::ROOK_MG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":777},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127171,"byte_end":127179,"line_start":33,"line_end":33,"column_start":11,"column_end":19},"name":"QUEEN_MG","qualname":"::core::score::QUEEN_MG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":778},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127206,"byte_end":127213,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"PAWN_EG","qualname":"::core::score::PAWN_EG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":779},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127238,"byte_end":127247,"line_start":36,"line_end":36,"column_start":11,"column_end":20},"name":"KNIGHT_EG","qualname":"::core::score::KNIGHT_EG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":780},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127272,"byte_end":127281,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"BISHOP_EG","qualname":"::core::score::BISHOP_EG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":781},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127306,"byte_end":127313,"line_start":38,"line_end":38,"column_start":11,"column_end":18},"name":"ROOK_EG","qualname":"::core::score::ROOK_EG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":782},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127339,"byte_end":127347,"line_start":39,"line_end":39,"column_start":11,"column_end":19},"name":"QUEEN_EG","qualname":"::core::score::QUEEN_EG","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":783},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127374,"byte_end":127388,"line_start":41,"line_end":41,"column_start":11,"column_end":25},"name":"MID_GAME_LIMIT","qualname":"::core::score::MID_GAME_LIMIT","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":784},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127415,"byte_end":127429,"line_start":42,"line_end":42,"column_start":11,"column_end":25},"name":"END_GAME_LIMIT","qualname":"::core::score::END_GAME_LIMIT","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":785},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127456,"byte_end":127471,"line_start":44,"line_end":44,"column_start":11,"column_end":26},"name":"MATE_IN_MAX_PLY","qualname":"::core::score::MATE_IN_MAX_PLY","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":786},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127507,"byte_end":127523,"line_start":45,"line_end":45,"column_start":11,"column_end":27},"name":"MATED_IN_MAX_PLY","qualname":"::core::score::MATED_IN_MAX_PLY","value":"Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127669,"byte_end":127674,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"Score","qualname":"::core::score::Score","value":"","parent":null,"children":[],"decl_id":null,"docs":" Struct to define the value of a mid-game / end-game evaluation.\n","sig":null,"attributes":[{"value":"/ Struct to define the value of a mid-game / end-game evaluation.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127551,"byte_end":127618,"line_start":47,"line_end":47,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127675,"byte_end":127684,"line_start":49,"line_end":49,"column_start":18,"column_end":27},"name":"0","qualname":"::core::score::Score::0","value":"i32","parent":{"krate":0,"index":2852},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127686,"byte_end":127695,"line_start":49,"line_end":49,"column_start":29,"column_end":38},"name":"1","qualname":"::core::score::Score::1","value":"i32","parent":{"krate":0,"index":2852},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":788},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127752,"byte_end":127756,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::core::score::Score::ZERO","value":"Score","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" The Score of zero\n","sig":null,"attributes":[{"value":"/ The Score of zero","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127716,"byte_end":127737,"line_start":52,"line_end":52,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127821,"byte_end":127825,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"make","qualname":"<Score>::make","value":"pub fn make(Value, Value) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Score`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Score`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127783,"byte_end":127809,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127929,"byte_end":127932,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Score>::new","value":"pub fn new(Value, Value) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Score`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Score`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127891,"byte_end":127917,"line_start":60,"line_end":60,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128041,"byte_end":128043,"line_start":66,"line_end":66,"column_start":12,"column_end":14},"name":"mg","qualname":"<Score>::mg","value":"pub fn mg(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the mid-game score.\n","sig":null,"attributes":[{"value":"/ Returns the mid-game score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127998,"byte_end":128029,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128130,"byte_end":128132,"line_start":71,"line_end":71,"column_start":12,"column_end":14},"name":"eg","qualname":"<Score>::eg","value":"pub fn eg(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the end-game score.\n","sig":null,"attributes":[{"value":"/ Returns the end-game score.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128087,"byte_end":128118,"line_start":70,"line_end":70,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128235,"byte_end":128245,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"centipawns","qualname":"<Score>::centipawns","value":"pub fn centipawns(Self) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Gives the value of the score in centi-pawns\n","sig":null,"attributes":[{"value":"/ Gives the value of the score in centi-pawns","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128176,"byte_end":128223,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":838},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4131,"byte_end":4146,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"ALL_PIECE_TYPES","qualname":"::core::ALL_PIECE_TYPES","value":"[PieceType; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of all possible pieces, indexed by their enum value.\n","sig":null,"attributes":[{"value":"/ Array of all possible pieces, indexed by their enum value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4058,"byte_end":4120,"line_start":25,"line_end":25,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":840},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4340,"byte_end":4351,"line_start":31,"line_end":31,"column_start":11,"column_end":22},"name":"ALL_PLAYERS","qualname":"::core::ALL_PLAYERS","value":"[Player; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of both players, indexed by their enum value.\n","sig":null,"attributes":[{"value":"/ Array of both players, indexed by their enum value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4274,"byte_end":4329,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Static","id":{"krate":0,"index":842},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4467,"byte_end":4476,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"ALL_FILES","qualname":"::core::ALL_FILES","value":"[File; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of all `Files`s, indexed by their enum value.\n","sig":null,"attributes":[{"value":"/ Array of all `Files`s, indexed by their enum value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4400,"byte_end":4455,"line_start":33,"line_end":33,"column_start":1,"column_end":56}}]},{"kind":"Static","id":{"krate":0,"index":844},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4673,"byte_end":4682,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"ALL_RANKS","qualname":"::core::ALL_RANKS","value":"[Rank; ]","parent":null,"children":[],"decl_id":null,"docs":" Array of all `Rank`s, indexed by their enum value.\n","sig":null,"attributes":[{"value":"/ Array of all `Rank`s, indexed by their enum value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4607,"byte_end":4661,"line_start":45,"line_end":45,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4946,"byte_end":4951,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"White","qualname":"::core::Player::White","value":"Player::White","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4961,"byte_end":4966,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Black","qualname":"::core::Player::Black","value":"Player::Black","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4933,"byte_end":4939,"line_start":61,"line_end":61,"column_start":10,"column_end":16},"name":"Player","qualname":"::core::Player","value":"pub enum Player { White = , Black = , }","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2869}],"decl_id":null,"docs":" Enum to represent the Players White & Black.\n","sig":null,"attributes":[{"value":"/ Enum to represent the Players White & Black.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4822,"byte_end":4870,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4912,"byte_end":4923,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5244,"byte_end":5256,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"other_player","qualname":"<Player>::other_player","value":"pub fn other_player(Self) -> Player","parent":null,"children":[],"decl_id":null,"docs":" Returns the other player.","sig":null,"attributes":[{"value":"/ Returns the other player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4993,"byte_end":5022,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5027,"byte_end":5030,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5035,"byte_end":5049,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5054,"byte_end":5057,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5062,"byte_end":5073,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ use pleco::core::Player;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5078,"byte_end":5106,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5111,"byte_end":5114,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let b = Player::Black;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5119,"byte_end":5145,"line_start":74,"line_end":74,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(b.other_player(), Player::White);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5150,"byte_end":5198,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5203,"byte_end":5210,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5215,"byte_end":5232,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5388,"byte_end":5403,"line_start":84,"line_end":84,"column_start":12,"column_end":27},"name":"relative_square","qualname":"<Player>::relative_square","value":"pub fn relative_square(Self, SQ) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative square from a given square.\n","sig":null,"attributes":[{"value":"/ Returns the relative square from a given square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5302,"byte_end":5354,"line_start":82,"line_end":82,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5359,"byte_end":5376,"line_start":83,"line_end":83,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5594,"byte_end":5603,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"pawn_push","qualname":"<Player>::pawn_push","value":"pub fn pawn_push(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Gets the direction of a pawn push for a given player.\n","sig":null,"attributes":[{"value":"/ Gets the direction of a pawn push for a given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5503,"byte_end":5560,"line_start":89,"line_end":89,"column_start":5,"column_end":62}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5565,"byte_end":5582,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6229,"byte_end":6248,"line_start":114,"line_end":114,"column_start":12,"column_end":31},"name":"relative_rank_of_sq","qualname":"<Player>::relative_rank_of_sq","value":"pub fn relative_rank_of_sq(Self, SQ) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative rank of a square in relation to a player.","sig":null,"attributes":[{"value":"/ Returns the relative rank of a square in relation to a player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5732,"byte_end":5798,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5803,"byte_end":5806,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5811,"byte_end":5825,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5830,"byte_end":5833,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5838,"byte_end":5849,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use pleco::core::{Player,Rank};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5854,"byte_end":5889,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ use pleco::core::sq::SQ;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5894,"byte_end":5922,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5927,"byte_end":5930,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let w = Player::White;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5935,"byte_end":5961,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/ let b = Player::Black;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5966,"byte_end":5992,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":5997,"byte_end":6000,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(w.relative_rank_of_sq(SQ::A1), Rank::R1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6005,"byte_end":6061,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(b.relative_rank_of_sq(SQ::H8), Rank::R1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6066,"byte_end":6122,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(b.relative_rank_of_sq(SQ::A1), Rank::R8);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6127,"byte_end":6183,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6188,"byte_end":6195,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6200,"byte_end":6217,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6797,"byte_end":6810,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"relative_rank","qualname":"<Player>::relative_rank","value":"pub fn relative_rank(Self, Rank) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative rank of a rank in relation to a player.","sig":null,"attributes":[{"value":"/ Returns the relative rank of a rank in relation to a player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6322,"byte_end":6386,"line_start":118,"line_end":118,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6391,"byte_end":6394,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6399,"byte_end":6413,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6418,"byte_end":6421,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6426,"byte_end":6437,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ use pleco::core::{Player,Rank};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6442,"byte_end":6477,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/ use pleco::core::sq::SQ;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6482,"byte_end":6510,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6515,"byte_end":6518,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let w = Player::White;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6523,"byte_end":6549,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ let b = Player::Black;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6554,"byte_end":6580,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6585,"byte_end":6588,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(w.relative_rank(Rank::R1), Rank::R1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6593,"byte_end":6645,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(b.relative_rank(Rank::R8), Rank::R1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6650,"byte_end":6702,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(b.relative_rank(Rank::R1), Rank::R8);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6707,"byte_end":6759,"line_start":131,"line_end":131,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6764,"byte_end":6771,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":6776,"byte_end":6785,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8351,"byte_end":8354,"line_start":191,"line_end":191,"column_start":5,"column_end":8},"name":"All","qualname":"::core::GenTypes::All","value":"GenTypes::All","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8360,"byte_end":8368,"line_start":192,"line_end":192,"column_start":5,"column_end":13},"name":"Captures","qualname":"::core::GenTypes::Captures","value":"GenTypes::Captures","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8374,"byte_end":8380,"line_start":193,"line_end":193,"column_start":5,"column_end":11},"name":"Quiets","qualname":"::core::GenTypes::Quiets","value":"GenTypes::Quiets","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8386,"byte_end":8397,"line_start":194,"line_end":194,"column_start":5,"column_end":16},"name":"QuietChecks","qualname":"::core::GenTypes::QuietChecks","value":"GenTypes::QuietChecks","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8403,"byte_end":8411,"line_start":195,"line_end":195,"column_start":5,"column_end":13},"name":"Evasions","qualname":"::core::GenTypes::Evasions","value":"GenTypes::Evasions","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8417,"byte_end":8428,"line_start":196,"line_end":196,"column_start":5,"column_end":16},"name":"NonEvasions","qualname":"::core::GenTypes::NonEvasions","value":"GenTypes::NonEvasions","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2880},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8336,"byte_end":8344,"line_start":190,"line_end":190,"column_start":10,"column_end":18},"name":"GenTypes","qualname":"::core::GenTypes","value":"pub enum GenTypes {\n    All,\n    Captures,\n    Quiets,\n    QuietChecks,\n    Evasions,\n    NonEvasions,\n}","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891}],"decl_id":null,"docs":" Types of move generating options.","sig":null,"attributes":[{"value":"/ Types of move generating options.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7548,"byte_end":7585,"line_start":170,"line_end":170,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7586,"byte_end":7589,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::All` -> All available moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7590,"byte_end":7633,"line_start":172,"line_end":172,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7634,"byte_end":7637,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::Captures` -> All captures and both capture/non-capture promotions.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7638,"byte_end":7719,"line_start":174,"line_end":174,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7720,"byte_end":7723,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::Quiets` -> All non captures and both capture/non-capture promotions.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7724,"byte_end":7807,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7808,"byte_end":7811,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::QuietChecks` -> Moves likely to give check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7812,"byte_end":7870,"line_start":178,"line_end":178,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7871,"byte_end":7874,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::Evasions` -> Generates evasions for a board in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7875,"byte_end":7943,"line_start":180,"line_end":180,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7944,"byte_end":7947,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::NonEvasions` -> Generates all moves for a board not in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7948,"byte_end":8024,"line_start":182,"line_end":182,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8025,"byte_end":8028,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8029,"byte_end":8041,"line_start":184,"line_end":184,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8042,"byte_end":8045,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ `GenTypes::QuietChecks` and `GenTypes::NonEvasions` can only be used if the board","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8046,"byte_end":8131,"line_start":186,"line_end":186,"column_start":1,"column_end":86}},{"value":"/ if not in check, while `GenTypes::Evasions` can only be used if the the board is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8132,"byte_end":8216,"line_start":187,"line_end":187,"column_start":1,"column_end":85}},{"value":"/ in check. The remaining `GenTypes` can be used legally whenever.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8217,"byte_end":8285,"line_start":188,"line_end":188,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2902},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8672,"byte_end":8676,"line_start":207,"line_end":207,"column_start":5,"column_end":9},"name":"None","qualname":"::core::PieceType::None","value":"PieceType::None","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8686,"byte_end":8687,"line_start":208,"line_end":208,"column_start":5,"column_end":6},"name":"P","qualname":"::core::PieceType::P","value":"PieceType::P","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8697,"byte_end":8698,"line_start":209,"line_end":209,"column_start":5,"column_end":6},"name":"N","qualname":"::core::PieceType::N","value":"PieceType::N","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8708,"byte_end":8709,"line_start":210,"line_end":210,"column_start":5,"column_end":6},"name":"B","qualname":"::core::PieceType::B","value":"PieceType::B","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8719,"byte_end":8720,"line_start":211,"line_end":211,"column_start":5,"column_end":6},"name":"R","qualname":"::core::PieceType::R","value":"PieceType::R","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8730,"byte_end":8731,"line_start":212,"line_end":212,"column_start":5,"column_end":6},"name":"Q","qualname":"::core::PieceType::Q","value":"PieceType::Q","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8741,"byte_end":8742,"line_start":213,"line_end":213,"column_start":5,"column_end":6},"name":"K","qualname":"::core::PieceType::K","value":"PieceType::K","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8752,"byte_end":8755,"line_start":214,"line_end":214,"column_start":5,"column_end":8},"name":"All","qualname":"::core::PieceType::All","value":"PieceType::All","parent":{"krate":0,"index":2901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2901},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8656,"byte_end":8665,"line_start":206,"line_end":206,"column_start":10,"column_end":19},"name":"PieceType","qualname":"::core::PieceType","value":"pub enum PieceType { None = , P = , N = , B = , R = , Q = , K = , All = , }","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2923}],"decl_id":null,"docs":" All possible Types of Pieces on a chessboard.","sig":null,"attributes":[{"value":"/ All possible Types of Pieces on a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8432,"byte_end":8481,"line_start":199,"line_end":199,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8482,"byte_end":8485,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ For a representation of pieces considering color as well, see [`Piece`]","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8486,"byte_end":8561,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8562,"byte_end":8565,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ [`Piece`]: ./enum.Piece","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8566,"byte_end":8593,"line_start":203,"line_end":203,"column_start":1,"column_end":28}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8594,"byte_end":8605,"line_start":204,"line_end":204,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8892,"byte_end":8897,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"value","qualname":"<PieceType>::value","value":"pub fn value(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative value of a piece.","sig":null,"attributes":[{"value":"/ Returns the relative value of a piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8784,"byte_end":8826,"line_start":218,"line_end":218,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8831,"byte_end":8834,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Used for sorting moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8839,"byte_end":8866,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8871,"byte_end":8880,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9193,"byte_end":9200,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"is_none","qualname":"<PieceType>::is_none","value":"pub fn is_none(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the piece is `PieceType::None`\n","sig":null,"attributes":[{"value":"/ Returns if the piece is `PieceType::None`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9114,"byte_end":9159,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9164,"byte_end":9181,"line_start":234,"line_end":234,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9343,"byte_end":9350,"line_start":241,"line_end":241,"column_start":12,"column_end":19},"name":"is_some","qualname":"<PieceType>::is_some","value":"pub fn is_some(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the piece is not `PieceType::None`\n","sig":null,"attributes":[{"value":"/ Returns if the piece is not `PieceType::None`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9260,"byte_end":9309,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9314,"byte_end":9331,"line_start":240,"line_end":240,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9517,"byte_end":9524,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"is_real","qualname":"<PieceType>::is_real","value":"pub fn is_real(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the piece is actually real, as in the Piece is not `None` or `All`.\n","sig":null,"attributes":[{"value":"/ Checks if the piece is actually real, as in the Piece is not `None` or `All`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9402,"byte_end":9483,"line_start":245,"line_end":245,"column_start":5,"column_end":86}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9488,"byte_end":9505,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9684,"byte_end":9694,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"char_lower","qualname":"<PieceType>::char_lower","value":"pub fn char_lower(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Return the lowercase character of a `Piece`.\n","sig":null,"attributes":[{"value":"/ Return the lowercase character of a `Piece`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9610,"byte_end":9658,"line_start":251,"line_end":251,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9663,"byte_end":9672,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10052,"byte_end":10062,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"char_upper","qualname":"<PieceType>::char_upper","value":"pub fn char_upper(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Return the uppercase character of a `Piece`.\n","sig":null,"attributes":[{"value":"/ Return the uppercase character of a `Piece`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":9978,"byte_end":10026,"line_start":265,"line_end":265,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10031,"byte_end":10040,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11079,"byte_end":11083,"line_start":306,"line_end":306,"column_start":5,"column_end":9},"name":"None","qualname":"::core::Piece::None","value":"Piece::None","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11105,"byte_end":11114,"line_start":307,"line_end":307,"column_start":5,"column_end":14},"name":"WhitePawn","qualname":"::core::Piece::WhitePawn","value":"Piece::WhitePawn","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11131,"byte_end":11142,"line_start":308,"line_end":308,"column_start":5,"column_end":16},"name":"WhiteKnight","qualname":"::core::Piece::WhiteKnight","value":"Piece::WhiteKnight","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11157,"byte_end":11168,"line_start":309,"line_end":309,"column_start":5,"column_end":16},"name":"WhiteBishop","qualname":"::core::Piece::WhiteBishop","value":"Piece::WhiteBishop","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11183,"byte_end":11192,"line_start":310,"line_end":310,"column_start":5,"column_end":14},"name":"WhiteRook","qualname":"::core::Piece::WhiteRook","value":"Piece::WhiteRook","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11209,"byte_end":11219,"line_start":311,"line_end":311,"column_start":5,"column_end":15},"name":"WhiteQueen","qualname":"::core::Piece::WhiteQueen","value":"Piece::WhiteQueen","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11235,"byte_end":11244,"line_start":312,"line_end":312,"column_start":5,"column_end":14},"name":"WhiteKing","qualname":"::core::Piece::WhiteKing","value":"Piece::WhiteKing","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11261,"byte_end":11270,"line_start":313,"line_end":313,"column_start":5,"column_end":14},"name":"BlackPawn","qualname":"::core::Piece::BlackPawn","value":"Piece::BlackPawn","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11287,"byte_end":11298,"line_start":314,"line_end":314,"column_start":5,"column_end":16},"name":"BlackKnight","qualname":"::core::Piece::BlackKnight","value":"Piece::BlackKnight","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11313,"byte_end":11324,"line_start":315,"line_end":315,"column_start":5,"column_end":16},"name":"BlackBishop","qualname":"::core::Piece::BlackBishop","value":"Piece::BlackBishop","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11339,"byte_end":11348,"line_start":316,"line_end":316,"column_start":5,"column_end":14},"name":"BlackRook","qualname":"::core::Piece::BlackRook","value":"Piece::BlackRook","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11365,"byte_end":11375,"line_start":317,"line_end":317,"column_start":5,"column_end":15},"name":"BlackQueen","qualname":"::core::Piece::BlackQueen","value":"Piece::BlackQueen","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11391,"byte_end":11400,"line_start":318,"line_end":318,"column_start":5,"column_end":14},"name":"BlackKing","qualname":"::core::Piece::BlackKing","value":"Piece::BlackKing","parent":{"krate":0,"index":2934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11067,"byte_end":11072,"line_start":305,"line_end":305,"column_start":10,"column_end":15},"name":"Piece","qualname":"::core::Piece","value":"pub enum Piece {\n    None = ,\n    WhitePawn = ,\n    WhiteKnight = ,\n    WhiteBishop = ,\n    WhiteRook = ,\n    WhiteQueen = ,\n    WhiteKing = ,\n    BlackPawn = ,\n    BlackKnight = ,\n    BlackBishop = ,\n    BlackRook = ,\n    BlackQueen = ,\n    BlackKing = ,\n}","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971}],"decl_id":null,"docs":" All possible Types of Pieces on a chessboard, for both colors.","sig":null,"attributes":[{"value":"/ All possible Types of Pieces on a chessboard, for both colors.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10821,"byte_end":10887,"line_start":298,"line_end":298,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10888,"byte_end":10891,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ For a representation of Only Pieces (with no color attached), see [`PieceType`]","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10892,"byte_end":10975,"line_start":300,"line_end":300,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10976,"byte_end":10979,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [`Piece`]: ./enum.PieceType","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10980,"byte_end":11011,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11012,"byte_end":11023,"line_start":303,"line_end":303,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12161,"byte_end":12167,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"player","qualname":"<Piece>::player","value":"pub fn player(Self) -> Option<Player>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Player` of a piece, if any.","sig":null,"attributes":[{"value":"/ Returns the `Player` of a piece, if any.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11432,"byte_end":11476,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11481,"byte_end":11484,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For an unsafe, \"lossy\" determination of a `Player`, see [`Piece::player_lossy`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11489,"byte_end":11573,"line_start":324,"line_end":324,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11578,"byte_end":11581,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11586,"byte_end":11600,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11605,"byte_end":11608,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11613,"byte_end":11620,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11625,"byte_end":11655,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11660,"byte_end":11663,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let black_knight = Piece::BlackKnight;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11668,"byte_end":11710,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/ let player: Player = black_knight.player().unwrap();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11715,"byte_end":11771,"line_start":332,"line_end":332,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11776,"byte_end":11779,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(player, Player::Black);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11784,"byte_end":11822,"line_start":334,"line_end":334,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11827,"byte_end":11834,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11839,"byte_end":11842,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The only discriminant that will return `None`:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11847,"byte_end":11897,"line_start":337,"line_end":337,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11902,"byte_end":11905,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11910,"byte_end":11917,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11922,"byte_end":11952,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11957,"byte_end":11960,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let piece = Piece::None;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11965,"byte_end":11993,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/ assert!(piece.player().is_none());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11998,"byte_end":12036,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12041,"byte_end":12048,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12053,"byte_end":12056,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`Piece::player_lossy`]: ./enum.Piece.html#method.player_lossy","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12061,"byte_end":12127,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12132,"byte_end":12149,"line_start":347,"line_end":347,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13294,"byte_end":13306,"line_start":387,"line_end":387,"column_start":12,"column_end":24},"name":"player_lossy","qualname":"<Piece>::player_lossy","value":"pub fn player_lossy(Self) -> Player","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Player` of a `Piece`.","sig":null,"attributes":[{"value":"/ Returns the `Player` of a `Piece`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12325,"byte_end":12363,"line_start":356,"line_end":356,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12368,"byte_end":12371,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12376,"byte_end":12400,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12405,"byte_end":12408,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If the discriminant is `Piece::None`, the returned `Player` will be undefined. This method","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12413,"byte_end":12507,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ must be used only when a returned `Piece` is guaranteed to exist.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12512,"byte_end":12581,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12586,"byte_end":12589,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ For a safer version of this method that accounts for an undetermined player,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12594,"byte_end":12674,"line_start":363,"line_end":363,"column_start":5,"column_end":85}},{"value":"/ see [`Piece::player`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12679,"byte_end":12705,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12710,"byte_end":12713,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12718,"byte_end":12732,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12737,"byte_end":12740,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12745,"byte_end":12752,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12757,"byte_end":12787,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12792,"byte_end":12795,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let white_pawn = Piece::WhitePawn;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12800,"byte_end":12838,"line_start":371,"line_end":371,"column_start":5,"column_end":43}},{"value":"/ let player: Player = white_pawn.player_lossy();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12843,"byte_end":12894,"line_start":372,"line_end":372,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12899,"byte_end":12902,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(player, Player::White);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12907,"byte_end":12945,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12950,"byte_end":12957,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12962,"byte_end":12965,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The following will invoke undefined behavior, so do not use it.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":12970,"byte_end":13037,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13042,"byte_end":13045,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13050,"byte_end":13057,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13062,"byte_end":13092,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13097,"byte_end":13100,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let piece = Piece::None;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13105,"byte_end":13133,"line_start":382,"line_end":382,"column_start":5,"column_end":33}},{"value":"/ let fake_player: Player = piece.player_lossy();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13138,"byte_end":13189,"line_start":383,"line_end":383,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13194,"byte_end":13201,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ [`Piece::player`]: ./enum.Piece.html#method.player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13206,"byte_end":13260,"line_start":385,"line_end":385,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13265,"byte_end":13282,"line_start":386,"line_end":386,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13903,"byte_end":13910,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"type_of","qualname":"<Piece>::type_of","value":"pub fn type_of(Self) -> PieceType","parent":null,"children":[],"decl_id":null,"docs":" Returns the `PieceType`.","sig":null,"attributes":[{"value":"/ Returns the `PieceType`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13415,"byte_end":13443,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13448,"byte_end":13451,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13455,"byte_end":13469,"line_start":395,"line_end":395,"column_start":4,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13474,"byte_end":13477,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13482,"byte_end":13489,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13494,"byte_end":13527,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13532,"byte_end":13535,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let white_queen = Piece::WhiteQueen;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13540,"byte_end":13580,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/ let no_piece = Piece::None;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13585,"byte_end":13616,"line_start":401,"line_end":401,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13621,"byte_end":13624,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(white_queen.type_of(), PieceType::Q);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13629,"byte_end":13681,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(no_piece.type_of(), PieceType::None);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13686,"byte_end":13738,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13743,"byte_end":13746,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let black_queen = Piece::BlackQueen;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13751,"byte_end":13791,"line_start":406,"line_end":406,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(white_queen.type_of(), black_queen.type_of());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13796,"byte_end":13857,"line_start":407,"line_end":407,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13862,"byte_end":13869,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":13874,"byte_end":13891,"line_start":409,"line_end":409,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14715,"byte_end":14727,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"player_piece","qualname":"<Piece>::player_piece","value":"pub fn player_piece(Self) -> Option<(Player, PieceType)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Player` and `PieceType` of this piece, if any. If the discriminant is\n `Piece::None`, `None` will be returned.","sig":null,"attributes":[{"value":"/ Returns the `Player` and `PieceType` of this piece, if any. If the discriminant is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14017,"byte_end":14103,"line_start":416,"line_end":416,"column_start":5,"column_end":91}},{"value":"/ `Piece::None`, `None` will be returned.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14108,"byte_end":14151,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14156,"byte_end":14159,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ For an unsafe, \"lossy\" determination of a `Player` and `Piece`,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14164,"byte_end":14231,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/ see [`Piece::player_piece_lossy`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14236,"byte_end":14274,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14279,"byte_end":14282,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14287,"byte_end":14301,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14306,"byte_end":14309,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14314,"byte_end":14321,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14326,"byte_end":14366,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14371,"byte_end":14374,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let white_queen = Piece::WhiteQueen;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14379,"byte_end":14419,"line_start":427,"line_end":427,"column_start":5,"column_end":45}},{"value":"/ let (player, piece) = white_queen.player_piece().unwrap();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14424,"byte_end":14486,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14491,"byte_end":14494,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(piece, PieceType::Q);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14499,"byte_end":14535,"line_start":430,"line_end":430,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(player, Player::White);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14540,"byte_end":14578,"line_start":431,"line_end":431,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14583,"byte_end":14590,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14595,"byte_end":14598,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`Piece::player_piece_lossy`]: ./enum.Piece.html#method.player_piece_lossy","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14603,"byte_end":14681,"line_start":434,"line_end":434,"column_start":5,"column_end":83}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14686,"byte_end":14703,"line_start":435,"line_end":435,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15978,"byte_end":15996,"line_start":479,"line_end":479,"column_start":12,"column_end":30},"name":"player_piece_lossy","qualname":"<Piece>::player_piece_lossy","value":"pub fn player_piece_lossy(Self) -> (Player, PieceType)","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Player` and `PieceType` of a `Piece`.","sig":null,"attributes":[{"value":"/ Returns the `Player` and `PieceType` of a `Piece`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14899,"byte_end":14953,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14958,"byte_end":14961,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14966,"byte_end":14990,"line_start":446,"line_end":446,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":14995,"byte_end":14998,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ If the discriminant is `Piece::None`, the returned `PieceType` will be correct, but","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15003,"byte_end":15090,"line_start":448,"line_end":448,"column_start":5,"column_end":92}},{"value":"/ the `Player` will be undefined.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15095,"byte_end":15130,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15135,"byte_end":15138,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ For a safer version of this method that accounts for an undetermined player,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15143,"byte_end":15223,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ see [`Piece::player_piece`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15228,"byte_end":15260,"line_start":452,"line_end":452,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15265,"byte_end":15268,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15273,"byte_end":15276,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15281,"byte_end":15295,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15300,"byte_end":15303,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15308,"byte_end":15315,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15320,"byte_end":15360,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15365,"byte_end":15368,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let white_queen = Piece::WhiteQueen;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15373,"byte_end":15413,"line_start":460,"line_end":460,"column_start":5,"column_end":45}},{"value":"/ let (player, piece) = white_queen.player_piece_lossy();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15418,"byte_end":15477,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15482,"byte_end":15485,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(piece, PieceType::Q);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15490,"byte_end":15526,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(player, Player::White);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15531,"byte_end":15569,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15574,"byte_end":15581,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15586,"byte_end":15589,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Undefined behavior can be encountered by doing something akin to:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15594,"byte_end":15663,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15668,"byte_end":15671,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15676,"byte_end":15683,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15688,"byte_end":15728,"line_start":470,"line_end":470,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15733,"byte_end":15736,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let not_a_piece = Piece::None;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15741,"byte_end":15775,"line_start":472,"line_end":472,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15780,"byte_end":15783,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let (wrong_player, piece) = not_a_piece.player_piece_lossy();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15788,"byte_end":15853,"line_start":474,"line_end":474,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15858,"byte_end":15865,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15870,"byte_end":15873,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`Piece::player_piece`]: ./enum.Piece.html#method.player_piece","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15878,"byte_end":15944,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":15949,"byte_end":15966,"line_start":478,"line_end":478,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16884,"byte_end":16888,"line_start":503,"line_end":503,"column_start":12,"column_end":16},"name":"make","qualname":"<Piece>::make","value":"pub fn make(Player, PieceType) -> Option<Piece>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Piece` from a `Player` and `PieceType`. If the `PieceType` is either\n `PieceType::All` or `PieceType::None`, the returned value will be `None`.","sig":null,"attributes":[{"value":"/ Creates a `Piece` from a `Player` and `PieceType`. If the `PieceType` is either","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16085,"byte_end":16168,"line_start":483,"line_end":483,"column_start":5,"column_end":88}},{"value":"/ `PieceType::All` or `PieceType::None`, the returned value will be `None`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16173,"byte_end":16250,"line_start":484,"line_end":484,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16255,"byte_end":16258,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ For an unsafe, lossy version of this method, see [`Piece::make_lossy`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16263,"byte_end":16338,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16343,"byte_end":16346,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16351,"byte_end":16365,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16370,"byte_end":16373,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16378,"byte_end":16385,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16390,"byte_end":16430,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16435,"byte_end":16438,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let black_knight = Piece::make(Player::Black, PieceType::N).unwrap();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16443,"byte_end":16516,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16521,"byte_end":16524,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(black_knight.type_of(), PieceType::N);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16529,"byte_end":16582,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(black_knight.player().unwrap(), Player::Black);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16587,"byte_end":16649,"line_start":496,"line_end":496,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16654,"byte_end":16657,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let illegal_piece = Piece::make(Player::White, PieceType::All);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16662,"byte_end":16729,"line_start":498,"line_end":498,"column_start":5,"column_end":72}},{"value":"/ assert!(illegal_piece.is_none());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16734,"byte_end":16771,"line_start":499,"line_end":499,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16776,"byte_end":16783,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ [`Piece::make_lossy`]: ./enum.Piece.html#method.make_lossy","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16788,"byte_end":16850,"line_start":501,"line_end":501,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":16855,"byte_end":16872,"line_start":502,"line_end":502,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18058,"byte_end":18068,"line_start":538,"line_end":538,"column_start":12,"column_end":22},"name":"make_lossy","qualname":"<Piece>::make_lossy","value":"pub fn make_lossy(Player, PieceType) -> Piece","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Piece` from a `Player` and `PieceType`.","sig":null,"attributes":[{"value":"/ Creates a `Piece` from a `Player` and `PieceType`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17142,"byte_end":17196,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17201,"byte_end":17204,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17209,"byte_end":17233,"line_start":513,"line_end":513,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17238,"byte_end":17241,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ If the `PieceType` is either `PieceType::All` or `PieceType::None`, undefined behavior will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17246,"byte_end":17341,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ follow. See [`Piece::make`] for a safer version of this method.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17346,"byte_end":17413,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17418,"byte_end":17421,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17426,"byte_end":17440,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17445,"byte_end":17448,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17453,"byte_end":17460,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17465,"byte_end":17505,"line_start":521,"line_end":521,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17510,"byte_end":17513,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let black_knight = Piece::make_lossy(Player::Black, PieceType::N);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17518,"byte_end":17588,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17593,"byte_end":17596,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(black_knight.type_of(), PieceType::N);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17601,"byte_end":17654,"line_start":525,"line_end":525,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(black_knight.player().unwrap(), Player::Black);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17659,"byte_end":17721,"line_start":526,"line_end":526,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17726,"byte_end":17733,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17738,"byte_end":17741,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ The following code snippet will give undefined behavior:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17746,"byte_end":17806,"line_start":529,"line_end":529,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17811,"byte_end":17814,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17819,"byte_end":17826,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Piece,PieceType,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17831,"byte_end":17871,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17876,"byte_end":17879,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let illegal_piece = Piece::make_lossy(Player::Black, PieceType::All);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17884,"byte_end":17957,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17962,"byte_end":17969,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ [`Piece::make`]: ./enum.Piece.html#method.make","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":17974,"byte_end":18024,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18029,"byte_end":18046,"line_start":537,"line_end":537,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18378,"byte_end":18387,"line_start":547,"line_end":547,"column_start":12,"column_end":21},"name":"character","qualname":"<Piece>::character","value":"pub fn character(Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Returns the character of a `Piece`. If the Piece is `Piece::None`, `None` will be returned.\n","sig":null,"attributes":[{"value":"/ Returns the character of a `Piece`. If the Piece is `Piece::None`, `None` will be returned.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18257,"byte_end":18352,"line_start":545,"line_end":545,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18357,"byte_end":18366,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18684,"byte_end":18699,"line_start":560,"line_end":560,"column_start":12,"column_end":27},"name":"character_lossy","qualname":"<Piece>::character_lossy","value":"pub fn character_lossy(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the character of a `Piece`.","sig":null,"attributes":[{"value":"/ Returns the character of a `Piece`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18541,"byte_end":18580,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18585,"byte_end":18588,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18593,"byte_end":18605,"line_start":557,"line_end":557,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18610,"byte_end":18613,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If the Piece is `Piece::None`, a panic will occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":18618,"byte_end":18672,"line_start":559,"line_end":559,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20432,"byte_end":20433,"line_start":614,"line_end":614,"column_start":5,"column_end":6},"name":"A","qualname":"::core::File::A","value":"File::A","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20468,"byte_end":20469,"line_start":615,"line_end":615,"column_start":5,"column_end":6},"name":"B","qualname":"::core::File::B","value":"File::B","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20479,"byte_end":20480,"line_start":616,"line_end":616,"column_start":5,"column_end":6},"name":"C","qualname":"::core::File::C","value":"File::C","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20490,"byte_end":20491,"line_start":617,"line_end":617,"column_start":5,"column_end":6},"name":"D","qualname":"::core::File::D","value":"File::D","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20501,"byte_end":20502,"line_start":618,"line_end":618,"column_start":5,"column_end":6},"name":"E","qualname":"::core::File::E","value":"File::E","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20512,"byte_end":20513,"line_start":619,"line_end":619,"column_start":5,"column_end":6},"name":"F","qualname":"::core::File::F","value":"File::F","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20523,"byte_end":20524,"line_start":620,"line_end":620,"column_start":5,"column_end":6},"name":"G","qualname":"::core::File::G","value":"File::G","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20534,"byte_end":20535,"line_start":621,"line_end":621,"column_start":5,"column_end":6},"name":"H","qualname":"::core::File::H","value":"File::H","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20421,"byte_end":20425,"line_start":613,"line_end":613,"column_start":10,"column_end":14},"name":"File","qualname":"::core::File","value":"pub enum File { A = , B = , C = , D = , E = , F = , G = , H = , }","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002}],"decl_id":null,"docs":" Enum for the Files of a Chessboard.\n","sig":null,"attributes":[{"value":"/ Enum for the Files of a Chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20298,"byte_end":20337,"line_start":610,"line_end":610,"column_start":1,"column_end":40}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20338,"byte_end":20349,"line_start":611,"line_end":611,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20661,"byte_end":20675,"line_start":627,"line_end":627,"column_start":18,"column_end":32},"name":"left_side_mask","qualname":"<File>::left_side_mask","value":"pub const fn left_side_mask(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit-set of all files to the left of the current file.\n","sig":null,"attributes":[{"value":"/ Returns the bit-set of all files to the left of the current file.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20560,"byte_end":20629,"line_start":625,"line_end":625,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20634,"byte_end":20643,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20833,"byte_end":20848,"line_start":633,"line_end":633,"column_start":18,"column_end":33},"name":"right_side_mask","qualname":"<File>::right_side_mask","value":"pub const fn right_side_mask(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit-set of all files to the right of the current file.\n","sig":null,"attributes":[{"value":"/ Returns the bit-set of all files to the right of the current file.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20731,"byte_end":20801,"line_start":631,"line_end":631,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20806,"byte_end":20815,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21173,"byte_end":21176,"line_start":650,"line_end":650,"column_start":12,"column_end":15},"name":"min","qualname":"<File>::min","value":"pub fn min(Self, File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum file.","sig":null,"attributes":[{"value":"/ Returns the minimum file.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20920,"byte_end":20949,"line_start":637,"line_end":637,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20954,"byte_end":20957,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20962,"byte_end":20965,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20970,"byte_end":20984,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20989,"byte_end":20992,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20997,"byte_end":21008,"line_start":642,"line_end":642,"column_start":5,"column_end":16}},{"value":"/ use pleco::core::File;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21013,"byte_end":21039,"line_start":643,"line_end":643,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21044,"byte_end":21047,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ let file_a = File::A;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21052,"byte_end":21077,"line_start":645,"line_end":645,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21082,"byte_end":21085,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(file_a.min(File::C), File::A);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21090,"byte_end":21135,"line_start":647,"line_end":647,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21140,"byte_end":21147,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21152,"byte_end":21161,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21566,"byte_end":21569,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"max","qualname":"<File>::max","value":"pub fn max(Self, File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum file.","sig":null,"attributes":[{"value":"/ Returns the maximum file.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21321,"byte_end":21350,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21355,"byte_end":21358,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21363,"byte_end":21377,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21382,"byte_end":21385,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21390,"byte_end":21401,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ use pleco::core::File;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21406,"byte_end":21432,"line_start":663,"line_end":663,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21437,"byte_end":21440,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let file_a = File::A;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21445,"byte_end":21470,"line_start":665,"line_end":665,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21475,"byte_end":21478,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(file_a.max(File::C), File::C);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21483,"byte_end":21528,"line_start":667,"line_end":667,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21533,"byte_end":21540,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21545,"byte_end":21554,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21769,"byte_end":21777,"line_start":679,"line_end":679,"column_start":12,"column_end":20},"name":"distance","qualname":"<File>::distance","value":"pub fn distance(Self, File) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the distance to another `File`.\n","sig":null,"attributes":[{"value":"/ Returns the distance to another `File`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21714,"byte_end":21757,"line_start":678,"line_end":678,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21987,"byte_end":21989,"line_start":688,"line_end":688,"column_start":12,"column_end":14},"name":"bb","qualname":"<File>::bb","value":"pub fn bb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the file `BitBoard`.\n","sig":null,"attributes":[{"value":"/ Returns the file `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":21943,"byte_end":21975,"line_start":687,"line_end":687,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22417,"byte_end":22419,"line_start":708,"line_end":708,"column_start":5,"column_end":7},"name":"R1","qualname":"::core::Rank::R1","value":"Rank::R1","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22429,"byte_end":22431,"line_start":709,"line_end":709,"column_start":5,"column_end":7},"name":"R2","qualname":"::core::Rank::R2","value":"Rank::R2","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22441,"byte_end":22443,"line_start":710,"line_end":710,"column_start":5,"column_end":7},"name":"R3","qualname":"::core::Rank::R3","value":"Rank::R3","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22453,"byte_end":22455,"line_start":711,"line_end":711,"column_start":5,"column_end":7},"name":"R4","qualname":"::core::Rank::R4","value":"Rank::R4","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22465,"byte_end":22467,"line_start":712,"line_end":712,"column_start":5,"column_end":7},"name":"R5","qualname":"::core::Rank::R5","value":"Rank::R5","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22477,"byte_end":22479,"line_start":713,"line_end":713,"column_start":5,"column_end":7},"name":"R6","qualname":"::core::Rank::R6","value":"Rank::R6","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22489,"byte_end":22491,"line_start":714,"line_end":714,"column_start":5,"column_end":7},"name":"R7","qualname":"::core::Rank::R7","value":"Rank::R7","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22501,"byte_end":22503,"line_start":715,"line_end":715,"column_start":5,"column_end":7},"name":"R8","qualname":"::core::Rank::R8","value":"Rank::R8","parent":{"krate":0,"index":3020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22385,"byte_end":22389,"line_start":707,"line_end":707,"column_start":10,"column_end":14},"name":"Rank","qualname":"::core::Rank","value":"pub enum Rank { R1 = , R2 = , R3 = , R4 = , R5 = , R6 = , R7 = , R8 = , }","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042}],"decl_id":null,"docs":" Enum for the Ranks of a Chessboard.\n","sig":null,"attributes":[{"value":"/ Enum for the Ranks of a Chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22262,"byte_end":22301,"line_start":704,"line_end":704,"column_start":1,"column_end":40}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22302,"byte_end":22313,"line_start":705,"line_end":705,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22583,"byte_end":22591,"line_start":720,"line_end":720,"column_start":12,"column_end":20},"name":"distance","qualname":"<Rank>::distance","value":"pub fn distance(Self, Rank) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the distance to another `Rank`.\n","sig":null,"attributes":[{"value":"/ Returns the distance to another `Rank`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22528,"byte_end":22571,"line_start":719,"line_end":719,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22801,"byte_end":22803,"line_start":729,"line_end":729,"column_start":12,"column_end":14},"name":"bb","qualname":"<Rank>::bb","value":"pub fn bb(Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the rank `BitBoard`.\n","sig":null,"attributes":[{"value":"/ Returns the rank `BitBoard`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22757,"byte_end":22789,"line_start":728,"line_end":728,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22995,"byte_end":23003,"line_start":738,"line_end":738,"column_start":5,"column_end":13},"name":"KingSide","qualname":"::core::CastleType::KingSide","value":"CastleType::KingSide","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23013,"byte_end":23022,"line_start":739,"line_end":739,"column_start":5,"column_end":14},"name":"QueenSide","qualname":"::core::CastleType::QueenSide","value":"CastleType::QueenSide","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3060},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22978,"byte_end":22988,"line_start":737,"line_end":737,"column_start":10,"column_end":20},"name":"CastleType","qualname":"::core::CastleType","value":"pub enum CastleType { KingSide = , QueenSide = , }","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3064}],"decl_id":null,"docs":" Types of Castling available to a player.\n","sig":null,"attributes":[{"value":"/ Types of Castling available to a player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22871,"byte_end":22915,"line_start":734,"line_end":734,"column_start":1,"column_end":45}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22957,"byte_end":22968,"line_start":736,"line_end":736,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23120,"byte_end":23122,"line_start":746,"line_end":746,"column_start":5,"column_end":7},"name":"MG","qualname":"::core::Phase::MG","value":"Phase::MG","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23132,"byte_end":23134,"line_start":747,"line_end":747,"column_start":5,"column_end":7},"name":"EG","qualname":"::core::Phase::EG","value":"Phase::EG","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23108,"byte_end":23113,"line_start":745,"line_end":745,"column_start":10,"column_end":15},"name":"Phase","qualname":"::core::Phase","value":"pub enum Phase { MG = , EG = , }","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3079}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23087,"byte_end":23098,"line_start":744,"line_end":744,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23270,"byte_end":23277,"line_start":753,"line_end":753,"column_start":8,"column_end":15},"name":"rank_bb","qualname":"::core::rank_bb","value":"pub fn rank_bb(u8) -> u64","parent":null,"children":[],"decl_id":null,"docs":" For whatever rank the bit (inner value of a `SQ`) is, returns the\n corresponding rank as a u64.\n","sig":null,"attributes":[{"value":"/ For whatever rank the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23142,"byte_end":23211,"line_start":750,"line_end":750,"column_start":1,"column_end":70}},{"value":"/ corresponding rank as a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23212,"byte_end":23244,"line_start":751,"line_end":751,"column_start":1,"column_end":33}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23245,"byte_end":23262,"line_start":752,"line_end":752,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23458,"byte_end":23468,"line_start":760,"line_end":760,"column_start":8,"column_end":18},"name":"rank_of_sq","qualname":"::core::rank_of_sq","value":"pub fn rank_of_sq(u8) -> Rank","parent":null,"children":[],"decl_id":null,"docs":" For whatever rank the bit (inner value of a `SQ`) is, returns the\n corresponding `Rank`.\n","sig":null,"attributes":[{"value":"/ For whatever rank the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23337,"byte_end":23406,"line_start":757,"line_end":757,"column_start":1,"column_end":70}},{"value":"/ corresponding `Rank`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23407,"byte_end":23432,"line_start":758,"line_end":758,"column_start":1,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23433,"byte_end":23450,"line_start":759,"line_end":759,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23728,"byte_end":23742,"line_start":770,"line_end":770,"column_start":8,"column_end":22},"name":"rank_idx_of_sq","qualname":"::core::rank_idx_of_sq","value":"pub fn rank_idx_of_sq(u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" For whatever rank the bit (inner value of a `SQ`) is, returns the\n corresponding `Rank` index.\n","sig":null,"attributes":[{"value":"/ For whatever rank the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23601,"byte_end":23670,"line_start":767,"line_end":767,"column_start":1,"column_end":70}},{"value":"/ corresponding `Rank` index.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23671,"byte_end":23702,"line_start":768,"line_end":768,"column_start":1,"column_end":32}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23703,"byte_end":23720,"line_start":769,"line_end":769,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23908,"byte_end":23915,"line_start":777,"line_end":777,"column_start":8,"column_end":15},"name":"file_bb","qualname":"::core::file_bb","value":"pub fn file_bb(u8) -> u64","parent":null,"children":[],"decl_id":null,"docs":" For whatever file the bit (inner value of a `SQ`) is, returns the\n corresponding file as a u64.\n","sig":null,"attributes":[{"value":"/ For whatever file the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23780,"byte_end":23849,"line_start":774,"line_end":774,"column_start":1,"column_end":70}},{"value":"/ corresponding file as a u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23850,"byte_end":23882,"line_start":775,"line_end":775,"column_start":1,"column_end":33}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23883,"byte_end":23900,"line_start":776,"line_end":776,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24092,"byte_end":24102,"line_start":784,"line_end":784,"column_start":8,"column_end":18},"name":"file_of_sq","qualname":"::core::file_of_sq","value":"pub fn file_of_sq(u8) -> File","parent":null,"children":[],"decl_id":null,"docs":" For whatever file the bit (inner value of a `SQ`) is, returns the\n corresponding `File`.\n","sig":null,"attributes":[{"value":"/ For whatever file the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":23971,"byte_end":24040,"line_start":781,"line_end":781,"column_start":1,"column_end":70}},{"value":"/ corresponding `File`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24041,"byte_end":24066,"line_start":782,"line_end":782,"column_start":1,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24067,"byte_end":24084,"line_start":783,"line_end":783,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":898},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24320,"byte_end":24334,"line_start":793,"line_end":793,"column_start":8,"column_end":22},"name":"file_idx_of_sq","qualname":"::core::file_idx_of_sq","value":"pub fn file_idx_of_sq(u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" For whatever file the bit (inner value of a `SQ`) is, returns the\n corresponding `File` index.\n","sig":null,"attributes":[{"value":"/ For whatever file the bit (inner value of a `SQ`) is, returns the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24193,"byte_end":24262,"line_start":790,"line_end":790,"column_start":1,"column_end":70}},{"value":"/ corresponding `File` index.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24263,"byte_end":24294,"line_start":791,"line_end":791,"column_start":1,"column_end":32}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24295,"byte_end":24312,"line_start":792,"line_end":792,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":899},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24637,"byte_end":24646,"line_start":805,"line_end":805,"column_start":8,"column_end":17},"name":"u64_to_u8","qualname":"::core::u64_to_u8","value":"pub fn u64_to_u8(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts a singular bit of a u64 to it's index in the u64.\n If there's more than one bit in the u64, this will be done for\n the least significant bit.","sig":null,"attributes":[{"value":"/ Converts a singular bit of a u64 to it's index in the u64.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24381,"byte_end":24443,"line_start":797,"line_end":797,"column_start":1,"column_end":63}},{"value":"/ If there's more than one bit in the u64, this will be done for","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24444,"byte_end":24510,"line_start":798,"line_end":798,"column_start":1,"column_end":67}},{"value":"/ the least significant bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24511,"byte_end":24541,"line_start":799,"line_end":799,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24542,"byte_end":24545,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24546,"byte_end":24558,"line_start":801,"line_end":801,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24559,"byte_end":24562,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ Undefined behavior if there are 0 bits in the input.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24563,"byte_end":24619,"line_start":803,"line_end":803,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24620,"byte_end":24629,"line_start":804,"line_end":804,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24931,"byte_end":24940,"line_start":817,"line_end":817,"column_start":8,"column_end":17},"name":"u8_to_u64","qualname":"::core::u8_to_u64","value":"pub fn u8_to_u64(u8) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Given a square (u8) that is valid, returns the bitboard representation\n of that square.","sig":null,"attributes":[{"value":"/ Given a square (u8) that is valid, returns the bitboard representation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24730,"byte_end":24804,"line_start":810,"line_end":810,"column_start":1,"column_end":75}},{"value":"/ of that square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24805,"byte_end":24824,"line_start":811,"line_end":811,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24825,"byte_end":24828,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24829,"byte_end":24841,"line_start":813,"line_end":813,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24842,"byte_end":24845,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ If the input is greater than 63, an empty u64 will be returned.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24846,"byte_end":24913,"line_start":815,"line_end":815,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":24914,"byte_end":24923,"line_start":816,"line_end":816,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":901},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"board","qualname":"::board","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1147},{"krate":0,"index":1171},{"krate":0,"index":1210},{"krate":0,"index":1263},{"krate":0,"index":1304},{"krate":0,"index":1328},{"krate":0,"index":1452},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1614},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":3243},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":1629},{"krate":0,"index":1636},{"krate":0,"index":1638}],"decl_id":null,"docs":" This module contains `Board`, the object representing the current state of a chessboard.\n All modifications to the current state of the board is done through this object, as well as\n gathering information about the current state of the board.","sig":null,"attributes":[{"value":"/ This module contains `Board`, the object representing the current state of a chessboard.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130044,"byte_end":130136,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ All modifications to the current state of the board is done through this object, as well as","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130137,"byte_end":130232,"line_start":2,"line_end":2,"column_start":1,"column_end":96}},{"value":"/ gathering information about the current state of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130233,"byte_end":130296,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130297,"byte_end":130300,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module also contains structures used by the board, such as [`CastlingRights`] for","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130301,"byte_end":130391,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ determining castling rights throughout a game. Other utilities that may be of use","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130392,"byte_end":130477,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/ are [`PieceLocations`], which maps squares on a chessboard to pieces and players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130478,"byte_end":130563,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130564,"byte_end":130567,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`CastlingRights`]: castle_rights/struct.Castling.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130568,"byte_end":130626,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/ [`PieceLocations`]: piece_locations/struct.Eval.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":130627,"byte_end":130683,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"movegen","qualname":"::board::movegen","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1081},{"krate":0,"index":1089}],"decl_id":null,"docs":" Module for generating moves from a `Board`. Allow for generating Legal and Pseudo-Legal moves\n of various types.","sig":null,"attributes":[{"value":"/ Module for generating moves from a `Board`. Allow for generating Legal and Pseudo-Legal moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227547,"byte_end":227644,"line_start":1,"line_end":1,"column_start":1,"column_end":98}},{"value":"/ of various types.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227645,"byte_end":227666,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227667,"byte_end":227670,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Generation Types","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227671,"byte_end":227693,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227694,"byte_end":227697,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The Types of moves that can be generated from a [`Board`] are:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227698,"byte_end":227764,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227765,"byte_end":227768,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `All`, `Captures`, `Quiets`, `QuietChecks`, `Evasions`, `NonEvasions`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227769,"byte_end":227842,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227843,"byte_end":227846,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ There are all derived from the [`GenTypes`] enum.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227847,"byte_end":227900,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227901,"byte_end":227904,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Generating all moves is legal to do no matter the position. However, `Captures`, `Quiets`,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":227905,"byte_end":227999,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ `QuietChecks`, and `NonEvasions` can only be done if the board is in NOT in check. Likewise,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228000,"byte_end":228096,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ `Evasions` can only be done when the board is currently in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228097,"byte_end":228166,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228167,"byte_end":228170,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `All` will generating all moves, while any other option will generate all moves, except for under-promotions.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228171,"byte_end":228284,"line_start":16,"line_end":16,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228285,"byte_end":228288,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # `Legal` vs. `PseudoLegal` Moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228289,"byte_end":228326,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228327,"byte_end":228330,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For the generation type, moves can either be generated to be Legal, Or Pseudo-Legal. A Legal","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228331,"byte_end":228427,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ move is, for as the name implies, a legal move for the current side to play for a given position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228428,"byte_end":228529,"line_start":21,"line_end":21,"column_start":1,"column_end":102}},{"value":"/ A Pseudo-Legal move is a move that is \"likely\" to be legal for the current position, but cannot","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228530,"byte_end":228629,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ be guaranteed.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228630,"byte_end":228648,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228649,"byte_end":228652,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Why would someone ever want to generate moves that might not be legal? Performance. Based on","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228653,"byte_end":228749,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ some benchmarking, generating all Pseudo-Legal moves is around twice as fast as generating all","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228750,"byte_end":228848,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ Legal moves. So, if you are fine with generating moves and then checking them post-generation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228849,"byte_end":228946,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ with a [`Board::legal_move`], then the performance boost is potentially worth it.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":228947,"byte_end":229032,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229033,"byte_end":229036,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229037,"byte_end":229051,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229052,"byte_end":229055,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Generating all legal moves:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229056,"byte_end":229087,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229088,"byte_end":229091,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229092,"byte_end":229105,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ let moves: MoveList = board.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229106,"byte_end":229155,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229156,"byte_end":229163,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229164,"byte_end":229167,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Generating all pseudo-legal moves:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229168,"byte_end":229206,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229207,"byte_end":229210,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229211,"byte_end":229224,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ let moves: MoveList = board.generate_pseudolegal_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229225,"byte_end":229286,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229287,"byte_end":229294,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229295,"byte_end":229298,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Generating all pseudo-legal captures:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229299,"byte_end":229340,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229341,"byte_end":229344,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229345,"byte_end":229358,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ let moves: MoveList = board.generate_moves_of_type(GenTypes::Captures);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229359,"byte_end":229434,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229435,"byte_end":229442,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229443,"byte_end":229446,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`GenTypes`]: ../../core/enum.GenTypes.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229447,"byte_end":229494,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229495,"byte_end":229530,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ [`Board::legal_move`]: ../struct.Board.html#method.legal_move","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":229531,"byte_end":229596,"line_start":52,"line_end":52,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230755,"byte_end":230763,"line_start":93,"line_end":93,"column_start":11,"column_end":19},"name":"Legality","qualname":"::board::movegen::Legality","value":"Legality","parent":null,"children":[{"krate":0,"index":1055}],"decl_id":null,"docs":" Determines the if the moves generated are `PseudoLegal` or `Legal` moves.\n PseudoLegal moves require that a move's legality is determined before applying\n to a `Board`.\n","sig":null,"attributes":[{"value":"/ Determines the if the moves generated are `PseudoLegal` or `Legal` moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230566,"byte_end":230643,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ PseudoLegal moves require that a move's legality is determined before applying","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230644,"byte_end":230726,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ to a `Board`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230727,"byte_end":230744,"line_start":92,"line_end":92,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230834,"byte_end":230843,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"gen_legal","qualname":"::board::movegen::Legality::gen_legal","value":"pub fn gen_legal() -> bool","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" Returns if the only legal moves should be generated.\n","sig":null,"attributes":[{"value":"/ Returns if the only legal moves should be generated.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230770,"byte_end":230826,"line_start":94,"line_end":94,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230932,"byte_end":230937,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Legal","qualname":"::board::movegen::Legal","value":"Legal {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy Struct to represent the generation of `Legal` Moves.\n","sig":null,"attributes":[{"value":"/ Dummy Struct to represent the generation of `Legal` Moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230858,"byte_end":230920,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231022,"byte_end":231033,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"PseudoLegal","qualname":"::board::movegen::PseudoLegal","value":"PseudoLegal {  }","parent":null,"children":[],"decl_id":null,"docs":" Dummy Struct to represent the generation of `PseudoLegal` Moves.\n","sig":null,"attributes":[{"value":"/ Dummy Struct to represent the generation of `PseudoLegal` Moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":230942,"byte_end":231010,"line_start":101,"line_end":101,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231512,"byte_end":231519,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"MoveGen","qualname":"::board::movegen::MoveGen","value":"MoveGen {  }","parent":null,"children":[],"decl_id":null,"docs":" Public move generator.","sig":null,"attributes":[{"value":"/ Public move generator.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231387,"byte_end":231413,"line_start":120,"line_end":120,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231414,"byte_end":231417,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type around `InnerMoveGen`, allowing for a more friendly API","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231418,"byte_end":231500,"line_start":122,"line_end":122,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231643,"byte_end":231651,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"generate","qualname":"<MoveGen>::generate","value":"pub fn generate<L: Legality, G: GenTypeTrait>(&Board) -> MoveList","parent":null,"children":[],"decl_id":null,"docs":" Returns `MoveList` of all moves for a given board, Legality & GenType.\n","sig":null,"attributes":[{"value":"/ Returns `MoveList` of all moves for a given board, Legality & GenType.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231543,"byte_end":231617,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231622,"byte_end":231631,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232214,"byte_end":232230,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"generate_scoring","qualname":"<MoveGen>::generate_scoring","value":"pub fn generate_scoring<L: Legality, G: GenTypeTrait>(&Board)\n-> ScoringMoveList","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ScoringMoveList` of all moves for a given board, Legality & GenType.\n","sig":null,"attributes":[{"value":"/ Returns a `ScoringMoveList` of all moves for a given board, Legality & GenType.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232105,"byte_end":232188,"line_start":139,"line_end":139,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232193,"byte_end":232202,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233018,"byte_end":233024,"line_start":159,"line_end":159,"column_start":19,"column_end":25},"name":"extend","qualname":"<MoveGen>::extend","value":"pub unsafe fn extend<L: Legality, G: GenTypeTrait,\n                     MP: MVPushable>(&Board, &mut MP) where\n<MP as Index<usize>>::Output: Sized","parent":null,"children":[],"decl_id":null,"docs":" Extends the current list of moves of a certain Legality, and Generation type. This method\n will correctly set the new length of the list.","sig":null,"attributes":[{"value":"/ Extends the current list of moves of a certain Legality, and Generation type. This method","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232713,"byte_end":232806,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ will correctly set the new length of the list.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232811,"byte_end":232861,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232866,"byte_end":232869,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232874,"byte_end":232886,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232891,"byte_end":232894,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Unsafe due to possible overwriting, as it is unaware of the current list's length.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232899,"byte_end":232985,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":232990,"byte_end":232999,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":234196,"byte_end":234211,"line_start":181,"line_end":181,"column_start":19,"column_end":34},"name":"extend_from_ptr","qualname":"<MoveGen>::extend_from_ptr","value":"pub unsafe fn extend_from_ptr<L: Legality, G: GenTypeTrait,\n                              MP: MVPushable>(&Board, *mut MP::Output)\n-> *mut MP::Output where <MP as Index<usize>>::Output: Sized","parent":null,"children":[],"decl_id":null,"docs":" Extends the current list of moves of a certain Legality, and Generation type. Takes in a pointer\n to the next available (empty) index, and returns the pointer to the next open index after generating\n the moves","sig":null,"attributes":[{"value":"/ Extends the current list of moves of a certain Legality, and Generation type. Takes in a pointer","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233529,"byte_end":233629,"line_start":169,"line_end":169,"column_start":5,"column_end":105}},{"value":"/ to the next available (empty) index, and returns the pointer to the next open index after generating","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233634,"byte_end":233738,"line_start":170,"line_end":170,"column_start":5,"column_end":109}},{"value":"/ the moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233743,"byte_end":233756,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233761,"byte_end":233764,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233769,"byte_end":233781,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233786,"byte_end":233789,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Obviously, this is extremely unsafe to use, as there is a possibility of both overwriting valid memory,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233794,"byte_end":233901,"line_start":175,"line_end":175,"column_start":5,"column_end":112}},{"value":"/ or otherwise pushing in an invalid pointer.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233906,"byte_end":233953,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233958,"byte_end":233961,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Also, this does not update the size of the movelist inputted. It's recommended to use the method","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":233966,"byte_end":234066,"line_start":178,"line_end":178,"column_start":5,"column_end":105}},{"value":"/ `MVPushable::unchecked_set_len(...)` to set the size manually after this method.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":234071,"byte_end":234155,"line_start":179,"line_end":179,"column_start":5,"column_end":89}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":234160,"byte_end":234177,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"castle_rights","qualname":"::board::castle_rights","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":1157},{"krate":0,"index":1169}],"decl_id":null,"docs":" Module for the `Castling` structure, which helps provide an easy way for the\n `Board` to keep track of the various castling rights available for each player.","sig":null,"attributes":[{"value":"/ Module for the `Castling` structure, which helps provide an easy way for the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255711,"byte_end":255791,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ `Board` to keep track of the various castling rights available for each player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255792,"byte_end":255875,"line_start":2,"line_end":2,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255876,"byte_end":255879,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Alongside keeping track of castling rights, it also keeps track of if a player has castled.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255880,"byte_end":255975,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255976,"byte_end":255979,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ At it's core, a [`Castling`] is a simple u8 which sets bits for each possible castling right.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":255980,"byte_end":256077,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ This is necessary to keep track of for a chess match due to determining future castlings.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":256078,"byte_end":256171,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":256172,"byte_end":256175,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Castling`]: struct.Castling.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":256176,"byte_end":256214,"line_start":9,"line_end":9,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":256937,"byte_end":256945,"line_start":33,"line_end":33,"column_start":16,"column_end":24},"name":"Castling","qualname":"::board::castle_rights::Castling","value":"Castling {  }","parent":null,"children":[{"krate":0,"index":3091}],"decl_id":null,"docs":" Structure to help with recognizing the various possibilities of castling.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":256966,"byte_end":256973,"line_start":34,"line_end":34,"column_start":15,"column_end":22},"name":"WHITE_K","qualname":"::board::castle_rights::Castling::WHITE_K","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257051,"byte_end":257058,"line_start":35,"line_end":35,"column_start":15,"column_end":22},"name":"WHITE_Q","qualname":"::board::castle_rights::Castling::WHITE_Q","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257137,"byte_end":257144,"line_start":36,"line_end":36,"column_start":15,"column_end":22},"name":"BLACK_K","qualname":"::board::castle_rights::Castling::BLACK_K","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257222,"byte_end":257229,"line_start":37,"line_end":37,"column_start":15,"column_end":22},"name":"BLACK_Q","qualname":"::board::castle_rights::Castling::BLACK_Q","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257308,"byte_end":257317,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"name":"WHITE_ALL","qualname":"::board::castle_rights::Castling::WHITE_ALL","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257440,"byte_end":257449,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"name":"BLACK_ALL","qualname":"::board::castle_rights::Castling::BLACK_ALL","value":"Self","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257669,"byte_end":257691,"line_start":48,"line_end":48,"column_start":12,"column_end":34},"name":"remove_player_castling","qualname":"<Castling>::remove_player_castling","value":"pub fn remove_player_castling(&mut Self, Player)","parent":null,"children":[],"decl_id":null,"docs":" Removes all castling possibility for a single player\n","sig":null,"attributes":[{"value":"/ Removes all castling possibility for a single player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257587,"byte_end":257643,"line_start":46,"line_end":46,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257648,"byte_end":257657,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257939,"byte_end":257951,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"all_castling","qualname":"<Castling>::all_castling","value":"pub const fn all_castling() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257912,"byte_end":257921,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258059,"byte_end":258068,"line_start":63,"line_end":63,"column_start":18,"column_end":27},"name":"empty_set","qualname":"<Castling>::empty_set","value":"pub const fn empty_set() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258032,"byte_end":258041,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258207,"byte_end":258232,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"remove_king_side_castling","qualname":"<Castling>::remove_king_side_castling","value":"pub fn remove_king_side_castling(&mut Self, Player)","parent":null,"children":[],"decl_id":null,"docs":" Removes King-Side castling possibility for a single player\n","sig":null,"attributes":[{"value":"/ Removes King-Side castling possibility for a single player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258119,"byte_end":258181,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258186,"byte_end":258195,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258521,"byte_end":258547,"line_start":78,"line_end":78,"column_start":12,"column_end":38},"name":"remove_queen_side_castling","qualname":"<Castling>::remove_queen_side_castling","value":"pub fn remove_queen_side_castling(&mut Self, Player)","parent":null,"children":[],"decl_id":null,"docs":" Removes Queen-Side castling possibility for a single player\n","sig":null,"attributes":[{"value":"/ Removes Queen-Side castling possibility for a single player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258432,"byte_end":258495,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258500,"byte_end":258509,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258824,"byte_end":258837,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"castle_rights","qualname":"<Castling>::castle_rights","value":"pub fn castle_rights(Self, Player, CastleType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a player can castle for a given side\n","sig":null,"attributes":[{"value":"/ Returns if a player can castle for a given side","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258747,"byte_end":258798,"line_start":85,"line_end":85,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":258803,"byte_end":258812,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259435,"byte_end":259452,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"player_can_castle","qualname":"<Castling>::player_can_castle","value":"pub fn player_can_castle(Self, Player) -> Castling","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259414,"byte_end":259423,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259696,"byte_end":259707,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"no_castling","qualname":"<Castling>::no_castling","value":"pub fn no_castling(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if both players have lost their ability to castle\n","sig":null,"attributes":[{"value":"/ Returns if both players have lost their ability to castle","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259609,"byte_end":259670,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259675,"byte_end":259684,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259946,"byte_end":259961,"line_start":122,"line_end":122,"column_start":12,"column_end":27},"name":"update_castling","qualname":"<Castling>::update_castling","value":"pub fn update_castling(&mut Self, SQ, SQ) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":259925,"byte_end":259934,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260613,"byte_end":260630,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"add_castling_char","qualname":"<Castling>::add_castling_char","value":"pub fn add_castling_char(&mut Self, char)","parent":null,"children":[],"decl_id":null,"docs":" Adds the Right to castle based on an `char`.","sig":null,"attributes":[{"value":"/ Adds the Right to castle based on an `char`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260199,"byte_end":260247,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260252,"byte_end":260255,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```md","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260260,"byte_end":260269,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ `K` -> Add White King-side Castling bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260274,"byte_end":260318,"line_start":132,"line_end":132,"column_start":5,"column_end":49}},{"value":"/ `Q` -> Add White Queen-side Castling bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260323,"byte_end":260368,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ `k` -> Add Black King-side Castling bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260373,"byte_end":260417,"line_start":134,"line_end":134,"column_start":5,"column_end":49}},{"value":"/ `q` -> Add Black Queen-side Castling bit.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260422,"byte_end":260467,"line_start":135,"line_end":135,"column_start":5,"column_end":50}},{"value":"/ `-` -> Do nothing.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260472,"byte_end":260494,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260499,"byte_end":260506,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260511,"byte_end":260514,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260519,"byte_end":260531,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260536,"byte_end":260539,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Panics of the char is not `K`, `Q`, `k`, `q`, or `-`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260544,"byte_end":260601,"line_start":141,"line_end":141,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261223,"byte_end":261236,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Castling>::pretty_string","value":"pub fn pretty_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a pretty String representing the castling state","sig":null,"attributes":[{"value":"/ Returns a pretty String representing the castling state","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260928,"byte_end":260987,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":260992,"byte_end":260995,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Used for FEN Strings, with (`K` | `Q`) representing white castling abilities,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261000,"byte_end":261081,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/ and (`k` | `q`) representing black castling abilities. If there are no bits set,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261086,"byte_end":261170,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"/ returns a String containing \"-\".","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261175,"byte_end":261211,"line_start":157,"line_end":157,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"piece_locations","qualname":"::board::piece_locations","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1206}],"decl_id":null,"docs":" Contains the `PieceLocations` structure that maps from squares of a board to a player / piece at that square.","sig":null,"attributes":[{"value":"/ Contains the `PieceLocations` structure that maps from squares of a board to a player / piece at that square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262367,"byte_end":262480,"line_start":1,"line_end":1,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262481,"byte_end":262484,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is useful mainly for the [`Board`] to use internally for fast square lookups.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262485,"byte_end":262571,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262572,"byte_end":262575,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262576,"byte_end":262611,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/ [`PieceLocations`]: struct.PieceLocations.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262612,"byte_end":262662,"line_start":6,"line_end":6,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263135,"byte_end":263149,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"PieceLocations","qualname":"::board::piece_locations::PieceLocations","value":"PieceLocations {  }","parent":null,"children":[{"krate":0,"index":1184}],"decl_id":null,"docs":" Struct to allow fast lookups for any square. Given a square, allows for determining if there\n is a piece currently there, and if so, allows for determining it's color and type of piece.","sig":null,"attributes":[{"value":"/ Struct to allow fast lookups for any square. Given a square, allows for determining if there","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262757,"byte_end":262853,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ is a piece currently there, and if so, allows for determining it's color and type of piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262854,"byte_end":262949,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262950,"byte_end":262953,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Piece Locations is a BLIND structure, Providing a function of  |sq| -> |Piece AND/OR Player|","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":262954,"byte_end":263050,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ The reverse cannot be done Looking up squares from a piece / player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263051,"byte_end":263123,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263690,"byte_end":263695,"line_start":41,"line_end":41,"column_start":18,"column_end":23},"name":"blank","qualname":"<PieceLocations>::blank","value":"pub const fn blank() -> PieceLocations","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `PieceLocations` with a default of no pieces on the board.\n","sig":null,"attributes":[{"value":"/ Constructs a new `PieceLocations` with a default of no pieces on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263593,"byte_end":263672,"line_start":40,"line_end":40,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263998,"byte_end":264003,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"place","qualname":"<PieceLocations>::place","value":"pub fn place(&mut Self, SQ, Player, PieceType)","parent":null,"children":[],"decl_id":null,"docs":" Places a given piece for a given player at a certain square.","sig":null,"attributes":[{"value":"/ Places a given piece for a given player at a certain square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263780,"byte_end":263844,"line_start":45,"line_end":45,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263849,"byte_end":263852,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263857,"byte_end":263869,"line_start":47,"line_end":47,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263874,"byte_end":263877,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Panics if Square is of index higher than 63 or the piece is `PieceType::{None || All}`","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263882,"byte_end":263972,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263977,"byte_end":263986,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264361,"byte_end":264367,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"remove","qualname":"<PieceLocations>::remove","value":"pub fn remove(&mut Self, SQ)","parent":null,"children":[],"decl_id":null,"docs":" Removes a Square.","sig":null,"attributes":[{"value":"/ Removes a Square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264228,"byte_end":264249,"line_start":57,"line_end":57,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264254,"byte_end":264257,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264262,"byte_end":264274,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264279,"byte_end":264282,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Panics if Square is of index higher than 63.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264287,"byte_end":264335,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264340,"byte_end":264349,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264673,"byte_end":264681,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"piece_at","qualname":"<PieceLocations>::piece_at","value":"pub fn piece_at(&Self, SQ) -> Piece","parent":null,"children":[],"decl_id":null,"docs":" Returns the Piece at a `SQ`, Or None if the square is empty.","sig":null,"attributes":[{"value":"/ Returns the Piece at a `SQ`, Or None if the square is empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264497,"byte_end":264561,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264566,"byte_end":264569,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264574,"byte_end":264586,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264591,"byte_end":264594,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Panics if square is of index higher than 63.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264599,"byte_end":264647,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264652,"byte_end":264661,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264863,"byte_end":264872,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"at_square","qualname":"<PieceLocations>::at_square","value":"pub fn at_square(&Self, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a square is occupied.\n","sig":null,"attributes":[{"value":"/ Returns if a square is occupied.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264801,"byte_end":264837,"line_start":79,"line_end":79,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":264842,"byte_end":264851,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265093,"byte_end":265105,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"first_square","qualname":"<PieceLocations>::first_square","value":"pub fn first_square(&Self, PieceType, Player) -> Option<SQ>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first square (if any) that a piece / player is at.\n","sig":null,"attributes":[{"value":"/ Returns the first square (if any) that a piece / player is at.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265001,"byte_end":265067,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265072,"byte_end":265081,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265464,"byte_end":265472,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"contains","qualname":"<PieceLocations>::contains","value":"pub fn contains(&Self, PieceType, Player) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the Board contains a particular piece / player.\n","sig":null,"attributes":[{"value":"/ Returns if the Board contains a particular piece / player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265376,"byte_end":265438,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":265443,"byte_end":265452,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267887,"byte_end":267905,"line_start":167,"line_end":167,"column_start":12,"column_end":30},"name":"PieceLocationsIter","qualname":"::board::piece_locations::PieceLocationsIter","value":"PieceLocationsIter {  }","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"board_state","qualname":"::board::board_state","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":3202},{"krate":0,"index":3223},{"krate":0,"index":1243},{"krate":0,"index":1261}],"decl_id":null,"docs":" Contains the `BoardState` structure for the `Board`. Helps to preserve the previous state\n of the board without needing to re-compute information.","sig":null,"attributes":[{"value":"/ Contains the `BoardState` structure for the `Board`. Helps to preserve the previous state","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269228,"byte_end":269321,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ of the board without needing to re-compute information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269322,"byte_end":269381,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269382,"byte_end":269385,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ As the [`BoardState`] is automatically created for each position of the [`Board`], there is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269386,"byte_end":269481,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ little need for interacting directly with this module.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269482,"byte_end":269540,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269541,"byte_end":269544,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [this blog post](https://sfleischman105.github.io/2017/10/26/creating-a-chess-engine.html) for","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269545,"byte_end":269647,"line_start":7,"line_end":7,"column_start":1,"column_end":103}},{"value":"/ more information about the design of the [`BoardState`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269648,"byte_end":269708,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269709,"byte_end":269712,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BoardState`]: struct.BoardState.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269713,"byte_end":269755,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":269756,"byte_end":269791,"line_start":11,"line_end":11,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3202},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270600,"byte_end":270610,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"BoardState","qualname":"::board::board_state::BoardState","value":"BoardState { castling, rule_50, ply, ep_square, psq, zobrist, pawn_key, material_key, nonpawn_material, captured_piece, checkers_bb, blockers_king, pinners_king, check_sqs, prev_move, prev }","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3222}],"decl_id":null,"docs":" Holds useful information concerning the current state of the [`Board`].","sig":null,"attributes":[{"value":"/ Holds useful information concerning the current state of the [`Board`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270053,"byte_end":270128,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270129,"byte_end":270132,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This is information that is computed upon making a move, and requires expensive computation to do so as well.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270133,"byte_end":270246,"line_start":28,"line_end":28,"column_start":1,"column_end":114}},{"value":"/ It is stored in the Heap by [`Board`] as an `Arc<BoardState>`, as cloning the board can lead to multiple","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270247,"byte_end":270355,"line_start":29,"line_end":29,"column_start":1,"column_end":109}},{"value":"/ references to the same `BoardState`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270356,"byte_end":270396,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270397,"byte_end":270400,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Allows for easy undo-ing of moves as these keep track of their previous board state, forming a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270401,"byte_end":270499,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"/ Tree-like persistent Stack.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270500,"byte_end":270531,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270532,"byte_end":270535,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270536,"byte_end":270571,"line_start":35,"line_end":35,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270766,"byte_end":270774,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"name":"castling","qualname":"::board::board_state::BoardState::castling","value":"board::castle_rights::Castling","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The castling rights for the current board.\n","sig":null,"attributes":[{"value":"/ The castling rights for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270711,"byte_end":270757,"line_start":39,"line_end":39,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270889,"byte_end":270896,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"rule_50","qualname":"::board::board_state::BoardState::rule_50","value":"i16","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Rule 50 for the current board. Tracks the moves since a capture, pawn move, or castle.\n","sig":null,"attributes":[{"value":"/ Rule 50 for the current board. Tracks the moves since a capture, pawn move, or castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270790,"byte_end":270880,"line_start":41,"line_end":41,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271058,"byte_end":271061,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"ply","qualname":"::board::board_state::BoardState::ply","value":"u16","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Returns how many plies deep the current Board is. In simpler terms, how many moves have been played since\n the `Board` was created.\n","sig":null,"attributes":[{"value":"/ Returns how many plies deep the current Board is. In simpler terms, how many moves have been played since","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":270907,"byte_end":271016,"line_start":43,"line_end":43,"column_start":5,"column_end":114}},{"value":"/ the `Board` was created.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271021,"byte_end":271049,"line_start":44,"line_end":44,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271307,"byte_end":271316,"line_start":49,"line_end":49,"column_start":9,"column_end":18},"name":"ep_square","qualname":"::board::board_state::BoardState::ep_square","value":"core::sq::SQ","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" If the last move was a double pawn push, this will be equal to the square behind.\n the push. So, `ep_square = abs(sq_to - sq_from) / 2`. If the last move was not\n a double pawn push, then `ep_square = NO_SQ`.\n","sig":null,"attributes":[{"value":"/ If the last move was a double pawn push, this will be equal to the square behind.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271072,"byte_end":271157,"line_start":46,"line_end":46,"column_start":5,"column_end":90}},{"value":"/ the push. So, `ep_square = abs(sq_to - sq_from) / 2`. If the last move was not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271162,"byte_end":271244,"line_start":47,"line_end":47,"column_start":5,"column_end":87}},{"value":"/ a double pawn push, then `ep_square = NO_SQ`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271249,"byte_end":271298,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271374,"byte_end":271377,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"psq","qualname":"::board::board_state::BoardState::psq","value":"core::score::Score","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The positional score of the board.\n","sig":null,"attributes":[{"value":"/ The positional score of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271327,"byte_end":271365,"line_start":51,"line_end":51,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271486,"byte_end":271493,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"zobrist","qualname":"::board::board_state::BoardState::zobrist","value":"u64","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The Zobrist key of the board.\n","sig":null,"attributes":[{"value":"/ The Zobrist key of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271444,"byte_end":271477,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271564,"byte_end":271572,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"pawn_key","qualname":"::board::board_state::BoardState::pawn_key","value":"u64","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The Hash key of the current pawn configuration.\n","sig":null,"attributes":[{"value":"/ The Hash key of the current pawn configuration.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271504,"byte_end":271555,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271647,"byte_end":271659,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"name":"material_key","qualname":"::board::board_state::BoardState::material_key","value":"u64","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The Hash key of the current material configuration.\n","sig":null,"attributes":[{"value":"/ The Hash key of the current material configuration.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271583,"byte_end":271638,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271726,"byte_end":271742,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"nonpawn_material","qualname":"::board::board_state::BoardState::nonpawn_material","value":"[i32; _]","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The value of each player's non-pawn pieces.\n","sig":null,"attributes":[{"value":"/ The value of each player's non-pawn pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271670,"byte_end":271717,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271814,"byte_end":271828,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"captured_piece","qualname":"::board::board_state::BoardState::captured_piece","value":"core::PieceType","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The last captured Piece, if any.\n","sig":null,"attributes":[{"value":"/ The last captured Piece, if any.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271769,"byte_end":271805,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271906,"byte_end":271917,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"name":"checkers_bb","qualname":"::board::board_state::BoardState::checkers_bb","value":"core::bitboard::BitBoard","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" A `BitBoard` of the current pieces giving check.\n","sig":null,"attributes":[{"value":"/ A `BitBoard` of the current pieces giving check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271845,"byte_end":271897,"line_start":66,"line_end":66,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272206,"byte_end":272219,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"blockers_king","qualname":"::board::board_state::BoardState::blockers_king","value":"[core::bitboard::BitBoard; _]","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Per each player, `BitBoard` of pieces blocking an attack on a that player's king.\n This field can contain opponents pieces. E.g. a Black Pawn can block an attack of a white king\n if there is a queen (or some other sliding piece) on the same line.\n","sig":null,"attributes":[{"value":"/ Per each player, `BitBoard` of pieces blocking an attack on a that player's king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":271933,"byte_end":272018,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/ This field can contain opponents pieces. E.g. a Black Pawn can block an attack of a white king","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272023,"byte_end":272121,"line_start":69,"line_end":69,"column_start":5,"column_end":103}},{"value":"/ if there is a queen (or some other sliding piece) on the same line.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272126,"byte_end":272197,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272415,"byte_end":272427,"line_start":74,"line_end":74,"column_start":9,"column_end":21},"name":"pinners_king","qualname":"::board::board_state::BoardState::pinners_king","value":"[core::bitboard::BitBoard; _]","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Per each player, `BitBoard` of pieces currently pinning the opponent's king.\n","sig":null,"attributes":[{"value":"/ Per each player, `BitBoard` of pieces currently pinning the opponent's king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272249,"byte_end":272329,"line_start":72,"line_end":72,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272605,"byte_end":272614,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"name":"check_sqs","qualname":"::board::board_state::BoardState::check_sqs","value":"[core::bitboard::BitBoard; _]","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Array of BitBoards where for Each Piece, gives a spot the piece can move to where\n the opposing player's king would be in check.\n","sig":null,"attributes":[{"value":"/ Array of BitBoards where for Each Piece, gives a spot the piece can move to where","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272457,"byte_end":272542,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ the opposing player's king would be in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272547,"byte_end":272596,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272774,"byte_end":272783,"line_start":80,"line_end":80,"column_start":9,"column_end":18},"name":"prev_move","qualname":"::board::board_state::BoardState::prev_move","value":"core::piece_move::BitMove","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" The previous move, if any, that was played. Returns `BitMove::NULL` if there was no\n previous move played.\n","sig":null,"attributes":[{"value":"/ The previous move, if any, that was played. Returns `BitMove::NULL` if there was no","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272648,"byte_end":272735,"line_start":78,"line_end":78,"column_start":5,"column_end":92}},{"value":"/ previous move played.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272740,"byte_end":272765,"line_start":79,"line_end":79,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272859,"byte_end":272863,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"name":"prev","qualname":"::board::board_state::BoardState::prev","value":"std::option::Option<tools::pleco_arc::Arc<board::board_state::BoardState>>","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" Previous State of the board (from one move ago).\n","sig":null,"attributes":[{"value":"/ Previous State of the board (from one move ago).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272798,"byte_end":272850,"line_start":81,"line_end":81,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272969,"byte_end":272974,"line_start":87,"line_end":87,"column_start":18,"column_end":23},"name":"blank","qualname":"<BoardState>::blank","value":"pub const fn blank() -> BoardState","parent":null,"children":[],"decl_id":null,"docs":" Constructs a blank `BoardState`.\n","sig":null,"attributes":[{"value":"/ Constructs a blank `BoardState`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272915,"byte_end":272951,"line_start":86,"line_end":86,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":273850,"byte_end":273863,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"partial_clone","qualname":"<BoardState>::partial_clone","value":"pub fn partial_clone(&Self) -> BoardState","parent":null,"children":[],"decl_id":null,"docs":" Constructs a partial clone of a `BoardState`.","sig":null,"attributes":[{"value":"/ Constructs a partial clone of a `BoardState`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":273617,"byte_end":273666,"line_start":108,"line_end":108,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":273671,"byte_end":273674,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Castling, rule_50, ply, and ep_square are copied. The copied fields need to be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":273679,"byte_end":273761,"line_start":110,"line_end":110,"column_start":5,"column_end":87}},{"value":"/ modified accordingly, and the remaining fields need to be generated.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":273766,"byte_end":273838,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278426,"byte_end":278434,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"get_prev","qualname":"<BoardState>::get_prev","value":"pub fn get_prev(&Self) -> Option<Arc<BoardState>>","parent":null,"children":[],"decl_id":null,"docs":" Return the previous BoardState from one move ago.","sig":null,"attributes":[{"value":"/ Return the previous BoardState from one move ago.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278283,"byte_end":278336,"line_start":232,"line_end":232,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278341,"byte_end":278344,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If there was no previous state, returns `None`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278349,"byte_end":278400,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278405,"byte_end":278414,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278662,"byte_end":278671,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"backtrace","qualname":"<BoardState>::backtrace","value":"pub fn backtrace(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all previous `BoardStates` and prints debug information for each.","sig":null,"attributes":[{"value":"/ Iterates through all previous `BoardStates` and prints debug information for each.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278518,"byte_end":278604,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278609,"byte_end":278612,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Used primarily for debugging.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278617,"byte_end":278650,"line_start":242,"line_end":242,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278869,"byte_end":278879,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"print_info","qualname":"<BoardState>::print_info","value":"pub fn print_info(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Prints information about the current `BoardState`.\n","sig":null,"attributes":[{"value":"/ Prints information about the current `BoardState`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":278803,"byte_end":278857,"line_start":250,"line_end":250,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fen","qualname":"::board::fen","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3233},{"krate":0,"index":1303}],"decl_id":null,"docs":" Contains various FEN (Forsyth–Edwards Notation) functions and constants.","sig":null,"attributes":[{"value":"/ Contains various FEN (Forsyth–Edwards Notation) functions and constants.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":279913,"byte_end":279991,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":279992,"byte_end":279995,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A FEN string is a way of describing the particular state of a chess game.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":279996,"byte_end":280073,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280074,"byte_end":280077,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ For example, the start position fen is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280078,"byte_end":280120,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/ `rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280121,"byte_end":280184,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280185,"byte_end":280188,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280189,"byte_end":280285,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ for more information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280286,"byte_end":280311,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280482,"byte_end":280497,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"OPENING_POS_FEN","qualname":"::board::fen::OPENING_POS_FEN","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The fen string for the start position.\n","sig":null,"attributes":[{"value":"/ The fen string for the start position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280429,"byte_end":280471,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Static","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280593,"byte_end":280616,"line_start":20,"line_end":20,"column_start":12,"column_end":35},"name":"STANDARD_FENS_START_POS","qualname":"::board::fen::STANDARD_FENS_START_POS","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":280684,"byte_end":280708,"line_start":23,"line_end":23,"column_start":12,"column_end":36},"name":"STANDARD_FENS_MIDDLE_POS","qualname":"::board::fen::STANDARD_FENS_MIDDLE_POS","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":282413,"byte_end":282438,"line_start":54,"line_end":54,"column_start":12,"column_end":37},"name":"STANDARD_FENS_5_PIECE_POS","qualname":"::board::fen::STANDARD_FENS_5_PIECE_POS","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":282663,"byte_end":282688,"line_start":61,"line_end":61,"column_start":12,"column_end":37},"name":"STANDARD_FENS_6_PIECE_POS","qualname":"::board::fen::STANDARD_FENS_6_PIECE_POS","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":282919,"byte_end":282943,"line_start":68,"line_end":68,"column_start":12,"column_end":36},"name":"STANDARD_FEN_7_PIECE_POS","qualname":"::board::fen::STANDARD_FEN_7_PIECE_POS","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":283050,"byte_end":283077,"line_start":73,"line_end":73,"column_start":12,"column_end":39},"name":"STANDARD_FEN_MATE_STALEMATE","qualname":"::board::fen::STANDARD_FEN_MATE_STALEMATE","value":"[&'static str; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":283371,"byte_end":283379,"line_start":83,"line_end":83,"column_start":20,"column_end":28},"name":"ALL_FENS","qualname":"::board::fen::ALL_FENS","value":"ALL_FENS {  }","parent":null,"children":[{"krate":0,"index":3226}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526721,"byte_end":11526759,"line_start":155,"line_end":155,"column_start":9,"column_end":47}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526768,"byte_end":11526798,"line_start":156,"line_end":156,"column_start":9,"column_end":39}},{"value":"allow(dead_code)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526807,"byte_end":11526826,"line_start":157,"line_end":157,"column_start":9,"column_end":28}}]},{"kind":"Static","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":283371,"byte_end":283379,"line_start":83,"line_end":83,"column_start":20,"column_end":28},"name":"ALL_FENS","qualname":"::board::fen::ALL_FENS","value":"ALL_FENS","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284344,"byte_end":284356,"line_start":105,"line_end":105,"column_start":8,"column_end":20},"name":"is_valid_fen","qualname":"::board::fen::is_valid_fen","value":"pub fn is_valid_fen(Board) -> Result<Board, FenBuildError>","parent":null,"children":[],"decl_id":null,"docs":" Returns if a [`Board`] generated from a fen string is a legal position.","sig":null,"attributes":[{"value":"/ Returns if a [`Board`] generated from a fen string is a legal position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284003,"byte_end":284078,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284079,"byte_end":284082,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This is called automatically by [`Board::new_from_fen`] after a [`Board`] is created, so","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284083,"byte_end":284175,"line_start":100,"line_end":100,"column_start":1,"column_end":93}},{"value":"/ this method doesn't have great individual use.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284176,"byte_end":284226,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284227,"byte_end":284230,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284231,"byte_end":284266,"line_start":103,"line_end":103,"column_start":1,"column_end":36}},{"value":"/ [`Board::new_from_fen`]: ../struct.Board.html#method.new_from_fen","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/fen.rs","byte_start":284267,"byte_end":284336,"line_start":104,"line_end":104,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"perft","qualname":"::board::perft","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"decl_id":null,"docs":" perft, or Performance Test, Move Path Enumeration, tests the correctness of move-generation.","sig":null,"attributes":[{"value":"/ perft, or Performance Test, Move Path Enumeration, tests the correctness of move-generation.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288122,"byte_end":288218,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288219,"byte_end":288222,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Use these functions on a [`Board`] to test that the correct amount of leaf nodes are created.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288223,"byte_end":288320,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288321,"byte_end":288324,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Board`]: ../struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288325,"byte_end":288360,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288464,"byte_end":288474,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"PerftNodes","qualname":"::board::perft::PerftNodes","value":"PerftNodes { nodes, captures, en_passant, castles, promotions, checks, checkmates }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" Holds all information about the number of nodes counted.\n","sig":null,"attributes":[{"value":"/ Holds all information about the number of nodes counted.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288392,"byte_end":288452,"line_start":9,"line_end":9,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288524,"byte_end":288529,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"nodes","qualname":"::board::perft::PerftNodes::nodes","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" Total number of nodes counted.\n","sig":null,"attributes":[{"value":"/ Total number of nodes counted.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288481,"byte_end":288515,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288607,"byte_end":288615,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"captures","qualname":"::board::perft::PerftNodes::captures","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" Number of capturing moves, including en-passant moves.\n","sig":null,"attributes":[{"value":"/ Number of capturing moves, including en-passant moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288540,"byte_end":288598,"line_start":13,"line_end":13,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288666,"byte_end":288676,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"en_passant","qualname":"::board::perft::PerftNodes::en_passant","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" Number of En-Passant moves.\n","sig":null,"attributes":[{"value":"/ Number of En-Passant moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288626,"byte_end":288657,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288718,"byte_end":288725,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"castles","qualname":"::board::perft::PerftNodes::castles","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" Number of Castles.\n","sig":null,"attributes":[{"value":"/ Number of Castles.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288687,"byte_end":288709,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288773,"byte_end":288783,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"promotions","qualname":"::board::perft::PerftNodes::promotions","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The number of promotions\n","sig":null,"attributes":[{"value":"/ The number of promotions","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288736,"byte_end":288764,"line_start":19,"line_end":19,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288836,"byte_end":288842,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"checks","qualname":"::board::perft::PerftNodes::checks","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The number of checking moves.\n","sig":null,"attributes":[{"value":"/ The number of checking moves.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288794,"byte_end":288827,"line_start":21,"line_end":21,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288911,"byte_end":288921,"line_start":24,"line_end":24,"column_start":9,"column_end":19},"name":"checkmates","qualname":"::board::perft::PerftNodes::checkmates","value":"u64","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The number of moves resulting in a checkmate.\n","sig":null,"attributes":[{"value":"/ The number of moves resulting in a checkmate.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288853,"byte_end":288902,"line_start":23,"line_end":23,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":289392,"byte_end":289397,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"check","qualname":"<PerftNodes>::check","value":"pub fn check(&Self, u64, u64, u64, u64, u64, u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Checks for the correct number of nodes in each category. If the results don't\n match, panics with an error-message containing the failed checks.\n","sig":null,"attributes":[{"value":"/ Checks for the correct number of nodes in each category. If the results don't","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":289225,"byte_end":289306,"line_start":42,"line_end":42,"column_start":5,"column_end":86}},{"value":"/ match, panics with an error-message containing the failed checks.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":289311,"byte_end":289380,"line_start":43,"line_end":43,"column_start":5,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":290985,"byte_end":290990,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"perft","qualname":"::board::perft::perft","value":"pub fn perft(&Board, u16) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of leaf nodes from generating moves to a certain depth.\n","sig":null,"attributes":[{"value":"/ Returns the number of leaf nodes from generating moves to a certain depth.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":290899,"byte_end":290977,"line_start":73,"line_end":73,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":291250,"byte_end":291259,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"perft_all","qualname":"::board::perft::perft_all","value":"pub fn perft_all(&Board, u16) -> PerftNodes","parent":null,"children":[],"decl_id":null,"docs":" Returns the count of all move types for the leaf nodes up to a certain depth.\n","sig":null,"attributes":[{"value":"/ Returns the count of all move types for the leaf nodes up to a certain depth.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":291161,"byte_end":291242,"line_start":83,"line_end":83,"column_start":1,"column_end":82}}]},{"kind":"StructVariant","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131624,"byte_end":131641,"line_start":49,"line_end":49,"column_start":5,"column_end":22},"name":"NotEnoughSections","qualname":"::board::FenBuildError::NotEnoughSections","value":"FenBuildError::NotEnoughSections { sections }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131665,"byte_end":131685,"line_start":50,"line_end":50,"column_start":5,"column_end":25},"name":"IncorrectRankAmounts","qualname":"::board::FenBuildError::IncorrectRankAmounts","value":"FenBuildError::IncorrectRankAmounts { ranks }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131706,"byte_end":131722,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"UnrecognizedTurn","qualname":"::board::FenBuildError::UnrecognizedTurn","value":"FenBuildError::UnrecognizedTurn { turn }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131743,"byte_end":131761,"line_start":52,"line_end":52,"column_start":5,"column_end":23},"name":"EPSquareUnreadable","qualname":"::board::FenBuildError::EPSquareUnreadable","value":"FenBuildError::EPSquareUnreadable { ep }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131780,"byte_end":131795,"line_start":53,"line_end":53,"column_start":5,"column_end":20},"name":"EPSquareInvalid","qualname":"::board::FenBuildError::EPSquareInvalid","value":"FenBuildError::EPSquareInvalid { ep }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131814,"byte_end":131831,"line_start":54,"line_end":54,"column_start":5,"column_end":22},"name":"SquareSmallerRank","qualname":"::board::FenBuildError::SquareSmallerRank","value":"FenBuildError::SquareSmallerRank { rank, square }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131867,"byte_end":131883,"line_start":55,"line_end":55,"column_start":5,"column_end":21},"name":"SquareLargerRank","qualname":"::board::FenBuildError::SquareLargerRank","value":"FenBuildError::SquareLargerRank { rank, square }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131919,"byte_end":131936,"line_start":56,"line_end":56,"column_start":5,"column_end":22},"name":"UnrecognizedPiece","qualname":"::board::FenBuildError::UnrecognizedPiece","value":"FenBuildError::UnrecognizedPiece { piece }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131956,"byte_end":131971,"line_start":57,"line_end":57,"column_start":5,"column_end":20},"name":"UnreadableMoves","qualname":"::board::FenBuildError::UnreadableMoves","value":"FenBuildError::UnreadableMoves(num::ParseIntError)","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131997,"byte_end":132021,"line_start":58,"line_end":58,"column_start":5,"column_end":29},"name":"IllegalNumCheckingPieces","qualname":"::board::FenBuildError::IllegalNumCheckingPieces","value":"FenBuildError::IllegalNumCheckingPieces { num }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132036,"byte_end":132053,"line_start":59,"line_end":59,"column_start":5,"column_end":22},"name":"IllegalCheckState","qualname":"::board::FenBuildError::IllegalCheckState","value":"FenBuildError::IllegalCheckState { piece_1, piece_2 }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132100,"byte_end":132112,"line_start":60,"line_end":60,"column_start":5,"column_end":17},"name":"TooManyPawns","qualname":"::board::FenBuildError::TooManyPawns","value":"FenBuildError::TooManyPawns { player, num }","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132143,"byte_end":132156,"line_start":61,"line_end":61,"column_start":5,"column_end":18},"name":"PawnOnLastRow","qualname":"::board::FenBuildError::PawnOnLastRow","value":"FenBuildError::PawnOnLastRow","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131604,"byte_end":131617,"line_start":48,"line_end":48,"column_start":10,"column_end":23},"name":"FenBuildError","qualname":"::board::FenBuildError","value":"pub enum FenBuildError {\n    NotEnoughSections {\n        sections: usize,\n    },\n    IncorrectRankAmounts {\n        ranks: usize,\n    },\n    UnrecognizedTurn {\n        turn: String,\n    },\n    EPSquareUnreadable {\n        ep: String,\n    },\n    EPSquareInvalid {\n        ep: String,\n    },\n    SquareSmallerRank {\n        rank: usize,\n        square: String,\n    },\n    SquareLargerRank {\n        rank: usize,\n        square: String,\n    },\n    UnrecognizedPiece {\n        piece: char,\n    },\n    UnreadableMoves(num::ParseIntError),\n    IllegalNumCheckingPieces {\n        num: u8,\n    },\n    IllegalCheckState {\n        piece_1: PieceType,\n        piece_2: PieceType,\n    },\n    TooManyPawns {\n        player: Player,\n        num: u8,\n    },\n    PawnOnLastRow,\n}","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482}],"decl_id":null,"docs":" Represents possible Errors encountered while building a `Board` from a fen string.\n","sig":null,"attributes":[{"value":"/ Represents possible Errors encountered while building a `Board` from a fen string.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131508,"byte_end":131594,"line_start":47,"line_end":47,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135774,"byte_end":135779,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"Board","qualname":"::board::Board","value":"Board { magic_helper }","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" Represents a Chessboard through a `Board`.","sig":null,"attributes":[{"value":"/ Represents a Chessboard through a `Board`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134150,"byte_end":134196,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134197,"byte_end":134200,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Board contains everything that needs to be known about the current state of the Game. It is used","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134201,"byte_end":134301,"line_start":99,"line_end":99,"column_start":1,"column_end":101}},{"value":"/ by both Engines and Players / Bots alike.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134302,"byte_end":134347,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134348,"byte_end":134351,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Ideally, the Engine contains the original Representation of a board (owns the board), and utilizes","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134352,"byte_end":134454,"line_start":102,"line_end":102,"column_start":1,"column_end":103}},{"value":"/ `Board::shallow_clone()` to share this representaion with Players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134455,"byte_end":134525,"line_start":103,"line_end":103,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134526,"byte_end":134529,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134530,"byte_end":134544,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134545,"byte_end":134548,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134549,"byte_end":134556,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134557,"byte_end":134578,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134579,"byte_end":134582,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134583,"byte_end":134598,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/     let mut chessboard = Board::default();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134599,"byte_end":134645,"line_start":111,"line_end":111,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134646,"byte_end":134649,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     let moves = chessboard.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134650,"byte_end":134698,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"/     chessboard.apply_move(moves[0]);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134699,"byte_end":134739,"line_start":114,"line_end":114,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134740,"byte_end":134743,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     let b2 = chessboard.shallow_clone(); // boards allow for easy cloning","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134744,"byte_end":134821,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/     assert_eq!(chessboard.moves_played(), b2.moves_played());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134822,"byte_end":134887,"line_start":117,"line_end":117,"column_start":1,"column_end":66}},{"value":"/ }","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134888,"byte_end":134893,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134894,"byte_end":134901,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134902,"byte_end":134905,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # `BitBoard` Representation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134906,"byte_end":134937,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134938,"byte_end":134941,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ For the majority of the struct, the board utilizes [BitBoard]s, which is a u64 where each bit","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134942,"byte_end":135039,"line_start":123,"line_end":123,"column_start":1,"column_end":98}},{"value":"/ represents an occupied location, and each bit index represents a certain square (as in bit 0 is","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135040,"byte_end":135139,"line_start":124,"line_end":124,"column_start":1,"column_end":100}},{"value":"/ Square A1, bit 1 is B1, etc.). Indexes increase first horizontally by File, and then by Rank. See","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135140,"byte_end":135241,"line_start":125,"line_end":125,"column_start":1,"column_end":102}},{"value":"/ [BitBoards article ChessWiki](https://chessprogramming.wikispaces.com/Bitboards) for more information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135242,"byte_end":135348,"line_start":126,"line_end":126,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135349,"byte_end":135352,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The exact mapping from each square to bits is as follows:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135353,"byte_end":135414,"line_start":128,"line_end":128,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135415,"byte_end":135418,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```md,ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135419,"byte_end":135435,"line_start":130,"line_end":130,"column_start":1,"column_end":17}},{"value":"/ 8 | 56 57 58 59 60 61 62 63","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135436,"byte_end":135467,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ 7 | 48 49 50 51 52 53 54 55","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135468,"byte_end":135499,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/ 6 | 40 41 42 43 44 45 46 47","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135500,"byte_end":135531,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/ 5 | 32 33 34 35 36 37 38 39","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135532,"byte_end":135563,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/ 4 | 24 25 26 27 28 29 30 31","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135564,"byte_end":135595,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/ 3 | 16 17 18 19 20 21 22 23","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135596,"byte_end":135627,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/ 2 | 8  9  10 11 12 13 14 15","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135628,"byte_end":135659,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/ 1 | 0  1  2  3  4  5  6  7","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135660,"byte_end":135690,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/   -------------------------","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135691,"byte_end":135722,"line_start":139,"line_end":139,"column_start":1,"column_end":32}},{"value":"/      a  b  c  d  e  f  g  h","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135723,"byte_end":135754,"line_start":140,"line_end":140,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":135755,"byte_end":135762,"line_start":141,"line_end":141,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136469,"byte_end":136481,"line_start":158,"line_end":158,"column_start":9,"column_end":21},"name":"magic_helper","qualname":"::board::Board::magic_helper","value":"helper::Helper","parent":{"krate":0,"index":1491},"children":[],"decl_id":null,"docs":" Reference to the pre-computed lookup tables.\n","sig":null,"attributes":[{"value":"/ Reference to the pre-computed lookup tables.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136393,"byte_end":136441,"line_start":156,"line_end":156,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137563,"byte_end":137572,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"start_pos","qualname":"<Board>::start_pos","value":"pub fn start_pos() -> Board","parent":null,"children":[],"decl_id":null,"docs":" Constructs a board from the starting position","sig":null,"attributes":[{"value":"/ Constructs a board from the starting position","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137285,"byte_end":137334,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137339,"byte_end":137342,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137347,"byte_end":137361,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137366,"byte_end":137369,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137374,"byte_end":137381,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137386,"byte_end":137416,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137421,"byte_end":137424,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137429,"byte_end":137469,"line_start":203,"line_end":203,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.count_pieces_player(Player::White),16);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137474,"byte_end":137539,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137544,"byte_end":137551,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138875,"byte_end":138888,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"shallow_clone","qualname":"<Board>::shallow_clone","value":"pub fn shallow_clone(&Self) -> Board","parent":null,"children":[],"decl_id":null,"docs":" Constructs a shallow clone of the Board.","sig":null,"attributes":[{"value":"/ Constructs a shallow clone of the Board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137690,"byte_end":137734,"line_start":210,"line_end":210,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137739,"byte_end":137742,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Contains only the information necessary to apply future moves, more specifically","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137747,"byte_end":137831,"line_start":212,"line_end":212,"column_start":5,"column_end":89}},{"value":"/ does not clone the moves list, and sets depth to zero. Intended for an Engine or","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137836,"byte_end":137920,"line_start":213,"line_end":213,"column_start":5,"column_end":89}},{"value":"/ main thread to share the board to users wanting to search.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137925,"byte_end":137987,"line_start":214,"line_end":214,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137992,"byte_end":137995,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138000,"byte_end":138012,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138017,"byte_end":138020,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ After this method has called, [Board::undo_move()] cannot be called immediately after.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138025,"byte_end":138115,"line_start":218,"line_end":218,"column_start":5,"column_end":95}},{"value":"/ Undoing moves can only be done once a move has been played, and cannot be called more","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138120,"byte_end":138209,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"/ times than moves have been played since calling [Board::shallow_clone()].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138214,"byte_end":138291,"line_start":220,"line_end":220,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138296,"byte_end":138299,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138304,"byte_end":138318,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138323,"byte_end":138326,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138331,"byte_end":138338,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138343,"byte_end":138364,"line_start":225,"line_end":225,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138369,"byte_end":138372,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138377,"byte_end":138421,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ let moves = chessboard.generate_moves(); // generate all possible legal moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138426,"byte_end":138507,"line_start":228,"line_end":228,"column_start":5,"column_end":86}},{"value":"/ chessboard.apply_move(moves[0]); // apply first move","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138512,"byte_end":138568,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138573,"byte_end":138576,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(chessboard.moves_played(), 1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138581,"byte_end":138626,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138631,"byte_end":138634,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let board_clone = chessboard.shallow_clone();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138639,"byte_end":138688,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(chessboard.moves_played(), board_clone.moves_played());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138693,"byte_end":138763,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138768,"byte_end":138771,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert_ne!(chessboard.depth(),board_clone.depth()); // different depths","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138776,"byte_end":138851,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":138856,"byte_end":138863,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140435,"byte_end":140449,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"parallel_clone","qualname":"<Board>::parallel_clone","value":"pub fn parallel_clone(&Self) -> Board","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parallel clone of the Board.","sig":null,"attributes":[{"value":"/ Constructs a parallel clone of the Board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139298,"byte_end":139343,"line_start":252,"line_end":252,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139348,"byte_end":139351,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Similar to `Board::shallow_clone()`, but keeps the current search depth the same.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139356,"byte_end":139441,"line_start":254,"line_end":254,"column_start":5,"column_end":90}},{"value":"/ Should be used when implementing a searcher, and want to search a list of moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139446,"byte_end":139529,"line_start":255,"line_end":255,"column_start":5,"column_end":88}},{"value":"/ in parallel with different threads.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139534,"byte_end":139573,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139578,"byte_end":139581,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139586,"byte_end":139598,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139603,"byte_end":139606,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ After this method has called, `Board::undo_move()` cannot be called immediately after.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139611,"byte_end":139701,"line_start":260,"line_end":260,"column_start":5,"column_end":95}},{"value":"/ Undoing moves can only be done once a move has been played, and cannot be called more","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139706,"byte_end":139795,"line_start":261,"line_end":261,"column_start":5,"column_end":94}},{"value":"/ times than moves have been played since calling `Board::parallel_clone()`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139800,"byte_end":139878,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139883,"byte_end":139886,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139891,"byte_end":139905,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139910,"byte_end":139913,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139918,"byte_end":139925,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139930,"byte_end":139951,"line_start":267,"line_end":267,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139956,"byte_end":139959,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":139964,"byte_end":140008,"line_start":269,"line_end":269,"column_start":5,"column_end":49}},{"value":"/ let moves = chessboard.generate_moves(); // generate all possible legal moves","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140013,"byte_end":140094,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/ chessboard.apply_move(moves[0]);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140099,"byte_end":140135,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(chessboard.moves_played(), 1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140140,"byte_end":140185,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140190,"byte_end":140193,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let board_clone = chessboard.parallel_clone();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140198,"byte_end":140248,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(chessboard.moves_played(), board_clone.moves_played());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140253,"byte_end":140323,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140328,"byte_end":140331,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(chessboard.depth(),board_clone.depth()); // different depths","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140336,"byte_end":140411,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140416,"byte_end":140423,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141648,"byte_end":141654,"line_start":318,"line_end":318,"column_start":12,"column_end":18},"name":"random","qualname":"<Board>::random","value":"pub fn random() -> RandBoard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RandBoard` (Random Board Generator) for generation of `Board`s with random\n positions. See the `RandBoard` structure for more information.","sig":null,"attributes":[{"value":"/ Creates a `RandBoard` (Random Board Generator) for generation of `Board`s with random","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140867,"byte_end":140956,"line_start":293,"line_end":293,"column_start":5,"column_end":94}},{"value":"/ positions. See the `RandBoard` structure for more information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":140961,"byte_end":141027,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141032,"byte_end":141035,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141040,"byte_end":141054,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141059,"byte_end":141062,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Create one `Board` with at least 5 moves played that is created in a pseudo-random","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141067,"byte_end":141153,"line_start":298,"line_end":298,"column_start":5,"column_end":91}},{"value":"/ fashion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141158,"byte_end":141170,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141175,"byte_end":141178,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141183,"byte_end":141190,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141195,"byte_end":141216,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/ let rand_boards: Board = Board::random()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141221,"byte_end":141265,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/     .pseudo_random(6622225)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141270,"byte_end":141301,"line_start":304,"line_end":304,"column_start":5,"column_end":36}},{"value":"/     .min_moves(5)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141306,"byte_end":141327,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/     .one();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141332,"byte_end":141347,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141352,"byte_end":141359,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141364,"byte_end":141367,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Create a `Vec` of 3 random `Board`s that are guaranteed to not be in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141372,"byte_end":141451,"line_start":309,"line_end":309,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141456,"byte_end":141459,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141464,"byte_end":141471,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use pleco::board::{Board,RandBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141476,"byte_end":141516,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141521,"byte_end":141524,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ let rand_boards: Vec<Board> = Board::random()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141529,"byte_end":141578,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/     .no_check()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141583,"byte_end":141602,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/     .many(3);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141607,"byte_end":141624,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141629,"byte_end":141636,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142799,"byte_end":142807,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"from_fen","qualname":"<Board>::from_fen","value":"pub fn from_fen(&str) -> Result<Board, FenBuildError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a board from a FEN String.","sig":null,"attributes":[{"value":"/ Constructs a board from a FEN String.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141712,"byte_end":141753,"line_start":322,"line_end":322,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141758,"byte_end":141761,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ FEN stands for Forsyth-Edwards Notation, and is a way of representing a board through a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141766,"byte_end":141857,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ string of characters. More information can be found on the [ChessWiki](https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":141862,"byte_end":142003,"line_start":325,"line_end":325,"column_start":5,"column_end":146}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142008,"byte_end":142011,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142016,"byte_end":142030,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142035,"byte_end":142038,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142043,"byte_end":142050,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142055,"byte_end":142076,"line_start":330,"line_end":330,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142081,"byte_end":142084,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let board = Board::from_fen(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\").unwrap();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142089,"byte_end":142190,"line_start":332,"line_end":332,"column_start":5,"column_end":106}},{"value":"/ assert_eq!(board.count_all_pieces(),32);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142195,"byte_end":142239,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142244,"byte_end":142247,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142252,"byte_end":142255,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let obviously_not_a_fen = \"This shouldn't parse!\";","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142260,"byte_end":142314,"line_start":336,"line_end":336,"column_start":5,"column_end":59}},{"value":"/ let bad_board = Board::from_fen(obviously_not_a_fen);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142319,"byte_end":142376,"line_start":337,"line_end":337,"column_start":5,"column_end":62}},{"value":"/ assert!(bad_board.is_err());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142381,"byte_end":142413,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142418,"byte_end":142425,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142430,"byte_end":142433,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142438,"byte_end":142450,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142455,"byte_end":142458,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The FEN string must be valid, or else the method will return an Error.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142463,"byte_end":142537,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142542,"byte_end":142545,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ There is a possibility of the FEN string representing an unvalid position, with no panics resulting.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142550,"byte_end":142654,"line_start":345,"line_end":345,"column_start":5,"column_end":109}},{"value":"/ The Constructed Board may have some Undefined Behavior as a result. It is up to the user to give a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142659,"byte_end":142761,"line_start":346,"line_end":346,"column_start":5,"column_end":107}},{"value":"/ valid FEN string.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":142766,"byte_end":142787,"line_start":347,"line_end":347,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147551,"byte_end":147554,"line_start":482,"line_end":482,"column_start":12,"column_end":15},"name":"fen","qualname":"<Board>::fen","value":"pub fn fen(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Creates a FEN String of the Given Board.","sig":null,"attributes":[{"value":"/ Creates a FEN String of the Given Board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147020,"byte_end":147064,"line_start":469,"line_end":469,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147069,"byte_end":147072,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ FEN stands for Forsyth-Edwards Notation, and is a way of representing a board through a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147077,"byte_end":147168,"line_start":471,"line_end":471,"column_start":5,"column_end":96}},{"value":"/ string of characters. More information can be found on the [ChessWiki](https://chessprogramming.wikispaces.com/Forsyth-Edwards+Notation).","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147173,"byte_end":147314,"line_start":472,"line_end":472,"column_start":5,"column_end":146}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147319,"byte_end":147322,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147327,"byte_end":147341,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147346,"byte_end":147349,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147354,"byte_end":147361,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147366,"byte_end":147387,"line_start":477,"line_end":477,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147392,"byte_end":147395,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147400,"byte_end":147435,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(board.fen(),\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147440,"byte_end":147527,"line_start":480,"line_end":480,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":147532,"byte_end":147539,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149699,"byte_end":149709,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"apply_move","qualname":"<Board>::apply_move","value":"pub fn apply_move(&mut Self, BitMove)","parent":null,"children":[],"decl_id":null,"docs":" Applies a move to the Board.","sig":null,"attributes":[{"value":"/ Applies a move to the Board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149239,"byte_end":149271,"line_start":541,"line_end":541,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149276,"byte_end":149279,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149284,"byte_end":149296,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149301,"byte_end":149304,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The passed in `BitMove` must be a legal move for the current position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149309,"byte_end":149383,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149388,"byte_end":149391,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149396,"byte_end":149408,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149413,"byte_end":149416,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ The supplied BitMove must be both a valid move for that position, as well as a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149421,"byte_end":149503,"line_start":549,"line_end":549,"column_start":5,"column_end":87}},{"value":"/ valid `BitMove`, Otherwise, a panic will occur. Valid BitMoves can be generated with","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149508,"byte_end":149596,"line_start":550,"line_end":550,"column_start":5,"column_end":93}},{"value":"/ `Board::generate_moves()`, which guarantees that only Legal moves will be created.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149601,"byte_end":149687,"line_start":551,"line_end":551,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":151225,"byte_end":151243,"line_start":581,"line_end":581,"column_start":12,"column_end":30},"name":"apply_move_pft_chk","qualname":"<Board>::apply_move_pft_chk","value":"pub fn apply_move_pft_chk<PT, MT>(&mut Self, BitMove, bool, &PT, &MT) where\nPT: PreFetchable, MT: PreFetchable","parent":null,"children":[],"decl_id":null,"docs":" Applies a move to the Board. This method is only useful if before a move is applied to\n a board, the ability of the move to give check is applied. If it is not needed to know\n if the move gives check or not, consider using `Board::apply_move` instead.","sig":null,"attributes":[{"value":"/ Applies a move to the Board. This method is only useful if before a move is applied to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":149988,"byte_end":150078,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ a board, the ability of the move to give check is applied. If it is not needed to know","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150083,"byte_end":150173,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ if the move gives check or not, consider using `Board::apply_move` instead.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150178,"byte_end":150257,"line_start":561,"line_end":561,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150262,"byte_end":150265,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This method also takes in two generic parameters implementing `PreFetchable`, one of which","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150270,"byte_end":150364,"line_start":563,"line_end":563,"column_start":5,"column_end":99}},{"value":"/ will prefetch from the A table taking in a pawn key, the other of which pre-fetching","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150369,"byte_end":150457,"line_start":564,"line_end":564,"column_start":5,"column_end":93}},{"value":"/ from a table utilizing the material key.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150462,"byte_end":150506,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150511,"byte_end":150514,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150519,"byte_end":150531,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150536,"byte_end":150539,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The passed in `BitMove` must be a legal move for the current position, and the gives_check","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150544,"byte_end":150638,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ parameter must be correct for the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150643,"byte_end":150686,"line_start":570,"line_end":570,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150691,"byte_end":150694,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150699,"byte_end":150711,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150716,"byte_end":150719,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ The supplied BitMove must be both a valid move for that position, as well as a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150724,"byte_end":150806,"line_start":574,"line_end":574,"column_start":5,"column_end":87}},{"value":"/ valid `BitMove`, Otherwise, a panic will occur. Valid BitMoves can be generated with","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150811,"byte_end":150899,"line_start":575,"line_end":575,"column_start":5,"column_end":93}},{"value":"/ `Board::generate_moves()`, which guarantees that only Legal moves will be created.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150904,"byte_end":150990,"line_start":576,"line_end":576,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":150995,"byte_end":150998,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The second parameter, `gives_check`, must be true if the move gives check, or false","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":151003,"byte_end":151090,"line_start":578,"line_end":578,"column_start":5,"column_end":92}},{"value":"/ if the move doesn't give check. If an incorrect `gives_check` is supplied, undefined","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":151095,"byte_end":151183,"line_start":579,"line_end":579,"column_start":5,"column_end":93}},{"value":"/ behavior will follow.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":151188,"byte_end":151213,"line_start":580,"line_end":580,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159330,"byte_end":159344,"line_start":779,"line_end":779,"column_start":12,"column_end":26},"name":"apply_uci_move","qualname":"<Board>::apply_uci_move","value":"pub fn apply_uci_move(&mut Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies a UCI move to the board. If the move is a valid string representing a UCI move, then\n true will be returned & the move will be applied. Otherwise, false is returned and the board isn't\n changed.","sig":null,"attributes":[{"value":"/ Applies a UCI move to the board. If the move is a valid string representing a UCI move, then","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":158875,"byte_end":158971,"line_start":765,"line_end":765,"column_start":5,"column_end":101}},{"value":"/ true will be returned & the move will be applied. Otherwise, false is returned and the board isn't","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":158976,"byte_end":159078,"line_start":766,"line_end":766,"column_start":5,"column_end":107}},{"value":"/ changed.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159083,"byte_end":159095,"line_start":767,"line_end":767,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159100,"byte_end":159103,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159108,"byte_end":159122,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159127,"byte_end":159130,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159135,"byte_end":159142,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159147,"byte_end":159168,"line_start":772,"line_end":772,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159173,"byte_end":159176,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ let mut board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159181,"byte_end":159220,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/ let success = board.apply_uci_move(\"e2e4\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159225,"byte_end":159272,"line_start":775,"line_end":775,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159277,"byte_end":159280,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert!(success);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159285,"byte_end":159306,"line_start":777,"line_end":777,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159311,"byte_end":159318,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160607,"byte_end":160616,"line_start":814,"line_end":814,"column_start":12,"column_end":21},"name":"undo_move","qualname":"<Board>::undo_move","value":"pub fn undo_move(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Un-does the previously applied move, allowing the Board to return to it's most recently held state.","sig":null,"attributes":[{"value":"/ Un-does the previously applied move, allowing the Board to return to it's most recently held state.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159774,"byte_end":159877,"line_start":791,"line_end":791,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159882,"byte_end":159885,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159890,"byte_end":159902,"line_start":793,"line_end":793,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159907,"byte_end":159910,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Cannot be done if after any `Board::shallow_clone()` has been applied,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159915,"byte_end":159989,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ or if `Board::parallel_clone()` has been done and there is no previous move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":159994,"byte_end":160074,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160079,"byte_end":160082,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160087,"byte_end":160101,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160106,"byte_end":160109,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```rust,should_panic","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160114,"byte_end":160138,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160143,"byte_end":160164,"line_start":801,"line_end":801,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160169,"byte_end":160172,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160177,"byte_end":160221,"line_start":803,"line_end":803,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160226,"byte_end":160229,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let moves = chessboard.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160234,"byte_end":160278,"line_start":805,"line_end":805,"column_start":5,"column_end":49}},{"value":"/ chessboard.apply_move(moves[0]);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160283,"byte_end":160319,"line_start":806,"line_end":806,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160324,"byte_end":160327,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let mut board_clone = chessboard.shallow_clone();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160332,"byte_end":160385,"line_start":808,"line_end":808,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160390,"byte_end":160393,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ chessboard.undo_move(); // works, chessboard existed before the move was played","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160398,"byte_end":160481,"line_start":810,"line_end":810,"column_start":5,"column_end":88}},{"value":"/ board_clone.undo_move(); // error: board_clone was created after the move was applied","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160486,"byte_end":160575,"line_start":811,"line_end":811,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160580,"byte_end":160583,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":160588,"byte_end":160595,"line_start":813,"line_end":813,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163202,"byte_end":163217,"line_start":890,"line_end":890,"column_start":19,"column_end":34},"name":"apply_null_move","qualname":"<Board>::apply_null_move","value":"pub unsafe fn apply_null_move(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Apply a \"Null Move\" to the board, essentially swapping the current turn of\n the board without moving any pieces.","sig":null,"attributes":[{"value":"/ Apply a \"Null Move\" to the board, essentially swapping the current turn of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162327,"byte_end":162405,"line_start":863,"line_end":863,"column_start":5,"column_end":83}},{"value":"/ the board without moving any pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162410,"byte_end":162450,"line_start":864,"line_end":864,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162455,"byte_end":162458,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162463,"byte_end":162475,"line_start":866,"line_end":866,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162480,"byte_end":162483,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ This method should only be used for special evaluation purposes, as it does not give an","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162488,"byte_end":162579,"line_start":868,"line_end":868,"column_start":5,"column_end":96}},{"value":"/ accurate or legal state of the chess board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162584,"byte_end":162631,"line_start":869,"line_end":869,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162636,"byte_end":162639,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Unsafe as it allows for Null Moves to be applied in states of check, which is never a valid","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162644,"byte_end":162739,"line_start":871,"line_end":871,"column_start":5,"column_end":100}},{"value":"/ state of a chess game.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162744,"byte_end":162770,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162775,"byte_end":162778,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162783,"byte_end":162795,"line_start":874,"line_end":874,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162800,"byte_end":162803,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ Panics if the Board is currently in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162808,"byte_end":162854,"line_start":876,"line_end":876,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162859,"byte_end":162862,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162867,"byte_end":162881,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162886,"byte_end":162889,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162894,"byte_end":162905,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ use pleco::board::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162910,"byte_end":162934,"line_start":881,"line_end":881,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162939,"byte_end":162942,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162947,"byte_end":162991,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ let board_clone = chessboard.shallow_clone();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":162996,"byte_end":163045,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163050,"byte_end":163053,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ unsafe { chessboard.apply_null_move(); }","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163058,"byte_end":163102,"line_start":886,"line_end":886,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163107,"byte_end":163110,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ assert_ne!(chessboard.depth(), board_clone.depth());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163115,"byte_end":163171,"line_start":888,"line_end":888,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":163176,"byte_end":163183,"line_start":889,"line_end":889,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165174,"byte_end":165188,"line_start":951,"line_end":951,"column_start":19,"column_end":33},"name":"undo_null_move","qualname":"<Board>::undo_null_move","value":"pub unsafe fn undo_null_move(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Undo a \"Null Move\" to the Board, returning to the previous state.","sig":null,"attributes":[{"value":"/ Undo a \"Null Move\" to the Board, returning to the previous state.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164333,"byte_end":164402,"line_start":927,"line_end":927,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164407,"byte_end":164410,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164415,"byte_end":164427,"line_start":929,"line_end":929,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164432,"byte_end":164435,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ This method should only be used if it can be guaranteed that the last played move from","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164440,"byte_end":164530,"line_start":931,"line_end":931,"column_start":5,"column_end":95}},{"value":"/ the current state is a Null-Move, eg `Board::apply_null_move()`. Otherwise, a panic will occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164535,"byte_end":164634,"line_start":932,"line_end":932,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164639,"byte_end":164642,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164647,"byte_end":164661,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164666,"byte_end":164669,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164674,"byte_end":164685,"line_start":936,"line_end":936,"column_start":5,"column_end":16}},{"value":"/ use pleco::board::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164690,"byte_end":164714,"line_start":937,"line_end":937,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164719,"byte_end":164722,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164727,"byte_end":164771,"line_start":939,"line_end":939,"column_start":5,"column_end":49}},{"value":"/ let board_clone = chessboard.shallow_clone();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164776,"byte_end":164825,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164830,"byte_end":164833,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ unsafe { chessboard.apply_null_move(); }","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164838,"byte_end":164882,"line_start":942,"line_end":942,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164887,"byte_end":164890,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ assert_ne!(chessboard.ply(), board_clone.ply());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164895,"byte_end":164947,"line_start":944,"line_end":944,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164952,"byte_end":164955,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ unsafe { chessboard.undo_null_move(); }","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":164960,"byte_end":165003,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165008,"byte_end":165011,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(chessboard.moves_played(), board_clone.moves_played());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165016,"byte_end":165086,"line_start":948,"line_end":948,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(chessboard.fen(), board_clone.fen());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165091,"byte_end":165143,"line_start":949,"line_end":949,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165148,"byte_end":165155,"line_start":950,"line_end":950,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165845,"byte_end":165859,"line_start":972,"line_end":972,"column_start":12,"column_end":26},"name":"generate_moves","qualname":"<Board>::generate_moves","value":"pub fn generate_moves(&Self) -> MoveList","parent":null,"children":[],"decl_id":null,"docs":" Get a List of legal `BitMove`s for the player whose turn it is to move.","sig":null,"attributes":[{"value":"/ Get a List of legal `BitMove`s for the player whose turn it is to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165361,"byte_end":165436,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165441,"byte_end":165444,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ This method already takes into account if the Board is currently in check, and will return","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165449,"byte_end":165543,"line_start":959,"line_end":959,"column_start":5,"column_end":99}},{"value":"/ legal moves only.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165548,"byte_end":165569,"line_start":960,"line_end":960,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165574,"byte_end":165577,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165582,"byte_end":165596,"line_start":962,"line_end":962,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165601,"byte_end":165604,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165609,"byte_end":165616,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165621,"byte_end":165642,"line_start":965,"line_end":965,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165647,"byte_end":165650,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165655,"byte_end":165695,"line_start":967,"line_end":967,"column_start":5,"column_end":45}},{"value":"/ let moves = chessboard.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165700,"byte_end":165744,"line_start":968,"line_end":968,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165749,"byte_end":165752,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ println!(\"There are {} possible legal moves.\", moves.len());","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165757,"byte_end":165821,"line_start":970,"line_end":970,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165826,"byte_end":165833,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166273,"byte_end":166295,"line_start":981,"line_end":981,"column_start":12,"column_end":34},"name":"generate_scoring_moves","qualname":"<Board>::generate_scoring_moves","value":"pub fn generate_scoring_moves(&Self) -> ScoringMoveList","parent":null,"children":[],"decl_id":null,"docs":" Get a List of legal `BitMove`s (alongside a score) for the player whose turn it is to move.","sig":null,"attributes":[{"value":"/ Get a List of legal `BitMove`s (alongside a score) for the player whose turn it is to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":165945,"byte_end":166040,"line_start":976,"line_end":976,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166045,"byte_end":166048,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ This method already takes into account if the Board is currently in check, and will return","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166053,"byte_end":166147,"line_start":978,"line_end":978,"column_start":5,"column_end":99}},{"value":"/ legal moves only. The `ScoringMoveList` that is returned will have a value of zero for each","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166152,"byte_end":166247,"line_start":979,"line_end":979,"column_start":5,"column_end":100}},{"value":"/ move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166252,"byte_end":166261,"line_start":980,"line_end":980,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166745,"byte_end":166771,"line_start":989,"line_end":989,"column_start":12,"column_end":38},"name":"generate_pseudolegal_moves","qualname":"<Board>::generate_pseudolegal_moves","value":"pub fn generate_pseudolegal_moves(&Self) -> MoveList","parent":null,"children":[],"decl_id":null,"docs":" Get a List of all PseudoLegal `BitMove`s for the player whose turn it is to move.\n Works exactly the same as `Board::generate_moves()`, but doesn't guarantee that all\n the moves are legal for the current position. Moves need to be checked with a\n `Board::legal_move(move)` in order to be certain of a legal move.\n","sig":null,"attributes":[{"value":"/ Get a List of all PseudoLegal `BitMove`s for the player whose turn it is to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166396,"byte_end":166481,"line_start":985,"line_end":985,"column_start":5,"column_end":90}},{"value":"/ Works exactly the same as `Board::generate_moves()`, but doesn't guarantee that all","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166486,"byte_end":166573,"line_start":986,"line_end":986,"column_start":5,"column_end":92}},{"value":"/ the moves are legal for the current position. Moves need to be checked with a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166578,"byte_end":166659,"line_start":987,"line_end":987,"column_start":5,"column_end":86}},{"value":"/ `Board::legal_move(move)` in order to be certain of a legal move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166664,"byte_end":166733,"line_start":988,"line_end":988,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167676,"byte_end":167698,"line_start":1013,"line_end":1013,"column_start":12,"column_end":34},"name":"generate_moves_of_type","qualname":"<Board>::generate_moves_of_type","value":"pub fn generate_moves_of_type(&Self, GenTypes) -> MoveList","parent":null,"children":[],"decl_id":null,"docs":" Get a List of legal `BitMove`s for the player whose turn it is to move and of a certain type.","sig":null,"attributes":[{"value":"/ Get a List of legal `BitMove`s for the player whose turn it is to move and of a certain type.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166863,"byte_end":166960,"line_start":993,"line_end":993,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166965,"byte_end":166968,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ This method already takes into account if the Board is currently in check, and will return","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":166973,"byte_end":167067,"line_start":995,"line_end":995,"column_start":5,"column_end":99}},{"value":"/ legal moves only. If a non-ALL `GenTypes` is supplied, only a subset of the total moves will be given.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167072,"byte_end":167178,"line_start":996,"line_end":996,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167183,"byte_end":167186,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167191,"byte_end":167203,"line_start":998,"line_end":998,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167208,"byte_end":167211,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Panics if given `GenTypes::QuietChecks` while the current board is in check","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167216,"byte_end":167295,"line_start":1000,"line_end":1000,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167300,"byte_end":167303,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167308,"byte_end":167322,"line_start":1002,"line_end":1002,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167327,"byte_end":167330,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167335,"byte_end":167346,"line_start":1004,"line_end":1004,"column_start":5,"column_end":16}},{"value":"/ use pleco::board::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167351,"byte_end":167375,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ use pleco::core::GenTypes;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167380,"byte_end":167410,"line_start":1006,"line_end":1006,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167415,"byte_end":167418,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167423,"byte_end":167463,"line_start":1008,"line_end":1008,"column_start":5,"column_end":45}},{"value":"/ let capturing_moves = chessboard.generate_moves_of_type(GenTypes::Captures);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167468,"byte_end":167548,"line_start":1009,"line_end":1009,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167553,"byte_end":167556,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(capturing_moves.len(), 0); // no possible captures for the starting position","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167561,"byte_end":167652,"line_start":1011,"line_end":1011,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":167657,"byte_end":167664,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168934,"byte_end":168968,"line_start":1035,"line_end":1035,"column_start":12,"column_end":46},"name":"generate_pseudolegal_moves_of_type","qualname":"<Board>::generate_pseudolegal_moves_of_type","value":"pub fn generate_pseudolegal_moves_of_type(&Self, GenTypes) -> MoveList","parent":null,"children":[],"decl_id":null,"docs":" Get a List of all PseudoLegal `BitMove`s for the player whose turn it is to move.\n Works exactly the same as `Board::generate_moves()`, but doesn't guarantee that all\n the moves are legal for the current position. Moves need to be checked with a\n `Board::legal_move(move)` in order to be certain of a legal move.","sig":null,"attributes":[{"value":"/ Get a List of all PseudoLegal `BitMove`s for the player whose turn it is to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168287,"byte_end":168372,"line_start":1024,"line_end":1024,"column_start":5,"column_end":90}},{"value":"/ Works exactly the same as `Board::generate_moves()`, but doesn't guarantee that all","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168377,"byte_end":168464,"line_start":1025,"line_end":1025,"column_start":5,"column_end":92}},{"value":"/ the moves are legal for the current position. Moves need to be checked with a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168469,"byte_end":168550,"line_start":1026,"line_end":1026,"column_start":5,"column_end":86}},{"value":"/ `Board::legal_move(move)` in order to be certain of a legal move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168555,"byte_end":168624,"line_start":1027,"line_end":1027,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168629,"byte_end":168632,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ This method already takes into account if the Board is currently in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168637,"byte_end":168715,"line_start":1029,"line_end":1029,"column_start":5,"column_end":83}},{"value":"/ If a non-ALL GenType is supplied, only a subset of the total moves will be given.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168720,"byte_end":168805,"line_start":1030,"line_end":1030,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168810,"byte_end":168813,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168818,"byte_end":168830,"line_start":1032,"line_end":1032,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168835,"byte_end":168838,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Panics if given `GenTypes::QuietChecks` while the current board is in check","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":168843,"byte_end":168922,"line_start":1034,"line_end":1034,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":174392,"byte_end":174407,"line_start":1174,"line_end":1174,"column_start":12,"column_end":27},"name":"slider_blockers","qualname":"<Board>::slider_blockers","value":"pub fn slider_blockers(&Self, BitBoard, SQ, &mut BitBoard) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Outputs the Blockers of a given square.\n","sig":null,"attributes":[{"value":"/ Outputs the Blockers of a given square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":174337,"byte_end":174380,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175727,"byte_end":175731,"line_start":1212,"line_end":1212,"column_start":12,"column_end":16},"name":"turn","qualname":"<Board>::turn","value":"pub fn turn(&Self) -> Player","parent":null,"children":[],"decl_id":null,"docs":" Get the Player whose turn it is to move.","sig":null,"attributes":[{"value":"/ Get the Player whose turn it is to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175448,"byte_end":175492,"line_start":1201,"line_end":1201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175497,"byte_end":175500,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175505,"byte_end":175519,"line_start":1203,"line_end":1203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175524,"byte_end":175527,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175532,"byte_end":175539,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175544,"byte_end":175574,"line_start":1206,"line_end":1206,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175579,"byte_end":175582,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175587,"byte_end":175627,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.turn(), Player::White);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175632,"byte_end":175681,"line_start":1209,"line_end":1209,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175686,"byte_end":175693,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175698,"byte_end":175715,"line_start":1211,"line_end":1211,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175855,"byte_end":175862,"line_start":1218,"line_end":1218,"column_start":12,"column_end":19},"name":"zobrist","qualname":"<Board>::zobrist","value":"pub fn zobrist(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the Zobrist Hash of the board.\n","sig":null,"attributes":[{"value":"/ Return the Zobrist Hash of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175780,"byte_end":175821,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175826,"byte_end":175843,"line_start":1217,"line_end":1217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176075,"byte_end":176083,"line_start":1226,"line_end":1226,"column_start":12,"column_end":20},"name":"pawn_key","qualname":"<Board>::pawn_key","value":"pub fn pawn_key(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the pawn key of the board.","sig":null,"attributes":[{"value":"/ Return the pawn key of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175917,"byte_end":175954,"line_start":1222,"line_end":1222,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175959,"byte_end":175962,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ This is a semi-unique key for any configuration of pawns on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":175967,"byte_end":176041,"line_start":1224,"line_end":1224,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176046,"byte_end":176063,"line_start":1225,"line_end":1225,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176554,"byte_end":176566,"line_start":1245,"line_end":1245,"column_start":12,"column_end":24},"name":"moves_played","qualname":"<Board>::moves_played","value":"pub fn moves_played(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of moves played.","sig":null,"attributes":[{"value":"/ Get the total number of moves played.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176139,"byte_end":176180,"line_start":1230,"line_end":1230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176185,"byte_end":176188,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176193,"byte_end":176207,"line_start":1232,"line_end":1232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176212,"byte_end":176215,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176220,"byte_end":176227,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176232,"byte_end":176253,"line_start":1235,"line_end":1235,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176258,"byte_end":176261,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let mut chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176266,"byte_end":176310,"line_start":1237,"line_end":1237,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(chessboard.moves_played(), 0);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176315,"byte_end":176360,"line_start":1238,"line_end":1238,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176365,"byte_end":176368,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ let moves = chessboard.generate_moves();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176373,"byte_end":176417,"line_start":1240,"line_end":1240,"column_start":5,"column_end":49}},{"value":"/ chessboard.apply_move(moves[0]);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176422,"byte_end":176458,"line_start":1241,"line_end":1241,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(chessboard.moves_played(), 1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176463,"byte_end":176508,"line_start":1242,"line_end":1242,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176513,"byte_end":176520,"line_start":1243,"line_end":1243,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176525,"byte_end":176542,"line_start":1244,"line_end":1244,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176722,"byte_end":176727,"line_start":1251,"line_end":1251,"column_start":12,"column_end":17},"name":"depth","qualname":"<Board>::depth","value":"pub fn depth(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the current depth (half moves from a [Board::shallow_clone()].\n","sig":null,"attributes":[{"value":"/ Get the current depth (half moves from a [Board::shallow_clone()].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176618,"byte_end":176688,"line_start":1249,"line_end":1249,"column_start":5,"column_end":75}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176693,"byte_end":176710,"line_start":1250,"line_end":1250,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176879,"byte_end":176886,"line_start":1257,"line_end":1257,"column_start":12,"column_end":19},"name":"rule_50","qualname":"<Board>::rule_50","value":"pub fn rule_50(&Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of half-moves since a Pawn Push, castle, or capture.\n","sig":null,"attributes":[{"value":"/ Get the number of half-moves since a Pawn Push, castle, or capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176774,"byte_end":176845,"line_start":1255,"line_end":1255,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176850,"byte_end":176867,"line_start":1256,"line_end":1256,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177028,"byte_end":177052,"line_start":1263,"line_end":1263,"column_start":12,"column_end":36},"name":"piece_captured_last_turn","qualname":"<Board>::piece_captured_last_turn","value":"pub fn piece_captured_last_turn(&Self) -> PieceType","parent":null,"children":[],"decl_id":null,"docs":" Return the Piece, if any, that was last captured.\n","sig":null,"attributes":[{"value":"/ Return the Piece, if any, that was last captured.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176941,"byte_end":176994,"line_start":1261,"line_end":1261,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":176999,"byte_end":177016,"line_start":1262,"line_end":1262,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177423,"byte_end":177426,"line_start":1273,"line_end":1273,"column_start":12,"column_end":15},"name":"ply","qualname":"<Board>::ply","value":"pub fn ply(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the current ply of the board.","sig":null,"attributes":[{"value":"/ Get the current ply of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177120,"byte_end":177157,"line_start":1267,"line_end":1267,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177162,"byte_end":177165,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ A ply is determined as the number of moves that have been played on the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177170,"byte_end":177245,"line_start":1269,"line_end":1269,"column_start":5,"column_end":80}},{"value":"/ current `Board`. A simpler way to explain it would be counting the number","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177250,"byte_end":177327,"line_start":1270,"line_end":1270,"column_start":5,"column_end":82}},{"value":"/ of times `Board::undo_move()` can be legally applied.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177332,"byte_end":177389,"line_start":1271,"line_end":1271,"column_start":5,"column_end":62}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177394,"byte_end":177411,"line_start":1272,"line_end":1272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177658,"byte_end":177661,"line_start":1280,"line_end":1280,"column_start":12,"column_end":15},"name":"psq","qualname":"<Board>::psq","value":"pub fn psq(&Self) -> Score","parent":null,"children":[],"decl_id":null,"docs":" Returns the current positional Score of the board. Positive scores are in favor\n of the white player, while negative scores are in favor of the black player.\n","sig":null,"attributes":[{"value":"/ Returns the current positional Score of the board. Positive scores are in favor","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177478,"byte_end":177561,"line_start":1278,"line_end":1278,"column_start":5,"column_end":88}},{"value":"/ of the white player, while negative scores are in favor of the black player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177566,"byte_end":177646,"line_start":1279,"line_end":1279,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178269,"byte_end":178278,"line_start":1301,"line_end":1301,"column_start":12,"column_end":21},"name":"ep_square","qualname":"<Board>::ep_square","value":"pub fn ep_square(&Self) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Get the current square of en-passant. This is defined not as the pawn that could be\n captured from an en-passant move, but rather the square directly behind it.","sig":null,"attributes":[{"value":"/ Get the current square of en-passant. This is defined not as the pawn that could be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177714,"byte_end":177801,"line_start":1284,"line_end":1284,"column_start":5,"column_end":92}},{"value":"/ captured from an en-passant move, but rather the square directly behind it.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177806,"byte_end":177885,"line_start":1285,"line_end":1285,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177890,"byte_end":177893,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177898,"byte_end":177910,"line_start":1287,"line_end":1287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177915,"byte_end":177918,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ While it returns a `SQ`, this square could be `SQ::NONE`, meaning there is no actual","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":177923,"byte_end":178011,"line_start":1289,"line_end":1289,"column_start":5,"column_end":93}},{"value":"/ en-passant square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178016,"byte_end":178038,"line_start":1290,"line_end":1290,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178043,"byte_end":178046,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178051,"byte_end":178065,"line_start":1292,"line_end":1292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178070,"byte_end":178073,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178078,"byte_end":178085,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,SQ};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178090,"byte_end":178116,"line_start":1295,"line_end":1295,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178121,"byte_end":178124,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178129,"byte_end":178169,"line_start":1297,"line_end":1297,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.ep_square(), SQ::NONE);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178174,"byte_end":178223,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178228,"byte_end":178235,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178240,"byte_end":178257,"line_start":1300,"line_end":1300,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178618,"byte_end":178626,"line_start":1316,"line_end":1316,"column_start":12,"column_end":20},"name":"occupied","qualname":"<Board>::occupied","value":"pub fn occupied(&Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the BitBoard of all pieces.","sig":null,"attributes":[{"value":"/ Gets the BitBoard of all pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178334,"byte_end":178370,"line_start":1305,"line_end":1305,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178375,"byte_end":178378,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178383,"byte_end":178397,"line_start":1307,"line_end":1307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178402,"byte_end":178405,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178410,"byte_end":178417,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178422,"byte_end":178454,"line_start":1310,"line_end":1310,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178459,"byte_end":178462,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178467,"byte_end":178507,"line_start":1312,"line_end":1312,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.occupied().0, 0xFFFF00000000FFFF);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178512,"byte_end":178572,"line_start":1313,"line_end":1313,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178577,"byte_end":178584,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178589,"byte_end":178606,"line_start":1315,"line_end":1315,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179022,"byte_end":179027,"line_start":1333,"line_end":1333,"column_start":12,"column_end":17},"name":"empty","qualname":"<Board>::empty","value":"pub fn empty(&Self, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a if a `SQ` is empty on the current `Board`.","sig":null,"attributes":[{"value":"/ Returns a if a `SQ` is empty on the current `Board`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178702,"byte_end":178758,"line_start":1321,"line_end":1321,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178763,"byte_end":178766,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178771,"byte_end":178785,"line_start":1323,"line_end":1323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178790,"byte_end":178793,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178798,"byte_end":178805,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,SQ};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178810,"byte_end":178836,"line_start":1326,"line_end":1326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178841,"byte_end":178844,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178849,"byte_end":178889,"line_start":1328,"line_end":1328,"column_start":5,"column_end":45}},{"value":"/ assert!(chessboard.empty(SQ::F6));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178894,"byte_end":178932,"line_start":1329,"line_end":1329,"column_start":5,"column_end":43}},{"value":"/ assert!(!chessboard.empty(SQ::A2));","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178937,"byte_end":178976,"line_start":1330,"line_end":1330,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178981,"byte_end":178988,"line_start":1331,"line_end":1331,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":178993,"byte_end":179010,"line_start":1332,"line_end":1332,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179451,"byte_end":179470,"line_start":1346,"line_end":1346,"column_start":12,"column_end":31},"name":"get_occupied_player","qualname":"<Board>::get_occupied_player","value":"pub fn get_occupied_player(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Get the BitBoard of the squares occupied by the given player.","sig":null,"attributes":[{"value":"/ Get the BitBoard of the squares occupied by the given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179107,"byte_end":179172,"line_start":1335,"line_end":1335,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179177,"byte_end":179180,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179185,"byte_end":179199,"line_start":1337,"line_end":1337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179204,"byte_end":179207,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179212,"byte_end":179219,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179224,"byte_end":179263,"line_start":1340,"line_end":1340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179268,"byte_end":179271,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179276,"byte_end":179316,"line_start":1342,"line_end":1342,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.get_occupied_player(Player::White).0, 0x000000000000FFFF);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179321,"byte_end":179405,"line_start":1343,"line_end":1343,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179410,"byte_end":179417,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179422,"byte_end":179439,"line_start":1345,"line_end":1345,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179912,"byte_end":179926,"line_start":1361,"line_end":1361,"column_start":12,"column_end":26},"name":"occupied_white","qualname":"<Board>::occupied_white","value":"pub fn occupied_white(&Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a Bitboard consisting of only the squares occupied by the White Player.","sig":null,"attributes":[{"value":"/ Returns a Bitboard consisting of only the squares occupied by the White Player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179560,"byte_end":179643,"line_start":1350,"line_end":1350,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179648,"byte_end":179651,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179656,"byte_end":179670,"line_start":1352,"line_end":1352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179675,"byte_end":179678,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179683,"byte_end":179690,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179695,"byte_end":179727,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179732,"byte_end":179735,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179740,"byte_end":179780,"line_start":1357,"line_end":1357,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.occupied_white(), BitBoard::RANK_1 | BitBoard::RANK_2);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179785,"byte_end":179866,"line_start":1358,"line_end":1358,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179871,"byte_end":179878,"line_start":1359,"line_end":1359,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":179883,"byte_end":179900,"line_start":1360,"line_end":1360,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180359,"byte_end":180373,"line_start":1376,"line_end":1376,"column_start":12,"column_end":26},"name":"occupied_black","qualname":"<Board>::occupied_black","value":"pub fn occupied_black(&Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a BitBoard consisting of only the squares occupied by the Black Player.","sig":null,"attributes":[{"value":"/ Returns a BitBoard consisting of only the squares occupied by the Black Player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180007,"byte_end":180090,"line_start":1365,"line_end":1365,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180095,"byte_end":180098,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180103,"byte_end":180117,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180122,"byte_end":180125,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180130,"byte_end":180137,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180142,"byte_end":180174,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180179,"byte_end":180182,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180187,"byte_end":180227,"line_start":1372,"line_end":1372,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.occupied_black(), BitBoard::RANK_8 | BitBoard::RANK_7);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180232,"byte_end":180313,"line_start":1373,"line_end":1373,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180318,"byte_end":180325,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180330,"byte_end":180347,"line_start":1375,"line_end":1375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180823,"byte_end":180831,"line_start":1392,"line_end":1392,"column_start":12,"column_end":20},"name":"piece_bb","qualname":"<Board>::piece_bb","value":"pub fn piece_bb(&Self, Player, PieceType) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns BitBoard of a single player and that one type of piece.","sig":null,"attributes":[{"value":"/ Returns BitBoard of a single player and that one type of piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180454,"byte_end":180521,"line_start":1380,"line_end":1380,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180526,"byte_end":180529,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180534,"byte_end":180548,"line_start":1382,"line_end":1382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180553,"byte_end":180556,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180561,"byte_end":180568,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180573,"byte_end":180594,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/ use pleco::{Player,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180599,"byte_end":180633,"line_start":1386,"line_end":1386,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180638,"byte_end":180641,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180646,"byte_end":180686,"line_start":1388,"line_end":1388,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.piece_bb(Player::White,PieceType::P).0, 0x000000000000FF00);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180691,"byte_end":180777,"line_start":1389,"line_end":1389,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180782,"byte_end":180789,"line_start":1390,"line_end":1390,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180794,"byte_end":180811,"line_start":1391,"line_end":1391,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181345,"byte_end":181361,"line_start":1408,"line_end":1408,"column_start":12,"column_end":28},"name":"sliding_piece_bb","qualname":"<Board>::sliding_piece_bb","value":"pub fn sliding_piece_bb(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of the Queens and Rooks of a given player.","sig":null,"attributes":[{"value":"/ Returns the BitBoard of the Queens and Rooks of a given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":180966,"byte_end":181033,"line_start":1396,"line_end":1396,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181038,"byte_end":181041,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181046,"byte_end":181060,"line_start":1398,"line_end":1398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181065,"byte_end":181068,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181073,"byte_end":181080,"line_start":1400,"line_end":1400,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181085,"byte_end":181124,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181129,"byte_end":181166,"line_start":1402,"line_end":1402,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181171,"byte_end":181174,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181179,"byte_end":181219,"line_start":1404,"line_end":1404,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.sliding_piece_bb(Player::White).count_bits(), 3);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181224,"byte_end":181299,"line_start":1405,"line_end":1405,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181304,"byte_end":181311,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181316,"byte_end":181333,"line_start":1407,"line_end":1407,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181853,"byte_end":181870,"line_start":1423,"line_end":1423,"column_start":12,"column_end":29},"name":"diagonal_piece_bb","qualname":"<Board>::diagonal_piece_bb","value":"pub fn diagonal_piece_bb(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of the Queens and Bishops of a given player.","sig":null,"attributes":[{"value":"/ Returns the BitBoard of the Queens and Bishops of a given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181471,"byte_end":181540,"line_start":1411,"line_end":1411,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181545,"byte_end":181548,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181553,"byte_end":181567,"line_start":1413,"line_end":1413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181572,"byte_end":181575,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181580,"byte_end":181587,"line_start":1415,"line_end":1415,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181592,"byte_end":181631,"line_start":1416,"line_end":1416,"column_start":5,"column_end":44}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181636,"byte_end":181673,"line_start":1417,"line_end":1417,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181678,"byte_end":181681,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181686,"byte_end":181726,"line_start":1419,"line_end":1419,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.diagonal_piece_bb(Player::White).count_bits(), 3);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181731,"byte_end":181807,"line_start":1420,"line_end":1420,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181812,"byte_end":181819,"line_start":1421,"line_end":1421,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181824,"byte_end":181841,"line_start":1422,"line_end":1422,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182323,"byte_end":182344,"line_start":1438,"line_end":1438,"column_start":12,"column_end":33},"name":"piece_bb_both_players","qualname":"<Board>::piece_bb_both_players","value":"pub fn piece_bb_both_players(&Self, PieceType) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the combined BitBoard of both players for a given piece.","sig":null,"attributes":[{"value":"/ Returns the combined BitBoard of both players for a given piece.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":181981,"byte_end":182049,"line_start":1427,"line_end":1427,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182054,"byte_end":182057,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182062,"byte_end":182076,"line_start":1429,"line_end":1429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182081,"byte_end":182084,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182089,"byte_end":182096,"line_start":1431,"line_end":1431,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182101,"byte_end":182134,"line_start":1432,"line_end":1432,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182139,"byte_end":182142,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182147,"byte_end":182187,"line_start":1434,"line_end":1434,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.piece_bb_both_players(PieceType::P).0, 0x00FF00000000FF00);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182192,"byte_end":182277,"line_start":1435,"line_end":1435,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182282,"byte_end":182289,"line_start":1436,"line_end":1436,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182294,"byte_end":182311,"line_start":1437,"line_end":1437,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182829,"byte_end":182854,"line_start":1454,"line_end":1454,"column_start":12,"column_end":37},"name":"piece_two_bb_both_players","qualname":"<Board>::piece_two_bb_both_players","value":"pub fn piece_two_bb_both_players(&Self, PieceType, PieceType) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the combined BitBoard of both players for two pieces.","sig":null,"attributes":[{"value":"/ Returns the combined BitBoard of both players for two pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182428,"byte_end":182493,"line_start":1442,"line_end":1442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182498,"byte_end":182501,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182506,"byte_end":182520,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182525,"byte_end":182528,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182533,"byte_end":182540,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,PieceType,BitBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182545,"byte_end":182587,"line_start":1447,"line_end":1447,"column_start":5,"column_end":47}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182592,"byte_end":182629,"line_start":1448,"line_end":1448,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182634,"byte_end":182637,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182642,"byte_end":182682,"line_start":1450,"line_end":1450,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.piece_two_bb_both_players(PieceType::Q,PieceType::K).count_bits(), 4);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182687,"byte_end":182783,"line_start":1451,"line_end":1451,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182788,"byte_end":182795,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182800,"byte_end":182817,"line_start":1453,"line_end":1453,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183129,"byte_end":183141,"line_start":1461,"line_end":1461,"column_start":12,"column_end":24},"name":"piece_two_bb","qualname":"<Board>::piece_two_bb","value":"pub fn piece_two_bb(&Self, PieceType, PieceType, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` containing the locations of two given types of pieces for the given\n player.\n","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` containing the locations of two given types of pieces for the given","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":182985,"byte_end":183079,"line_start":1458,"line_end":1458,"column_start":5,"column_end":99}},{"value":"/ player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183084,"byte_end":183095,"line_start":1459,"line_end":1459,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183100,"byte_end":183117,"line_start":1460,"line_end":1460,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183648,"byte_end":183659,"line_start":1476,"line_end":1476,"column_start":12,"column_end":23},"name":"count_piece","qualname":"<Board>::count_piece","value":"pub fn count_piece(&Self, Player, PieceType) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of pieces of the given piece and player.","sig":null,"attributes":[{"value":"/ Get the total number of pieces of the given piece and player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183316,"byte_end":183381,"line_start":1465,"line_end":1465,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183386,"byte_end":183389,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183394,"byte_end":183408,"line_start":1467,"line_end":1467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183413,"byte_end":183416,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183421,"byte_end":183428,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183433,"byte_end":183473,"line_start":1470,"line_end":1470,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183478,"byte_end":183481,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183486,"byte_end":183526,"line_start":1472,"line_end":1472,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.count_piece(Player::White, PieceType::P), 8);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183531,"byte_end":183602,"line_start":1473,"line_end":1473,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183607,"byte_end":183614,"line_start":1474,"line_end":1474,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183619,"byte_end":183636,"line_start":1475,"line_end":1475,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184115,"byte_end":184134,"line_start":1491,"line_end":1491,"column_start":12,"column_end":31},"name":"count_pieces_player","qualname":"<Board>::count_pieces_player","value":"pub fn count_pieces_player(&Self, Player) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of pieces a given player has.","sig":null,"attributes":[{"value":"/ Get the total number of pieces a given player has.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183779,"byte_end":183833,"line_start":1480,"line_end":1480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183838,"byte_end":183841,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183846,"byte_end":183860,"line_start":1482,"line_end":1482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183865,"byte_end":183868,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183873,"byte_end":183880,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183885,"byte_end":183925,"line_start":1485,"line_end":1485,"column_start":5,"column_end":45}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183930,"byte_end":183967,"line_start":1486,"line_end":1486,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183972,"byte_end":183975,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":183980,"byte_end":184020,"line_start":1488,"line_end":1488,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.count_pieces_player(Player::White), 16);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184025,"byte_end":184091,"line_start":1489,"line_end":1489,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184096,"byte_end":184103,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184559,"byte_end":184575,"line_start":1507,"line_end":1507,"column_start":12,"column_end":28},"name":"count_all_pieces","qualname":"<Board>::count_all_pieces","value":"pub fn count_all_pieces(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of pieces on the board.","sig":null,"attributes":[{"value":"/ Get the total number of pieces on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184231,"byte_end":184279,"line_start":1495,"line_end":1495,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184284,"byte_end":184287,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184292,"byte_end":184306,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184311,"byte_end":184314,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184319,"byte_end":184326,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,PieceType};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184331,"byte_end":184371,"line_start":1500,"line_end":1500,"column_start":5,"column_end":45}},{"value":"/ use pleco::core::bit_twiddles::*;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184376,"byte_end":184413,"line_start":1501,"line_end":1501,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184418,"byte_end":184421,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ let chessboard = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184426,"byte_end":184466,"line_start":1503,"line_end":1503,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(chessboard.count_all_pieces(), 32);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184471,"byte_end":184521,"line_start":1504,"line_end":1504,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184526,"byte_end":184533,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184538,"byte_end":184547,"line_start":1506,"line_end":1506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184817,"byte_end":184828,"line_start":1517,"line_end":1517,"column_start":12,"column_end":23},"name":"piece_at_sq","qualname":"<Board>::piece_at_sq","value":"pub fn piece_at_sq(&Self, SQ) -> Piece","parent":null,"children":[],"decl_id":null,"docs":" Returns the PieceType, if any, at the square.","sig":null,"attributes":[{"value":"/ Returns the PieceType, if any, at the square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184657,"byte_end":184706,"line_start":1511,"line_end":1511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184711,"byte_end":184714,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184719,"byte_end":184731,"line_start":1513,"line_end":1513,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184736,"byte_end":184739,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ Panics if the square is not a legal square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184744,"byte_end":184791,"line_start":1515,"line_end":1515,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184796,"byte_end":184805,"line_start":1516,"line_end":1516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185236,"byte_end":185243,"line_start":1533,"line_end":1533,"column_start":12,"column_end":19},"name":"king_sq","qualname":"<Board>::king_sq","value":"pub fn king_sq(&Self, Player) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Returns the square of the King for a given player.","sig":null,"attributes":[{"value":"/ Returns the square of the King for a given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":184945,"byte_end":184999,"line_start":1522,"line_end":1522,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185004,"byte_end":185007,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185012,"byte_end":185026,"line_start":1524,"line_end":1524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185031,"byte_end":185034,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185039,"byte_end":185046,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}},{"value":"/ use pleco::{Board,Player,SQ};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185051,"byte_end":185084,"line_start":1527,"line_end":1527,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185089,"byte_end":185092,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ let board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185097,"byte_end":185132,"line_start":1529,"line_end":1529,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(board.king_sq(Player::White), SQ::E1);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185137,"byte_end":185190,"line_start":1530,"line_end":1530,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185195,"byte_end":185202,"line_start":1531,"line_end":1531,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185207,"byte_end":185224,"line_start":1532,"line_end":1532,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185491,"byte_end":185504,"line_start":1541,"line_end":1541,"column_start":12,"column_end":25},"name":"pinned_pieces","qualname":"<Board>::pinned_pieces","value":"pub fn pinned_pieces(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the pinned pieces of the given player.","sig":null,"attributes":[{"value":"/ Returns the pinned pieces of the given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185338,"byte_end":185388,"line_start":1537,"line_end":1537,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185393,"byte_end":185396,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ Pinned is defined as pinned to the same players king","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185401,"byte_end":185457,"line_start":1539,"line_end":1539,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185462,"byte_end":185479,"line_start":1540,"line_end":1540,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185839,"byte_end":185856,"line_start":1548,"line_end":1548,"column_start":12,"column_end":29},"name":"all_pinned_pieces","qualname":"<Board>::all_pinned_pieces","value":"pub fn all_pinned_pieces(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the pinned pieces for a given players king. Can contain piece of from both players,\n but all are guaranteed to be pinned to the given player's king.\n","sig":null,"attributes":[{"value":"/ Returns the pinned pieces for a given players king. Can contain piece of from both players,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185638,"byte_end":185733,"line_start":1545,"line_end":1545,"column_start":5,"column_end":100}},{"value":"/ but all are guaranteed to be pinned to the given player's king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185738,"byte_end":185805,"line_start":1546,"line_end":1546,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185810,"byte_end":185827,"line_start":1547,"line_end":1547,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186211,"byte_end":186225,"line_start":1557,"line_end":1557,"column_start":12,"column_end":26},"name":"pinning_pieces","qualname":"<Board>::pinning_pieces","value":"pub fn pinning_pieces(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the pinning pieces of a given player.","sig":null,"attributes":[{"value":"/ Returns the pinning pieces of a given player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":185955,"byte_end":186004,"line_start":1552,"line_end":1552,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186009,"byte_end":186012,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ E.g., pieces that are pinning a piece to the opponent's king. This will return the pinned","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186017,"byte_end":186110,"line_start":1554,"line_end":1554,"column_start":5,"column_end":98}},{"value":"/ pieces of both players, pinned to the given player's king.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186115,"byte_end":186177,"line_start":1555,"line_end":1555,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186182,"byte_end":186199,"line_start":1556,"line_end":1556,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186411,"byte_end":186424,"line_start":1563,"line_end":1563,"column_start":12,"column_end":25},"name":"castling_bits","qualname":"<Board>::castling_bits","value":"pub fn castling_bits(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw castling rights bits of the board.\n","sig":null,"attributes":[{"value":"/ Returns the raw castling rights bits of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186323,"byte_end":186377,"line_start":1561,"line_end":1561,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186382,"byte_end":186399,"line_start":1562,"line_end":1562,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186729,"byte_end":186739,"line_start":1571,"line_end":1571,"column_start":12,"column_end":22},"name":"can_castle","qualname":"<Board>::can_castle","value":"pub fn can_castle(&Self, Player, CastleType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if a player has the possibility of castling for a given CastleType.\n This does not ensure a castling is possible for the player, just that the player\n has the castling-right available.\n","sig":null,"attributes":[{"value":"/ Return if a player has the possibility of castling for a given CastleType.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186486,"byte_end":186564,"line_start":1567,"line_end":1567,"column_start":5,"column_end":83}},{"value":"/ This does not ensure a castling is possible for the player, just that the player","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186569,"byte_end":186653,"line_start":1568,"line_end":1568,"column_start":5,"column_end":89}},{"value":"/ has the castling-right available.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186658,"byte_end":186695,"line_start":1569,"line_end":1569,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186700,"byte_end":186717,"line_start":1570,"line_end":1570,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187025,"byte_end":187042,"line_start":1578,"line_end":1578,"column_start":12,"column_end":29},"name":"player_can_castle","qualname":"<Board>::player_can_castle","value":"pub fn player_can_castle(&Self, Player) -> Castling","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Castling` structure of a player, which marks whether or not\n a player has the rights to castle.\n","sig":null,"attributes":[{"value":"/ Returns the `Castling` structure of a player, which marks whether or not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186872,"byte_end":186948,"line_start":1575,"line_end":1575,"column_start":5,"column_end":81}},{"value":"/ a player has the rights to castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186953,"byte_end":186991,"line_start":1576,"line_end":1576,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":186996,"byte_end":187013,"line_start":1577,"line_end":1577,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187413,"byte_end":187427,"line_start":1586,"line_end":1586,"column_start":12,"column_end":26},"name":"castle_impeded","qualname":"<Board>::castle_impeded","value":"pub fn castle_impeded(&Self, CastleType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the castle path is impeded for the current player. Does not assume that the\n current player has the ability to castle, whether by having the castling-rights to, or\n having the rook and king be in the correct square.\n","sig":null,"attributes":[{"value":"/ Check if the castle path is impeded for the current player. Does not assume that the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187145,"byte_end":187233,"line_start":1582,"line_end":1582,"column_start":5,"column_end":93}},{"value":"/ current player has the ability to castle, whether by having the castling-rights to, or","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187238,"byte_end":187328,"line_start":1583,"line_end":1583,"column_start":5,"column_end":95}},{"value":"/ having the rook and king be in the correct square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187333,"byte_end":187387,"line_start":1584,"line_end":1584,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187392,"byte_end":187401,"line_start":1585,"line_end":1585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187724,"byte_end":187744,"line_start":1593,"line_end":1593,"column_start":12,"column_end":32},"name":"castling_rook_square","qualname":"<Board>::castling_rook_square","value":"pub fn castling_rook_square(&Self, CastleType) -> SQ","parent":null,"children":[],"decl_id":null,"docs":" Square of the Rook that is involved with the current player's castle.\n","sig":null,"attributes":[{"value":"/ Square of the Rook that is involved with the current player's castle.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187625,"byte_end":187698,"line_start":1591,"line_end":1591,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187703,"byte_end":187712,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187944,"byte_end":187953,"line_start":1599,"line_end":1599,"column_start":12,"column_end":21},"name":"last_move","qualname":"<Board>::last_move","value":"pub fn last_move(&Self) -> Option<BitMove>","parent":null,"children":[],"decl_id":null,"docs":" Return the last move played, if any.\n","sig":null,"attributes":[{"value":"/ Return the last move played, if any.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187870,"byte_end":187910,"line_start":1597,"line_end":1597,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":187915,"byte_end":187932,"line_start":1598,"line_end":1598,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188335,"byte_end":188354,"line_start":1610,"line_end":1610,"column_start":12,"column_end":31},"name":"piece_last_captured","qualname":"<Board>::piece_last_captured","value":"pub fn piece_last_captured(&Self) -> PieceType","parent":null,"children":[],"decl_id":null,"docs":" Returns if the piece (if any) that was captured last move. This method does not\n distinguish between not having any last move played and not having a piece last captured.\n","sig":null,"attributes":[{"value":"/ Returns if the piece (if any) that was captured last move. This method does not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188120,"byte_end":188203,"line_start":1607,"line_end":1607,"column_start":5,"column_end":88}},{"value":"/ distinguish between not having any last move played and not having a piece last captured.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188208,"byte_end":188301,"line_start":1608,"line_end":1608,"column_start":5,"column_end":98}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188306,"byte_end":188323,"line_start":1609,"line_end":1609,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188498,"byte_end":188510,"line_start":1616,"line_end":1616,"column_start":12,"column_end":24},"name":"material_key","qualname":"<Board>::material_key","value":"pub fn material_key(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the material key of the board.\n","sig":null,"attributes":[{"value":"/ Returns the material key of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188422,"byte_end":188464,"line_start":1614,"line_end":1614,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188469,"byte_end":188486,"line_start":1615,"line_end":1615,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188664,"byte_end":188681,"line_start":1622,"line_end":1622,"column_start":12,"column_end":29},"name":"non_pawn_material","qualname":"<Board>::non_pawn_material","value":"pub fn non_pawn_material(&Self, Player) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the current non-pawn material value of a player.\n","sig":null,"attributes":[{"value":"/ Returns the current non-pawn material value of a player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188570,"byte_end":188630,"line_start":1620,"line_end":1620,"column_start":5,"column_end":65}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188635,"byte_end":188652,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188879,"byte_end":188900,"line_start":1628,"line_end":1628,"column_start":12,"column_end":33},"name":"non_pawn_material_all","qualname":"<Board>::non_pawn_material_all","value":"pub fn non_pawn_material_all(&Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the current non-pawn material value for both players.\n","sig":null,"attributes":[{"value":"/ Returns the current non-pawn material value for both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188780,"byte_end":188845,"line_start":1626,"line_end":1626,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":188850,"byte_end":188867,"line_start":1627,"line_end":1627,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189174,"byte_end":189182,"line_start":1638,"line_end":1638,"column_start":12,"column_end":20},"name":"in_check","qualname":"<Board>::in_check","value":"pub fn in_check(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if current side to move is in check.\n","sig":null,"attributes":[{"value":"/ Returns if current side to move is in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189092,"byte_end":189140,"line_start":1636,"line_end":1636,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189145,"byte_end":189162,"line_start":1637,"line_end":1637,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189418,"byte_end":189427,"line_start":1645,"line_end":1645,"column_start":12,"column_end":21},"name":"checkmate","qualname":"<Board>::checkmate","value":"pub fn checkmate(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the current side to move is in check mate.","sig":null,"attributes":[{"value":"/ Return if the current side to move is in check mate.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189257,"byte_end":189313,"line_start":1642,"line_end":1642,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189318,"byte_end":189321,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ This method can be computationally expensive, do not use outside of Engines.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189326,"byte_end":189406,"line_start":1644,"line_end":1644,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189677,"byte_end":189686,"line_start":1652,"line_end":1652,"column_start":12,"column_end":21},"name":"stalemate","qualname":"<Board>::stalemate","value":"pub fn stalemate(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the current side to move is in stalemate.","sig":null,"attributes":[{"value":"/ Returns if the current side to move is in stalemate.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189516,"byte_end":189572,"line_start":1649,"line_end":1649,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189577,"byte_end":189580,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ This method can be computationally expensive, do not use outside of Engines.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189585,"byte_end":189665,"line_start":1651,"line_end":1651,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189992,"byte_end":190000,"line_start":1659,"line_end":1659,"column_start":12,"column_end":20},"name":"checkers","qualname":"<Board>::checkers","value":"pub fn checkers(&Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Return the `BitBoard` of all checks on the current player's king. If the current side\n to move is not in check, the `BitBoard` will be empty.\n","sig":null,"attributes":[{"value":"/ Return the `BitBoard` of all checks on the current player's king. If the current side","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189806,"byte_end":189895,"line_start":1656,"line_end":1656,"column_start":5,"column_end":94}},{"value":"/ to move is not in check, the `BitBoard` will be empty.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189900,"byte_end":189958,"line_start":1657,"line_end":1657,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":189963,"byte_end":189980,"line_start":1658,"line_end":1658,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190338,"byte_end":190365,"line_start":1667,"line_end":1667,"column_start":12,"column_end":39},"name":"discovered_check_candidates","qualname":"<Board>::discovered_check_candidates","value":"pub fn discovered_check_candidates(&Self) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` of pieces the current side can move to discover check.\n Discovered check candidates are pieces for the current side to move, that are currently\n blocking a check from another piece of the same color.\n","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` of pieces the current side can move to discover check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190064,"byte_end":190145,"line_start":1663,"line_end":1663,"column_start":5,"column_end":86}},{"value":"/ Discovered check candidates are pieces for the current side to move, that are currently","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190150,"byte_end":190241,"line_start":1664,"line_end":1664,"column_start":5,"column_end":96}},{"value":"/ blocking a check from another piece of the same color.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190246,"byte_end":190304,"line_start":1665,"line_end":1665,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190309,"byte_end":190326,"line_start":1666,"line_end":1666,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190684,"byte_end":190697,"line_start":1674,"line_end":1674,"column_start":12,"column_end":25},"name":"pieces_pinned","qualname":"<Board>::pieces_pinned","value":"pub fn pieces_pinned(&Self, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the Pinned pieces for the given player. A pinned piece is defined as a piece that\n if suddenly removed, the player would find itself in check.\n","sig":null,"attributes":[{"value":"/ Gets the Pinned pieces for the given player. A pinned piece is defined as a piece that","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190492,"byte_end":190582,"line_start":1671,"line_end":1671,"column_start":5,"column_end":95}},{"value":"/ if suddenly removed, the player would find itself in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190587,"byte_end":190650,"line_start":1672,"line_end":1672,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190655,"byte_end":190672,"line_start":1673,"line_end":1673,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190973,"byte_end":190985,"line_start":1679,"line_end":1679,"column_start":12,"column_end":24},"name":"attackers_to","qualname":"<Board>::attackers_to","value":"pub fn attackers_to(&Self, SQ, BitBoard) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a BitBoard of possible attacks / defends to a square with a given occupancy.\n Includes pieces from both players.\n","sig":null,"attributes":[{"value":"/ Returns a BitBoard of possible attacks / defends to a square with a given occupancy.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190830,"byte_end":190918,"line_start":1677,"line_end":1677,"column_start":5,"column_end":93}},{"value":"/ Includes pieces from both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":190923,"byte_end":190961,"line_start":1678,"line_end":1678,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":191748,"byte_end":191760,"line_start":1690,"line_end":1690,"column_start":12,"column_end":24},"name":"attacks_from","qualname":"<Board>::attacks_from","value":"pub fn attacks_from(&Self, PieceType, SQ, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Given a piece, square, and player, returns all squares the piece may possibly move to.\n","sig":null,"attributes":[{"value":"/ Given a piece, square, and player, returns all squares the piece may possibly move to.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":191632,"byte_end":191722,"line_start":1688,"line_end":1688,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":191727,"byte_end":191736,"line_start":1689,"line_end":1689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192315,"byte_end":192326,"line_start":1704,"line_end":1704,"column_start":12,"column_end":23},"name":"pawn_passed","qualname":"<Board>::pawn_passed","value":"pub fn pawn_passed(&Self, Player, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a pawn on a given square is passed.\n","sig":null,"attributes":[{"value":"/ Returns if a pawn on a given square is passed.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192231,"byte_end":192281,"line_start":1702,"line_end":1702,"column_start":5,"column_end":55}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192286,"byte_end":192303,"line_start":1703,"line_end":1703,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192892,"byte_end":192902,"line_start":1717,"line_end":1717,"column_start":12,"column_end":22},"name":"legal_move","qualname":"<Board>::legal_move","value":"pub fn legal_move(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if a given pseudo-legal move is a legal. This is mostly for checking the legality of\n moves that were generated in a pseudo-legal fashion. Generating moves like this is faster,\n but doesn't guarantee legality due to the possibility of a discovered check happening.","sig":null,"attributes":[{"value":"/ Tests if a given pseudo-legal move is a legal. This is mostly for checking the legality of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192502,"byte_end":192596,"line_start":1710,"line_end":1710,"column_start":5,"column_end":99}},{"value":"/ moves that were generated in a pseudo-legal fashion. Generating moves like this is faster,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192601,"byte_end":192695,"line_start":1711,"line_end":1711,"column_start":5,"column_end":99}},{"value":"/ but doesn't guarantee legality due to the possibility of a discovered check happening.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192700,"byte_end":192790,"line_start":1712,"line_end":1712,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192795,"byte_end":192798,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192803,"byte_end":192815,"line_start":1714,"line_end":1714,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192820,"byte_end":192823,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ Assumes the move is legal for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":192828,"byte_end":192880,"line_start":1716,"line_end":1716,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194878,"byte_end":194895,"line_start":1766,"line_end":1766,"column_start":12,"column_end":29},"name":"pseudo_legal_move","qualname":"<Board>::pseudo_legal_move","value":"pub fn pseudo_legal_move(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Rakes a random move and tests whether the move is pseudo-legal. Used to validate\n moves from the Transposition Table.","sig":null,"attributes":[{"value":"/ Rakes a random move and tests whether the move is pseudo-legal. Used to validate","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194442,"byte_end":194526,"line_start":1758,"line_end":1758,"column_start":5,"column_end":89}},{"value":"/ moves from the Transposition Table.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194531,"byte_end":194570,"line_start":1759,"line_end":1759,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194575,"byte_end":194578,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194583,"byte_end":194595,"line_start":1761,"line_end":1761,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194600,"byte_end":194603,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ Using this method does not guarantee that a move is legal. It only guarantee's that","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194608,"byte_end":194695,"line_start":1763,"line_end":1763,"column_start":5,"column_end":92}},{"value":"/ a move may possibly legal. To guarantee a move is completely legal for the position,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194700,"byte_end":194788,"line_start":1764,"line_end":1764,"column_start":5,"column_end":93}},{"value":"/ use `Board::pseudo_legal_move()` followed by a `Board::legal_move()`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":194793,"byte_end":194866,"line_start":1765,"line_end":1765,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":197893,"byte_end":197909,"line_start":1858,"line_end":1858,"column_start":12,"column_end":28},"name":"opposite_bishops","qualname":"<Board>::opposite_bishops","value":"pub fn opposite_bishops(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the board contains only two bishops, one for each color, and each being\n on different squares.\n","sig":null,"attributes":[{"value":"/ Returns if the board contains only two bishops, one for each color, and each being","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":197743,"byte_end":197829,"line_start":1855,"line_end":1855,"column_start":5,"column_end":91}},{"value":"/ on different squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":197834,"byte_end":197859,"line_start":1856,"line_end":1856,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":197864,"byte_end":197881,"line_start":1857,"line_end":1857,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198507,"byte_end":198525,"line_start":1870,"line_end":1870,"column_start":12,"column_end":30},"name":"advanced_pawn_push","qualname":"<Board>::advanced_pawn_push","value":"pub fn advanced_pawn_push(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a move is an advanced pawn push, meaning it passes into enemy territory.\n","sig":null,"attributes":[{"value":"/ Checks if a move is an advanced pawn push, meaning it passes into enemy territory.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198387,"byte_end":198473,"line_start":1868,"line_end":1868,"column_start":5,"column_end":91}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198478,"byte_end":198495,"line_start":1869,"line_end":1869,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198954,"byte_end":198964,"line_start":1880,"line_end":1880,"column_start":12,"column_end":22},"name":"is_capture","qualname":"<Board>::is_capture","value":"pub fn is_capture(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a move is a capture.","sig":null,"attributes":[{"value":"/ Returns if a move is a capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198707,"byte_end":198742,"line_start":1875,"line_end":1875,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198747,"byte_end":198750,"line_start":1876,"line_end":1876,"column_start":5,"column_end":8}},{"value":"/ This is similar to `BitMove::is_capture`, but instead comapres the move to the `Board`s","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198755,"byte_end":198846,"line_start":1877,"line_end":1877,"column_start":5,"column_end":96}},{"value":"/ data, rather than relying on the information encoded in the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198851,"byte_end":198920,"line_start":1878,"line_end":1878,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":198925,"byte_end":198942,"line_start":1879,"line_end":1879,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199465,"byte_end":199488,"line_start":1892,"line_end":1892,"column_start":12,"column_end":35},"name":"is_capture_or_promotion","qualname":"<Board>::is_capture_or_promotion","value":"pub fn is_capture_or_promotion(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a move is a capture.","sig":null,"attributes":[{"value":"/ Returns if a move is a capture.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199196,"byte_end":199231,"line_start":1887,"line_end":1887,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199236,"byte_end":199239,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ This is similar to `BitMove::is_capture` & `BitMove::is_promo`, but instead comapres the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199244,"byte_end":199336,"line_start":1889,"line_end":1889,"column_start":5,"column_end":97}},{"value":"/ move to the `Board`s data, rather than relying on the information encoded in the move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199341,"byte_end":199431,"line_start":1890,"line_end":1890,"column_start":5,"column_end":95}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199436,"byte_end":199453,"line_start":1891,"line_end":1891,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199920,"byte_end":199931,"line_start":1908,"line_end":1908,"column_start":12,"column_end":23},"name":"gives_check","qualname":"<Board>::gives_check","value":"pub fn gives_check(&Self, BitMove) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if a move gives check to the opposing player's King.","sig":null,"attributes":[{"value":"/ Returns if a move gives check to the opposing player's King.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199754,"byte_end":199818,"line_start":1903,"line_end":1903,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199823,"byte_end":199826,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199831,"byte_end":199843,"line_start":1905,"line_end":1905,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199848,"byte_end":199851,"line_start":1906,"line_end":1906,"column_start":5,"column_end":8}},{"value":"/ Assumes the move is legal for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":199856,"byte_end":199908,"line_start":1907,"line_end":1907,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203575,"byte_end":203581,"line_start":1986,"line_end":1986,"column_start":12,"column_end":18},"name":"see_ge","qualname":"<Board>::see_ge","value":"pub fn see_ge(&Self, BitMove, i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `see_ge` stands for Static Exchange Evaluation, Greater or Equal. This teats if the\n Static Exchange Evaluation of a move is greater than or equal to a value.","sig":null,"attributes":[{"value":"/ `see_ge` stands for Static Exchange Evaluation, Greater or Equal. This teats if the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203086,"byte_end":203173,"line_start":1978,"line_end":1978,"column_start":5,"column_end":92}},{"value":"/ Static Exchange Evaluation of a move is greater than or equal to a value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203178,"byte_end":203255,"line_start":1979,"line_end":1979,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203260,"byte_end":203263,"line_start":1980,"line_end":1980,"column_start":5,"column_end":8}},{"value":"/ This is a recursive algorithm that works by checking the destination square of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203268,"byte_end":203350,"line_start":1981,"line_end":1981,"column_start":5,"column_end":87}},{"value":"/ the given move, and attempting to repeatedly capture that spot for both players.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203355,"byte_end":203439,"line_start":1982,"line_end":1982,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203444,"byte_end":203447,"line_start":1983,"line_end":1983,"column_start":5,"column_end":8}},{"value":"/ If the move is invalid for the current board, `false` will be returned regardless","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203452,"byte_end":203537,"line_start":1984,"line_end":1984,"column_start":5,"column_end":90}},{"value":"/ of the threshold.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":203542,"byte_end":203563,"line_start":1985,"line_end":1985,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208809,"byte_end":208820,"line_start":2129,"line_end":2129,"column_start":12,"column_end":23},"name":"moved_piece","qualname":"<Board>::moved_piece","value":"pub fn moved_piece(&Self, BitMove) -> Piece","parent":null,"children":[],"decl_id":null,"docs":" Returns the piece that was moved from a given BitMove.","sig":null,"attributes":[{"value":"/ Returns the piece that was moved from a given BitMove.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208538,"byte_end":208596,"line_start":2121,"line_end":2121,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208601,"byte_end":208604,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ Simply put, this method will return the `Piece` at a move's from square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208609,"byte_end":208685,"line_start":2123,"line_end":2123,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208690,"byte_end":208693,"line_start":2124,"line_end":2124,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208698,"byte_end":208710,"line_start":2125,"line_end":2125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208715,"byte_end":208718,"line_start":2126,"line_end":2126,"column_start":5,"column_end":8}},{"value":"/ Assumes the move is legal for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208723,"byte_end":208775,"line_start":2127,"line_end":2127,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208780,"byte_end":208797,"line_start":2128,"line_end":2128,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209199,"byte_end":209213,"line_start":2143,"line_end":2143,"column_start":12,"column_end":26},"name":"captured_piece","qualname":"<Board>::captured_piece","value":"pub fn captured_piece(&Self, BitMove) -> PieceType","parent":null,"children":[],"decl_id":null,"docs":" Returns the piece that was captured, if any from a given BitMove.","sig":null,"attributes":[{"value":"/ Returns the piece that was captured, if any from a given BitMove.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208924,"byte_end":208993,"line_start":2135,"line_end":2135,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":208998,"byte_end":209001,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ If the move is not a capture, `PieceType::None` will be returned.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209006,"byte_end":209075,"line_start":2137,"line_end":2137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209080,"byte_end":209083,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209088,"byte_end":209100,"line_start":2139,"line_end":2139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209105,"byte_end":209108,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ Assumes the move is legal for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209113,"byte_end":209165,"line_start":2141,"line_end":2141,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209170,"byte_end":209187,"line_start":2142,"line_end":2142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209646,"byte_end":209655,"line_start":2157,"line_end":2157,"column_start":12,"column_end":21},"name":"key_after","qualname":"<Board>::key_after","value":"pub fn key_after(&Self, BitMove) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Zobrist key after a move is played. Doesn't recognize special\n moves like castling, en-passant, and promotion.","sig":null,"attributes":[{"value":"/ Returns the Zobrist key after a move is played. Doesn't recognize special","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209405,"byte_end":209482,"line_start":2151,"line_end":2151,"column_start":5,"column_end":82}},{"value":"/ moves like castling, en-passant, and promotion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209487,"byte_end":209538,"line_start":2152,"line_end":2152,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209543,"byte_end":209546,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209551,"byte_end":209563,"line_start":2154,"line_end":2154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209568,"byte_end":209571,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ Panics if the move is not legal for the current board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":209576,"byte_end":209634,"line_start":2156,"line_end":2156,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210314,"byte_end":210327,"line_start":2175,"line_end":2175,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Board>::pretty_string","value":"pub fn pretty_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a prettified String of the current `Board`, for easy command line displaying.","sig":null,"attributes":[{"value":"/ Returns a prettified String of the current `Board`, for easy command line displaying.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210115,"byte_end":210204,"line_start":2172,"line_end":2172,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210209,"byte_end":210212,"line_start":2173,"line_end":2173,"column_start":5,"column_end":8}},{"value":"/ Capital Letters represent white pieces, while lower case represents black pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210217,"byte_end":210302,"line_start":2174,"line_end":2174,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210869,"byte_end":210888,"line_start":2194,"line_end":2194,"column_start":12,"column_end":31},"name":"get_piece_locations","qualname":"<Board>::get_piece_locations","value":"pub fn get_piece_locations(&Self) -> PieceLocations","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of the current `PieceLocations`.\n","sig":null,"attributes":[{"value":"/ Returns a clone of the current `PieceLocations`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210805,"byte_end":210857,"line_start":2193,"line_end":2193,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":211002,"byte_end":211018,"line_start":2199,"line_end":2199,"column_start":12,"column_end":28},"name":"print_debug_info","qualname":"<Board>::print_debug_info","value":"pub fn print_debug_info(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Get Debug Information.\n","sig":null,"attributes":[{"value":"/ Get Debug Information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":210964,"byte_end":210990,"line_start":2198,"line_end":2198,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":211861,"byte_end":211873,"line_start":2224,"line_end":2224,"column_start":12,"column_end":24},"name":"pretty_print","qualname":"<Board>::pretty_print","value":"pub fn pretty_print(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Prints a prettified representation of the board.\n","sig":null,"attributes":[{"value":"/ Prints a prettified representation of the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":211797,"byte_end":211849,"line_start":2223,"line_end":2223,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212046,"byte_end":212057,"line_start":2231,"line_end":2231,"column_start":12,"column_end":23},"name":"fancy_print","qualname":"<Board>::fancy_print","value":"pub fn fancy_print(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Print the board alongside useful information.","sig":null,"attributes":[{"value":"/ Print the board alongside useful information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":211940,"byte_end":211989,"line_start":2228,"line_end":2228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":211994,"byte_end":211997,"line_start":2229,"line_end":2229,"column_start":5,"column_end":8}},{"value":"/ Mostly for Debugging useage.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212002,"byte_end":212034,"line_start":2230,"line_end":2230,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212633,"byte_end":212649,"line_start":2255,"line_end":2255,"column_start":5,"column_end":21},"name":"IncorrectKingNum","qualname":"::board::BoardError::IncorrectKingNum","value":"BoardError::IncorrectKingNum { player, num }","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212681,"byte_end":212696,"line_start":2256,"line_end":2256,"column_start":5,"column_end":20},"name":"IncorrectKingSQ","qualname":"::board::BoardError::IncorrectKingSQ","value":"BoardError::IncorrectKingSQ { player, sq }","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212727,"byte_end":212738,"line_start":2257,"line_end":2257,"column_start":5,"column_end":16},"name":"BadEPSquare","qualname":"::board::BoardError::BadEPSquare","value":"BoardError::BadEPSquare { sq }","parent":{"krate":0,"index":1614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212616,"byte_end":212626,"line_start":2254,"line_end":2254,"column_start":10,"column_end":20},"name":"BoardError","qualname":"::board::BoardError","value":"pub enum BoardError {\n    IncorrectKingNum {\n        player: Player,\n        num: u8,\n    },\n    IncorrectKingSQ {\n        player: Player,\n        sq: SQ,\n    },\n    BadEPSquare {\n        sq: SQ,\n    },\n}","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621}],"decl_id":null,"docs":" Errors concerning the current `Board` position.\n","sig":null,"attributes":[{"value":"/ Errors concerning the current `Board` position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212555,"byte_end":212606,"line_start":2253,"line_end":2253,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213359,"byte_end":213370,"line_start":2272,"line_end":2272,"column_start":12,"column_end":23},"name":"is_ok_quick","qualname":"<Board>::is_ok_quick","value":"pub fn is_ok_quick(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks the basic status of the board, returning false if something is wrong.\n","sig":null,"attributes":[{"value":"/ Checks the basic status of the board, returning false if something is wrong.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213267,"byte_end":213347,"line_start":2271,"line_end":2271,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213757,"byte_end":213764,"line_start":2280,"line_end":2280,"column_start":12,"column_end":19},"name":"is_okay","qualname":"<Board>::is_okay","value":"pub fn is_okay(&Self) -> Result<(), BoardError>","parent":null,"children":[],"decl_id":null,"docs":" Checks if the current state of the Board is okay.\n","sig":null,"attributes":[{"value":"/ Checks if the current state of the Board is okay.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213692,"byte_end":213745,"line_start":2279,"line_end":2279,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216753,"byte_end":216762,"line_start":2368,"line_end":2368,"column_start":12,"column_end":21},"name":"RandBoard","qualname":"::board::RandBoard","value":"RandBoard {  }","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635}],"decl_id":null,"docs":" Random [`Board`] generator. Creates either one or many random boards with optional\n parameters.","sig":null,"attributes":[{"value":"/ Random [`Board`] generator. Creates either one or many random boards with optional","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216026,"byte_end":216112,"line_start":2339,"line_end":2339,"column_start":1,"column_end":87}},{"value":"/ parameters.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216113,"byte_end":216128,"line_start":2340,"line_end":2340,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216129,"byte_end":216132,"line_start":2341,"line_end":2341,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216133,"byte_end":216147,"line_start":2342,"line_end":2342,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216148,"byte_end":216151,"line_start":2343,"line_end":2343,"column_start":1,"column_end":4}},{"value":"/ Create one [`Board`] with at least 5 moves played that is created in a pseudo-random","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216152,"byte_end":216240,"line_start":2344,"line_end":2344,"column_start":1,"column_end":89}},{"value":"/ fashion.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216241,"byte_end":216253,"line_start":2345,"line_end":2345,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216254,"byte_end":216257,"line_start":2346,"line_end":2346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216258,"byte_end":216265,"line_start":2347,"line_end":2347,"column_start":1,"column_end":8}},{"value":"/ use pleco::board::{Board,RandBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216266,"byte_end":216306,"line_start":2348,"line_end":2348,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216307,"byte_end":216310,"line_start":2349,"line_end":2349,"column_start":1,"column_end":4}},{"value":"/ let rand_boards: Board = RandBoard::new()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216311,"byte_end":216356,"line_start":2350,"line_end":2350,"column_start":1,"column_end":46}},{"value":"/     .pseudo_random(12455)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216357,"byte_end":216386,"line_start":2351,"line_end":2351,"column_start":1,"column_end":30}},{"value":"/     .min_moves(5)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216387,"byte_end":216408,"line_start":2352,"line_end":2352,"column_start":1,"column_end":22}},{"value":"/     .one();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216409,"byte_end":216424,"line_start":2353,"line_end":2353,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216425,"byte_end":216432,"line_start":2354,"line_end":2354,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216433,"byte_end":216436,"line_start":2355,"line_end":2355,"column_start":1,"column_end":4}},{"value":"/ Create a `Vec` of 10 random [`Board`]s that are guaranteed to not be in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216437,"byte_end":216519,"line_start":2356,"line_end":2356,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216520,"byte_end":216523,"line_start":2357,"line_end":2357,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216524,"byte_end":216531,"line_start":2358,"line_end":2358,"column_start":1,"column_end":8}},{"value":"/ use pleco::board::{Board,RandBoard};","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216532,"byte_end":216572,"line_start":2359,"line_end":2359,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216573,"byte_end":216576,"line_start":2360,"line_end":2360,"column_start":1,"column_end":4}},{"value":"/ let rand_boards: Vec<Board> = RandBoard::new()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216577,"byte_end":216627,"line_start":2361,"line_end":2361,"column_start":1,"column_end":51}},{"value":"/     .pseudo_random(12455)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216628,"byte_end":216657,"line_start":2362,"line_end":2362,"column_start":1,"column_end":30}},{"value":"/     .no_check()","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216658,"byte_end":216677,"line_start":2363,"line_end":2363,"column_start":1,"column_end":20}},{"value":"/     .many(10);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216678,"byte_end":216696,"line_start":2364,"line_end":2364,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216697,"byte_end":216704,"line_start":2365,"line_end":2365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216705,"byte_end":216708,"line_start":2366,"line_end":2366,"column_start":1,"column_end":4}},{"value":"/ [`Board`]: struct.Board.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216709,"byte_end":216741,"line_start":2367,"line_end":2367,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217260,"byte_end":217263,"line_start":2392,"line_end":2392,"column_start":12,"column_end":15},"name":"new","qualname":"<RandBoard>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RandBoard` object.\n","sig":null,"attributes":[{"value":"/ Create a new `RandBoard` object.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217212,"byte_end":217248,"line_start":2391,"line_end":2391,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217640,"byte_end":217644,"line_start":2405,"line_end":2405,"column_start":12,"column_end":16},"name":"many","qualname":"<RandBoard>::many","value":"pub fn many(Self, usize) -> Vec<Board>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Vec<Board>` full of `Boards` containing random positions. The\n `Vec` will be of size 'size'.\n","sig":null,"attributes":[{"value":"/ Creates a `Vec<Board>` full of `Boards` containing random positions. The","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217514,"byte_end":217590,"line_start":2403,"line_end":2403,"column_start":5,"column_end":81}},{"value":"/ `Vec` will be of size 'size'.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217595,"byte_end":217628,"line_start":2404,"line_end":2404,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217914,"byte_end":217917,"line_start":2414,"line_end":2414,"column_start":12,"column_end":15},"name":"one","qualname":"<RandBoard>::one","value":"pub fn one(Self) -> Board","parent":null,"children":[],"decl_id":null,"docs":" Creates a singular `Board` with a random position.\n","sig":null,"attributes":[{"value":"/ Creates a singular `Board` with a random position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217848,"byte_end":217902,"line_start":2413,"line_end":2413,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218100,"byte_end":218113,"line_start":2420,"line_end":2420,"column_start":12,"column_end":25},"name":"pseudo_random","qualname":"<RandBoard>::pseudo_random","value":"pub fn pseudo_random(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns PseudoRandom generation on. This allows for the same random `Board`s\n to be created from the same seed.\n","sig":null,"attributes":[{"value":"/ Turns PseudoRandom generation on. This allows for the same random `Board`s","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217968,"byte_end":218046,"line_start":2418,"line_end":2418,"column_start":5,"column_end":83}},{"value":"/ to be created from the same seed.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218051,"byte_end":218088,"line_start":2419,"line_end":2419,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218338,"byte_end":218347,"line_start":2427,"line_end":2427,"column_start":12,"column_end":21},"name":"min_moves","qualname":"<RandBoard>::min_moves","value":"pub fn min_moves(Self, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum moves a randomly generated `Board` must contain.\n","sig":null,"attributes":[{"value":"/ Sets the minimum moves a randomly generated `Board` must contain.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218257,"byte_end":218326,"line_start":2426,"line_end":2426,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218509,"byte_end":218517,"line_start":2433,"line_end":2433,"column_start":12,"column_end":20},"name":"in_check","qualname":"<RandBoard>::in_check","value":"pub fn in_check(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Guarantees that the boards returned are only in check,\n","sig":null,"attributes":[{"value":"/ Guarantees that the boards returned are only in check,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218439,"byte_end":218497,"line_start":2432,"line_end":2432,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218673,"byte_end":218681,"line_start":2439,"line_end":2439,"column_start":12,"column_end":20},"name":"no_check","qualname":"<RandBoard>::no_check","value":"pub fn no_check(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Guarantees that the boards returned are not in check.\n","sig":null,"attributes":[{"value":"/ Guarantees that the boards returned are not in check.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218604,"byte_end":218661,"line_start":2438,"line_end":2438,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218836,"byte_end":218850,"line_start":2445,"line_end":2445,"column_start":12,"column_end":26},"name":"from_start_pos","qualname":"<RandBoard>::from_start_pos","value":"pub fn from_start_pos(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates Random Boards from the start position only\n","sig":null,"attributes":[{"value":"/ Generates Random Boards from the start position only","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":218768,"byte_end":218824,"line_start":2444,"line_end":2444,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bots","qualname":"::bots","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1661},{"krate":0,"index":1674},{"krate":0,"index":1686},{"krate":0,"index":1705},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771}],"decl_id":null,"docs":" Contains all of the currently completed standard bots/searchers/AIs.","sig":null,"attributes":[{"value":"/ Contains all of the currently completed standard bots/searchers/AIs.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305043,"byte_end":305115,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305116,"byte_end":305119,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These are mostly for example purposes, to see how one can create a chess AI.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305120,"byte_end":305200,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/minimax.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"minimax","qualname":"::bots::minimax","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/minimax.rs","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658}],"decl_id":null,"docs":" The minimax algorithm.\n","sig":null,"attributes":[{"value":"/ The minimax algorithm.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/minimax.rs","byte_start":309134,"byte_end":309160,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/minimax.rs","byte_start":309197,"byte_end":309204,"line_start":5,"line_end":5,"column_start":8,"column_end":15},"name":"minimax","qualname":"::bots::minimax::minimax","value":"pub fn minimax(&mut Board, u16) -> ScoringMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/parallel_minimax.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parallel_minimax","qualname":"::bots::parallel_minimax","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/parallel_minimax.rs","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1672}],"decl_id":null,"docs":" The parallel minimax algorithm.\n","sig":null,"attributes":[{"value":"/ The parallel minimax algorithm.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/parallel_minimax.rs","byte_start":309761,"byte_end":309796,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/parallel_minimax.rs","byte_start":309928,"byte_end":309944,"line_start":10,"line_end":10,"column_start":8,"column_end":24},"name":"parallel_minimax","qualname":"::bots::parallel_minimax::parallel_minimax","value":"pub fn parallel_minimax(&mut Board, u16) -> ScoringMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/alphabeta.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alphabeta","qualname":"::bots::alphabeta","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/alphabeta.rs","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1685}],"decl_id":null,"docs":" The alpha-beta algorithm.\n","sig":null,"attributes":[{"value":"/ The alpha-beta algorithm.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/alphabeta.rs","byte_start":310693,"byte_end":310722,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/alphabeta.rs","byte_start":310824,"byte_end":310841,"line_start":10,"line_end":10,"column_start":8,"column_end":25},"name":"alpha_beta_search","qualname":"::bots::alphabeta::alpha_beta_search","value":"pub fn alpha_beta_search(&mut Board, i16, i16, u16) -> ScoringMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/jamboree.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jamboree","qualname":"::bots::jamboree","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/jamboree.rs","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"decl_id":null,"docs":" The jamboree algorithm.\n","sig":null,"attributes":[{"value":"/ The jamboree algorithm.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/jamboree.rs","byte_start":311687,"byte_end":311714,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/jamboree.rs","byte_start":311892,"byte_end":311900,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"jamboree","qualname":"::bots::jamboree::jamboree","value":"pub fn jamboree(&mut Board, i16, i16, u16, u16) -> ScoringMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/iterative_parallel_mvv_lva.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterative_parallel_mvv_lva","qualname":"::bots::iterative_parallel_mvv_lva","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/iterative_parallel_mvv_lva.rs","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"decl_id":null,"docs":" The iterative jamboree algorithm.\n","sig":null,"attributes":[{"value":"/ The iterative jamboree algorithm.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/iterative_parallel_mvv_lva.rs","byte_start":314204,"byte_end":314241,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/iterative_parallel_mvv_lva.rs","byte_start":314552,"byte_end":314571,"line_start":17,"line_end":17,"column_start":8,"column_end":27},"name":"iterative_deepening","qualname":"::bots::iterative_parallel_mvv_lva::iterative_deepening","value":"pub fn iterative_deepening(&mut Board, u16) -> BitMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305774,"byte_end":305783,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"RandomBot","qualname":"::bots::RandomBot","value":"RandomBot {  }","parent":null,"children":[],"decl_id":null,"docs":" Searcher that randomly chooses a move. The fastest, yet dumbest, searcher we have to offer.\n","sig":null,"attributes":[{"value":"/ Searcher that randomly chooses a move. The fastest, yet dumbest, searcher we have to offer.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305667,"byte_end":305762,"line_start":31,"line_end":31,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305869,"byte_end":305884,"line_start":35,"line_end":35,"column_start":12,"column_end":27},"name":"MiniMaxSearcher","qualname":"::bots::MiniMaxSearcher","value":"MiniMaxSearcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Searcher that uses a MiniMax algorithm to search for a best move.\n","sig":null,"attributes":[{"value":"/ Searcher that uses a MiniMax algorithm to search for a best move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305788,"byte_end":305857,"line_start":34,"line_end":34,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305995,"byte_end":306018,"line_start":38,"line_end":38,"column_start":12,"column_end":35},"name":"ParallelMiniMaxSearcher","qualname":"::bots::ParallelMiniMaxSearcher","value":"ParallelMiniMaxSearcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Searcher that uses a MiniMax algorithm to search for a best move, but does so in parallel.\n","sig":null,"attributes":[{"value":"/ Searcher that uses a MiniMax algorithm to search for a best move, but does so in parallel.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305889,"byte_end":305983,"line_start":37,"line_end":37,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306108,"byte_end":306125,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AlphaBetaSearcher","qualname":"::bots::AlphaBetaSearcher","value":"AlphaBetaSearcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Searcher that uses an alpha-beta algorithm to search for a best move.\n","sig":null,"attributes":[{"value":"/ Searcher that uses an alpha-beta algorithm to search for a best move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306023,"byte_end":306096,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306310,"byte_end":306326,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"JamboreeSearcher","qualname":"::bots::JamboreeSearcher","value":"JamboreeSearcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Searcher that uses a modified alpha-beta algorithm to search for a best move, but does so in parallel.\n The specific name of this algorithm is called \"jamboree\".\n","sig":null,"attributes":[{"value":"/ Searcher that uses a modified alpha-beta algorithm to search for a best move, but does so in parallel.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306130,"byte_end":306236,"line_start":43,"line_end":43,"column_start":1,"column_end":107}},{"value":"/ The specific name of this algorithm is called \"jamboree\".","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306237,"byte_end":306298,"line_start":44,"line_end":44,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306566,"byte_end":306583,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"IterativeSearcher","qualname":"::bots::IterativeSearcher","value":"IterativeSearcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Modified `JamboreeSearcher` that uses the parallel alpha-beta algorithm. Improves upon `JamboreeSearcher` by\n adding iterative deepening with an aspiration window, MVV-LVA move ordering, as well as a qscience search.\n","sig":null,"attributes":[{"value":"/ Modified `JamboreeSearcher` that uses the parallel alpha-beta algorithm. Improves upon `JamboreeSearcher` by","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306331,"byte_end":306443,"line_start":47,"line_end":47,"column_start":1,"column_end":113}},{"value":"/ adding iterative deepening with an aspiration window, MVV-LVA move ordering, as well as a qscience search.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306444,"byte_end":306554,"line_start":48,"line_end":48,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":308306,"byte_end":308316,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"eval_board","qualname":"::bots::eval_board","value":"pub fn eval_board(&Board) -> ScoringMove","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::helper","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1846},{"krate":0,"index":1958},{"krate":0,"index":1993},{"krate":0,"index":2024},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2148}],"decl_id":null,"docs":" Statically initialized lookup tables.","sig":null,"attributes":[{"value":"/ Statically initialized lookup tables.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322629,"byte_end":322670,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322671,"byte_end":322674,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Whenever a `Board` is created, these are also created as well. Calling `Hepler::new()` will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322675,"byte_end":322770,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ initialize the tables the first time it's called, and successive calls won't waste time","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322771,"byte_end":322862,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ initializing the table.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322863,"byte_end":322890,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322891,"byte_end":322894,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is highly recommended to go through a `Helper` to access these tables, as the access will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322895,"byte_end":322991,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ guarantee that the tables are initialized in the first place.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":322992,"byte_end":323057,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323058,"byte_end":323061,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If you want the same functions, but can ensure the Tables are initalized, see [`helper::prelude`]","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323062,"byte_end":323163,"line_start":10,"line_end":10,"column_start":1,"column_end":102}},{"value":"/ for those raw functions.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323164,"byte_end":323192,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323193,"byte_end":323196,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`helper::prelude`]: prelude/index.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323197,"byte_end":323240,"line_start":13,"line_end":13,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::helper::prelude","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117}],"decl_id":null,"docs":" Default functions for accessing the statically computed tables.","sig":null,"attributes":[{"value":"/ Default functions for accessing the statically computed tables.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361758,"byte_end":361825,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361826,"byte_end":361829,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361830,"byte_end":361842,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361843,"byte_end":361846,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Using any of these methods is inherently unsafe, as it is not guaranteed that they'll be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361847,"byte_end":361939,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ initiated correctly. Consider using the [`Helper`] structure to guarantee initialization.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":361940,"byte_end":362033,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362034,"byte_end":362037,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Documentation","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362038,"byte_end":362057,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362058,"byte_end":362061,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These functions are documented in [`Helper`] , rather than here.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362062,"byte_end":362130,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362131,"byte_end":362134,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Helper`]: ../struct.Helper.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362135,"byte_end":362172,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362638,"byte_end":362650,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"init_statics","qualname":"::helper::prelude::init_statics","value":"pub fn init_statics()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the static structures. Guarantees to only allow being called once.\n","sig":null,"attributes":[{"value":"/ Initializes the static structures. Guarantees to only allow being called once.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362540,"byte_end":362622,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"cold","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":362623,"byte_end":362630,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363310,"byte_end":363322,"line_start":52,"line_end":52,"column_start":8,"column_end":20},"name":"bishop_moves","qualname":"::helper::prelude::bishop_moves","value":"pub fn bishop_moves(BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Bishop Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Bishop Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363023,"byte_end":363119,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363120,"byte_end":363216,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363217,"byte_end":363284,"line_start":50,"line_end":50,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363285,"byte_end":363302,"line_start":51,"line_end":51,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363740,"byte_end":363750,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"rook_moves","qualname":"::helper::prelude::rook_moves","value":"pub fn rook_moves(BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Rook Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Rook Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363455,"byte_end":363549,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363550,"byte_end":363646,"line_start":58,"line_end":58,"column_start":1,"column_end":97}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363647,"byte_end":363714,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363715,"byte_end":363732,"line_start":60,"line_end":60,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364167,"byte_end":364178,"line_start":70,"line_end":70,"column_start":8,"column_end":19},"name":"queen_moves","qualname":"::helper::prelude::queen_moves","value":"pub fn queen_moves(BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Queen Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Queen Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363881,"byte_end":363976,"line_start":66,"line_end":66,"column_start":1,"column_end":96}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":363977,"byte_end":364073,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364074,"byte_end":364141,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364142,"byte_end":364159,"line_start":69,"line_end":69,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364466,"byte_end":364478,"line_start":80,"line_end":80,"column_start":8,"column_end":20},"name":"knight_moves","qualname":"::helper::prelude::knight_moves","value":"pub fn knight_moves(SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Knight Moves `BitBoard` from a source square.\n","sig":null,"attributes":[{"value":"/ Generate Knight Moves `BitBoard` from a source square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364382,"byte_end":364440,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364441,"byte_end":364458,"line_start":79,"line_end":79,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364625,"byte_end":364635,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"king_moves","qualname":"::helper::prelude::king_moves","value":"pub fn king_moves(SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate King Moves `BitBoard` from a source square.\n","sig":null,"attributes":[{"value":"/ Generate King Moves `BitBoard` from a source square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364543,"byte_end":364599,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364600,"byte_end":364617,"line_start":85,"line_end":85,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364760,"byte_end":364775,"line_start":92,"line_end":92,"column_start":8,"column_end":23},"name":"distance_of_sqs","qualname":"::helper::prelude::distance_of_sqs","value":"pub fn distance_of_sqs(SQ, SQ) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the distance of two squares.\n","sig":null,"attributes":[{"value":"/ Get the distance of two squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364698,"byte_end":364734,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364735,"byte_end":364752,"line_start":91,"line_end":91,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364979,"byte_end":364986,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"line_bb","qualname":"::helper::prelude::line_bb","value":"pub fn line_bb(SQ, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Get the line (diagonal / file / rank) `BitBoard` that two squares both exist on, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the line (diagonal / file / rank) `BitBoard` that two squares both exist on, if it exists.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364855,"byte_end":364953,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":364954,"byte_end":364971,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365214,"byte_end":365224,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"between_bb","qualname":"::helper::prelude::between_bb","value":"pub fn between_bb(SQ, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Get the line (diagonal / file / rank) `BitBoard` between two squares, not including the squares, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the line (diagonal / file / rank) `BitBoard` between two squares, not including the squares, if it exists.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365074,"byte_end":365188,"line_start":102,"line_end":102,"column_start":1,"column_end":115}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365189,"byte_end":365206,"line_start":103,"line_end":103,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365393,"byte_end":365409,"line_start":110,"line_end":110,"column_start":8,"column_end":24},"name":"adjacent_sq_file","qualname":"::helper::prelude::adjacent_sq_file","value":"pub fn adjacent_sq_file(SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the adjacent files `BitBoard` of the square\n","sig":null,"attributes":[{"value":"/ Gets the adjacent files `BitBoard` of the square","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365315,"byte_end":365367,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365368,"byte_end":365385,"line_start":109,"line_end":109,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365554,"byte_end":365567,"line_start":116,"line_end":116,"column_start":8,"column_end":21},"name":"adjacent_file","qualname":"::helper::prelude::adjacent_file","value":"pub fn adjacent_file(File) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the adjacent files `BitBoard` of the file\n","sig":null,"attributes":[{"value":"/ Gets the adjacent files `BitBoard` of the file","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365478,"byte_end":365528,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365529,"byte_end":365546,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365803,"byte_end":365820,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"pawn_attacks_from","qualname":"::helper::prelude::pawn_attacks_from","value":"pub fn pawn_attacks_from(SQ, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Pawn attacks `BitBoard` from a given square, per player.\n Basically, given square x, returns the BitBoard of squares a pawn on x attacks.\n","sig":null,"attributes":[{"value":"/ Pawn attacks `BitBoard` from a given square, per player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365633,"byte_end":365693,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/ Basically, given square x, returns the BitBoard of squares a pawn on x attacks.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365694,"byte_end":365777,"line_start":121,"line_end":121,"column_start":1,"column_end":84}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365778,"byte_end":365795,"line_start":122,"line_end":122,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366008,"byte_end":366015,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"aligned","qualname":"::helper::prelude::aligned","value":"pub fn aligned(SQ, SQ, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if three Squares are in the same diagonal, file, or rank.\n","sig":null,"attributes":[{"value":"/ Returns if three Squares are in the same diagonal, file, or rank.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365913,"byte_end":365982,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":365983,"byte_end":366000,"line_start":128,"line_end":128,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366271,"byte_end":366284,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"ring_distance","qualname":"::helper::prelude::ring_distance","value":"pub fn ring_distance(SQ, u8) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the ring of bits surrounding the square sq at a specified distance.","sig":null,"attributes":[{"value":"/ Returns the ring of bits surrounding the square sq at a specified distance.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366083,"byte_end":366162,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366163,"byte_end":366166,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366167,"byte_end":366179,"line_start":135,"line_end":135,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366180,"byte_end":366183,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ distance must be less than 8, or else a panic will occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366184,"byte_end":366245,"line_start":137,"line_end":137,"column_start":1,"column_end":62}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366246,"byte_end":366263,"line_start":138,"line_end":138,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366477,"byte_end":366492,"line_start":145,"line_end":145,"column_start":8,"column_end":23},"name":"forward_rank_bb","qualname":"::helper::prelude::forward_rank_bb","value":"pub fn forward_rank_bb(Player, Rank) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of all squares in the rank in front of the given one.\n","sig":null,"attributes":[{"value":"/ Returns the BitBoard of all squares in the rank in front of the given one.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366373,"byte_end":366451,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366452,"byte_end":366469,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367046,"byte_end":367063,"line_start":159,"line_end":159,"column_start":8,"column_end":25},"name":"pawn_attacks_span","qualname":"::helper::prelude::pawn_attacks_span","value":"pub fn pawn_attacks_span(Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` of all squares that can be attacked by a pawn\n of the same color when it moves along its file, starting from the\n given square. Basically, if the pawn progresses along the same file\n for the entire game, this bitboard would contain all possible forward squares\n it could attack","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` of all squares that can be attacked by a pawn","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366589,"byte_end":366661,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/ of the same color when it moves along its file, starting from the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366662,"byte_end":366731,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"/ given square. Basically, if the pawn progresses along the same file","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366732,"byte_end":366803,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ for the entire game, this bitboard would contain all possible forward squares","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366804,"byte_end":366885,"line_start":152,"line_end":152,"column_start":1,"column_end":82}},{"value":"/ it could attack","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366886,"byte_end":366905,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366906,"byte_end":366909,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366910,"byte_end":366922,"line_start":155,"line_end":155,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366923,"byte_end":366926,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":366927,"byte_end":367020,"line_start":157,"line_end":157,"column_start":1,"column_end":94}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367021,"byte_end":367038,"line_start":158,"line_end":158,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367375,"byte_end":367390,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"forward_file_bb","qualname":"::helper::prelude::forward_file_bb","value":"pub fn forward_file_bb(Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of all squares in the file in front of the given one.","sig":null,"attributes":[{"value":"/ Returns the BitBoard of all squares in the file in front of the given one.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367156,"byte_end":367234,"line_start":163,"line_end":163,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367235,"byte_end":367238,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367239,"byte_end":367251,"line_start":165,"line_end":165,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367252,"byte_end":367255,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367256,"byte_end":367349,"line_start":167,"line_end":167,"column_start":1,"column_end":94}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367350,"byte_end":367367,"line_start":168,"line_end":168,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367705,"byte_end":367721,"line_start":180,"line_end":180,"column_start":8,"column_end":24},"name":"passed_pawn_mask","qualname":"::helper::prelude::passed_pawn_mask","value":"pub fn passed_pawn_mask(Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a `BitBoard` allowing for testing of the a pawn being a\n \"passed pawn\".\n # Safety","sig":null,"attributes":[{"value":"/ Returns a `BitBoard` allowing for testing of the a pawn being a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367482,"byte_end":367549,"line_start":174,"line_end":174,"column_start":1,"column_end":68}},{"value":"/ \"passed pawn\".","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367550,"byte_end":367568,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367569,"byte_end":367581,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367582,"byte_end":367585,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367586,"byte_end":367679,"line_start":178,"line_end":178,"column_start":1,"column_end":94}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367680,"byte_end":367697,"line_start":179,"line_end":179,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367945,"byte_end":367953,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"z_square","qualname":"::helper::prelude::z_square","value":"pub fn z_square(SQ, Piece) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Zobrist hash for a given square, and player / piece at that square.\n","sig":null,"attributes":[{"value":"/ Returns the Zobrist hash for a given square, and player / piece at that square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367836,"byte_end":367919,"line_start":186,"line_end":186,"column_start":1,"column_end":84}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":367920,"byte_end":367937,"line_start":187,"line_end":187,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368103,"byte_end":368107,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"z_ep","qualname":"::helper::prelude::z_ep","value":"pub fn z_ep(SQ) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the zobrist hash for a given zobrist square.\n","sig":null,"attributes":[{"value":"/ Returns the zobrist hash for a given zobrist square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368021,"byte_end":368077,"line_start":192,"line_end":192,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368078,"byte_end":368095,"line_start":193,"line_end":193,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368297,"byte_end":368305,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"z_castle","qualname":"::helper::prelude::z_castle","value":"pub fn z_castle(u8) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Zobrish hash for a castling right.","sig":null,"attributes":[{"value":"/ Returns the Zobrish hash for a castling right.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368150,"byte_end":368200,"line_start":198,"line_end":198,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368201,"byte_end":368204,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Undefined behavior will occur if the bits are greater than 15.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368205,"byte_end":368271,"line_start":200,"line_end":200,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368272,"byte_end":368289,"line_start":201,"line_end":201,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368448,"byte_end":368454,"line_start":208,"line_end":208,"column_start":8,"column_end":14},"name":"z_side","qualname":"::helper::prelude::z_side","value":"pub fn z_side() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Zobrist Hash for having a Black Player's turn.\n","sig":null,"attributes":[{"value":"/ Returns the Zobrist Hash for having a Black Player's turn.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368360,"byte_end":368422,"line_start":206,"line_end":206,"column_start":1,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368423,"byte_end":368440,"line_start":207,"line_end":207,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368566,"byte_end":368576,"line_start":214,"line_end":214,"column_start":8,"column_end":18},"name":"z_no_pawns","qualname":"::helper::prelude::z_no_pawns","value":"pub fn z_no_pawns() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the Zobrist Hash for having no pawns.\n","sig":null,"attributes":[{"value":"/ Returns the Zobrist Hash for having no pawns.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368491,"byte_end":368540,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368541,"byte_end":368558,"line_start":213,"line_end":213,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368736,"byte_end":368739,"line_start":224,"line_end":224,"column_start":8,"column_end":11},"name":"psq","qualname":"::helper::prelude::psq","value":"pub fn psq(Piece, SQ) -> Score","parent":null,"children":[],"decl_id":null,"docs":" Returns the score for a player's piece being at a particular square.\n","sig":null,"attributes":[{"value":"/ Returns the score for a player's piece being at a particular square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368638,"byte_end":368710,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368711,"byte_end":368728,"line_start":223,"line_end":223,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368957,"byte_end":368968,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"piece_value","qualname":"::helper::prelude::piece_value","value":"pub fn piece_value(Piece, bool) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of a `Piece`. If `eg` is true, it returns the end game value. Otherwise,\n it'll return the midgame value.\n","sig":null,"attributes":[{"value":"/ Returns the value of a `Piece`. If `eg` is true, it returns the end game value. Otherwise,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368801,"byte_end":368895,"line_start":228,"line_end":228,"column_start":1,"column_end":95}},{"value":"/ it'll return the midgame value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368896,"byte_end":368931,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":368932,"byte_end":368949,"line_start":230,"line_end":230,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":369200,"byte_end":369215,"line_start":238,"line_end":238,"column_start":8,"column_end":23},"name":"piecetype_value","qualname":"::helper::prelude::piecetype_value","value":"pub fn piecetype_value(PieceType, bool) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of a `PieceType`. If `eg` is true, it returns the end game value. Otherwise,\n it'll return the midgame value.\n","sig":null,"attributes":[{"value":"/ Returns the value of a `PieceType`. If `eg` is true, it returns the end game value. Otherwise,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":369040,"byte_end":369138,"line_start":235,"line_end":235,"column_start":1,"column_end":99}},{"value":"/ it'll return the midgame value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":369139,"byte_end":369174,"line_start":236,"line_end":236,"column_start":1,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/prelude.rs","byte_start":369175,"byte_end":369192,"line_start":237,"line_end":237,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323589,"byte_end":323595,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Helper","qualname":"::helper::Helper","value":"Helper {  }","parent":null,"children":[],"decl_id":null,"docs":" Helper structure for accessing statically-initialized tables and other constants.","sig":null,"attributes":[{"value":"/ Helper structure for accessing statically-initialized tables and other constants.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323382,"byte_end":323467,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323468,"byte_end":323471,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Guarantees that the tables will be initialized upon access through a `Helper`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323472,"byte_end":323554,"line_start":27,"line_end":27,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324110,"byte_end":324113,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Helper>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Helper` Object, automatically initializing all the needed tables.","sig":null,"attributes":[{"value":"/ Creates a new `Helper` Object, automatically initializing all the needed tables.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323766,"byte_end":323850,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323855,"byte_end":323858,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method multiple times does not waste time computing the static variables if","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323863,"byte_end":323955,"line_start":44,"line_end":44,"column_start":5,"column_end":97}},{"value":"/ already initialized. [`init_statics`] also does the same thing as well.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323960,"byte_end":324035,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324040,"byte_end":324043,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`init_statics`]: prelude/fn.init_statics.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324048,"byte_end":324098,"line_start":47,"line_end":47,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324491,"byte_end":324503,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"bishop_moves","qualname":"<Helper>::bishop_moves","value":"pub fn bishop_moves(Self, BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Bishop Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Bishop Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324188,"byte_end":324284,"line_start":53,"line_end":53,"column_start":5,"column_end":101}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324289,"byte_end":324385,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324390,"byte_end":324457,"line_start":55,"line_end":55,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324462,"byte_end":324479,"line_start":56,"line_end":56,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324907,"byte_end":324917,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"rook_moves","qualname":"<Helper>::rook_moves","value":"pub fn rook_moves(Self, BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Rook Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Rook Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324606,"byte_end":324700,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324705,"byte_end":324801,"line_start":62,"line_end":62,"column_start":5,"column_end":101}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324806,"byte_end":324873,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":324878,"byte_end":324895,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325320,"byte_end":325331,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"queen_moves","qualname":"<Helper>::queen_moves","value":"pub fn queen_moves(Self, BitBoard, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Queen Moves `BitBoard` from a bishop square and all occupied squares on the board.\n This function will return captures to pieces on both sides. The resulting `BitBoard` must be\n AND'd with the inverse of the intending moving player's pieces.\n","sig":null,"attributes":[{"value":"/ Generate Queen Moves `BitBoard` from a bishop square and all occupied squares on the board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325018,"byte_end":325113,"line_start":69,"line_end":69,"column_start":5,"column_end":100}},{"value":"/ This function will return captures to pieces on both sides. The resulting `BitBoard` must be","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325118,"byte_end":325214,"line_start":70,"line_end":70,"column_start":5,"column_end":101}},{"value":"/ AND'd with the inverse of the intending moving player's pieces.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325219,"byte_end":325286,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325291,"byte_end":325308,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325525,"byte_end":325537,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"knight_moves","qualname":"<Helper>::knight_moves","value":"pub fn knight_moves(Self, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate Knight Moves `BitBoard` from a source square.\n","sig":null,"attributes":[{"value":"/ Generate Knight Moves `BitBoard` from a source square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325433,"byte_end":325491,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325496,"byte_end":325513,"line_start":78,"line_end":78,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325701,"byte_end":325711,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"king_moves","qualname":"<Helper>::king_moves","value":"pub fn king_moves(Self, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Generate King moves `BitBoard` from a source square.\n","sig":null,"attributes":[{"value":"/ Generate King moves `BitBoard` from a source square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325611,"byte_end":325667,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325672,"byte_end":325689,"line_start":84,"line_end":84,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325853,"byte_end":325868,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"distance_of_sqs","qualname":"<Helper>::distance_of_sqs","value":"pub fn distance_of_sqs(Self, SQ, SQ) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the distance of two squares.\n","sig":null,"attributes":[{"value":"/ Get the distance of two squares.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325783,"byte_end":325819,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325824,"byte_end":325841,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326099,"byte_end":326106,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"line_bb","qualname":"<Helper>::line_bb","value":"pub fn line_bb(Self, SQ, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Get the line (diagonal / file / rank) `BitBoard` that two squares both exist on, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the line (diagonal / file / rank) `BitBoard` that two squares both exist on, if it exists.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":325967,"byte_end":326065,"line_start":95,"line_end":95,"column_start":5,"column_end":103}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326070,"byte_end":326087,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326351,"byte_end":326361,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"between_bb","qualname":"<Helper>::between_bb","value":"pub fn between_bb(Self, SQ, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Get the line (diagonal / file / rank) `BitBoard` between two squares, not including the squares, if it exists.\n","sig":null,"attributes":[{"value":"/ Get the line (diagonal / file / rank) `BitBoard` between two squares, not including the squares, if it exists.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326203,"byte_end":326317,"line_start":101,"line_end":101,"column_start":5,"column_end":119}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326322,"byte_end":326339,"line_start":102,"line_end":102,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326547,"byte_end":326563,"line_start":109,"line_end":109,"column_start":12,"column_end":28},"name":"adjacent_sq_file","qualname":"<Helper>::adjacent_sq_file","value":"pub fn adjacent_sq_file(Self, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the adjacent files `BitBoard` of the square\n","sig":null,"attributes":[{"value":"/ Gets the adjacent files `BitBoard` of the square","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326461,"byte_end":326513,"line_start":107,"line_end":107,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326518,"byte_end":326535,"line_start":108,"line_end":108,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326725,"byte_end":326738,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"adjacent_file","qualname":"<Helper>::adjacent_file","value":"pub fn adjacent_file(Self, File) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Gets the adjacent files `BitBoard` of the file\n","sig":null,"attributes":[{"value":"/ Gets the adjacent files `BitBoard` of the file","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326641,"byte_end":326691,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326696,"byte_end":326713,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326995,"byte_end":327012,"line_start":122,"line_end":122,"column_start":12,"column_end":29},"name":"pawn_attacks_from","qualname":"<Helper>::pawn_attacks_from","value":"pub fn pawn_attacks_from(Self, SQ, Player) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Pawn attacks `BitBoard` from a given square, per player.\n Basically, given square x, returns the BitBoard of squares a pawn on x attacks.\n","sig":null,"attributes":[{"value":"/ Pawn attacks `BitBoard` from a given square, per player.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326813,"byte_end":326873,"line_start":119,"line_end":119,"column_start":5,"column_end":65}},{"value":"/ Basically, given square x, returns the BitBoard of squares a pawn on x attacks.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326878,"byte_end":326961,"line_start":120,"line_end":120,"column_start":5,"column_end":88}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":326966,"byte_end":326983,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327217,"byte_end":327224,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"aligned","qualname":"<Helper>::aligned","value":"pub fn aligned(Self, SQ, SQ, SQ) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if three Squares are in the same diagonal, file, or rank.\n","sig":null,"attributes":[{"value":"/ Returns if three Squares are in the same diagonal, file, or rank.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327114,"byte_end":327183,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327188,"byte_end":327205,"line_start":127,"line_end":127,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327523,"byte_end":327536,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"ring_distance","qualname":"<Helper>::ring_distance","value":"pub fn ring_distance(Self, SQ, u8) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the ring of bits surrounding the square sq at a specified distance.","sig":null,"attributes":[{"value":"/ Returns the ring of bits surrounding the square sq at a specified distance.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327311,"byte_end":327390,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327395,"byte_end":327398,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327403,"byte_end":327415,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327420,"byte_end":327423,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ distance must be less than 8, or else a panic will occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327428,"byte_end":327489,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327494,"byte_end":327511,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327746,"byte_end":327761,"line_start":144,"line_end":144,"column_start":12,"column_end":27},"name":"forward_rank_bb","qualname":"<Helper>::forward_rank_bb","value":"pub fn forward_rank_bb(Self, Player, Rank) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of all squares in the rank in front of the given one.\n","sig":null,"attributes":[{"value":"/ Returns the BitBoard of all squares in the rank in front of the given one.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327634,"byte_end":327712,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327717,"byte_end":327734,"line_start":143,"line_end":143,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328364,"byte_end":328381,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"pawn_attacks_span","qualname":"<Helper>::pawn_attacks_span","value":"pub fn pawn_attacks_span(Self, Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BitBoard` of all squares that can be attacked by a pawn\n of the same color when it moves along its file, starting from the\n given square. Basically, if the pawn progresses along the same file\n for the entire game, this bitboard would contain all possible forward squares\n it could attack","sig":null,"attributes":[{"value":"/ Returns the `BitBoard` of all squares that can be attacked by a pawn","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327867,"byte_end":327939,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ of the same color when it moves along its file, starting from the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":327944,"byte_end":328013,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ given square. Basically, if the pawn progresses along the same file","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328018,"byte_end":328089,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ for the entire game, this bitboard would contain all possible forward squares","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328094,"byte_end":328175,"line_start":151,"line_end":151,"column_start":5,"column_end":86}},{"value":"/ it could attack","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328180,"byte_end":328199,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328204,"byte_end":328207,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328212,"byte_end":328224,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328229,"byte_end":328232,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328237,"byte_end":328330,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328335,"byte_end":328352,"line_start":157,"line_end":157,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328726,"byte_end":328741,"line_start":168,"line_end":168,"column_start":12,"column_end":27},"name":"forward_file_bb","qualname":"<Helper>::forward_file_bb","value":"pub fn forward_file_bb(Self, Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns the BitBoard of all squares in the file in front of the given one.","sig":null,"attributes":[{"value":"/ Returns the BitBoard of all squares in the file in front of the given one.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328483,"byte_end":328561,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328566,"byte_end":328569,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328574,"byte_end":328586,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328591,"byte_end":328594,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328599,"byte_end":328692,"line_start":166,"line_end":166,"column_start":5,"column_end":98}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328697,"byte_end":328714,"line_start":167,"line_end":167,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329096,"byte_end":329112,"line_start":179,"line_end":179,"column_start":12,"column_end":28},"name":"passed_pawn_mask","qualname":"<Helper>::passed_pawn_mask","value":"pub fn passed_pawn_mask(Self, Player, SQ) -> BitBoard","parent":null,"children":[],"decl_id":null,"docs":" Returns a `BitBoard` allowing for testing of the a pawn being a\n \"passed pawn\".","sig":null,"attributes":[{"value":"/ Returns a `BitBoard` allowing for testing of the a pawn being a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328841,"byte_end":328908,"line_start":172,"line_end":172,"column_start":5,"column_end":72}},{"value":"/ \"passed pawn\".","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328913,"byte_end":328931,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328936,"byte_end":328939,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328944,"byte_end":328956,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328961,"byte_end":328964,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The Square must be within normal bounds, or else a panic or undefined behvaior may occur.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":328969,"byte_end":329062,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329067,"byte_end":329084,"line_start":178,"line_end":178,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329335,"byte_end":329343,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"z_square","qualname":"<Helper>::z_square","value":"pub fn z_square(Self, SQ, Piece) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the zobrist hash of a specific player's piece being at a particular square.\n","sig":null,"attributes":[{"value":"/ Returns the zobrist hash of a specific player's piece being at a particular square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329214,"byte_end":329301,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329306,"byte_end":329323,"line_start":184,"line_end":184,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329536,"byte_end":329540,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"z_ep","qualname":"<Helper>::z_ep","value":"pub fn z_ep(Self, SQ) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the zobrist hash of a given file having an en-passant square.\n","sig":null,"attributes":[{"value":"/ Returns the zobrist hash of a given file having an en-passant square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329429,"byte_end":329502,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329507,"byte_end":329524,"line_start":190,"line_end":190,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329710,"byte_end":329718,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"z_castle","qualname":"<Helper>::z_castle","value":"pub fn z_castle(Self, u8) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a zobrist hash of the castling rights, as defined by the Board.\n","sig":null,"attributes":[{"value":"/ Returns a zobrist hash of the castling rights, as defined by the Board.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329601,"byte_end":329676,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329681,"byte_end":329698,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329868,"byte_end":329874,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"z_side","qualname":"<Helper>::z_side","value":"pub fn z_side(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns Zobrist Hash of flipping sides.\n","sig":null,"attributes":[{"value":"/ Returns Zobrist Hash of flipping sides.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329791,"byte_end":329834,"line_start":201,"line_end":201,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329839,"byte_end":329856,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330033,"byte_end":330036,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"psq","qualname":"<Helper>::psq","value":"pub fn psq(Self, Piece, SQ) -> Score","parent":null,"children":[],"decl_id":null,"docs":" Returns the score for a player's piece being at a particular square.\n","sig":null,"attributes":[{"value":"/ Returns the score for a player's piece being at a particular square.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":329927,"byte_end":329999,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330004,"byte_end":330021,"line_start":208,"line_end":208,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330299,"byte_end":330310,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"piece_value","qualname":"<Helper>::piece_value","value":"pub fn piece_value(Self, Piece, bool) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of a piece for a player. If `eg` is true, it returns the end game value. Otherwise,\n it'll return the midgame value.\n","sig":null,"attributes":[{"value":"/ Returns the value of a piece for a player. If `eg` is true, it returns the end game value. Otherwise,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330120,"byte_end":330225,"line_start":213,"line_end":213,"column_start":5,"column_end":110}},{"value":"/ it'll return the midgame value.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330230,"byte_end":330265,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":330270,"byte_end":330287,"line_start":215,"line_end":215,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tools","qualname":"::tools","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2188},{"krate":0,"index":2270},{"krate":0,"index":2359},{"krate":0,"index":2433},{"krate":0,"index":2436},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2452}],"decl_id":null,"docs":" Miscellaneous tools for used for Searching. Most notably this module\n contains the `TranspositionTable`, a fast lookup table able to be accessed by\n multiple threads. Other useful objects are the `UciLimit` enum and `Searcher` trait\n for building bots.\n","sig":null,"attributes":[{"value":"/ Miscellaneous tools for used for Searching. Most notably this module","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369595,"byte_end":369667,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ contains the `TranspositionTable`, a fast lookup table able to be accessed by","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369668,"byte_end":369749,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ multiple threads. Other useful objects are the `UciLimit` enum and `Searcher` trait","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369750,"byte_end":369837,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ for building bots.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369838,"byte_end":369860,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prng","qualname":"::tools::prng","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2180}],"decl_id":null,"docs":" Contains the Pseudo-random number generator. Used for generating random `Board`s and\n `BitBoard`s.\n","sig":null,"attributes":[{"value":"/ Contains the Pseudo-random number generator. Used for generating random `Board`s and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373395,"byte_end":373483,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/ `BitBoard`s.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373484,"byte_end":373500,"line_start":2,"line_end":2,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373588,"byte_end":373592,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"PRNG","qualname":"::tools::prng::PRNG","value":"PRNG {  }","parent":null,"children":[{"krate":0,"index":2179}],"decl_id":null,"docs":" Object for generating pseudo-random numbers.\n","sig":null,"attributes":[{"value":"/ Object for generating pseudo-random numbers.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373528,"byte_end":373576,"line_start":6,"line_end":6,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373772,"byte_end":373776,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"init","qualname":"<PRNG>::init","value":"pub fn init(u64) -> PRNG","parent":null,"children":[],"decl_id":null,"docs":" Creates PRNG from a seed.","sig":null,"attributes":[{"value":"/ Creates PRNG from a seed.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373629,"byte_end":373658,"line_start":12,"line_end":12,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373663,"byte_end":373666,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373671,"byte_end":373683,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373688,"byte_end":373691,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Undefined behavior if the seed is zero","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373696,"byte_end":373738,"line_start":16,"line_end":16,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373743,"byte_end":373760,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373902,"byte_end":373906,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"rand","qualname":"<PRNG>::rand","value":"pub fn rand(&mut Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a pseudo-random number.\n","sig":null,"attributes":[{"value":"/ Returns a pseudo-random number.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373831,"byte_end":373866,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"allow(dead_code)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373871,"byte_end":373890,"line_start":23,"line_end":23,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":374045,"byte_end":374056,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"sparse_rand","qualname":"<PRNG>::sparse_rand","value":"pub fn sparse_rand(&mut Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a pseudo-random number with on average 8 bits being set.\n","sig":null,"attributes":[{"value":"/ Returns a pseudo-random number with on average 8 bits being set.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373965,"byte_end":374033,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":374280,"byte_end":374292,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"singular_bit","qualname":"<PRNG>::singular_bit","value":"pub fn singular_bit(&mut Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a u64 with exactly one bit set in a random location.\n","sig":null,"attributes":[{"value":"/ Returns a u64 with exactly one bit set in a random location.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":374204,"byte_end":374268,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"eval","qualname":"::tools::eval","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2192},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3284},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2216},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266}],"decl_id":null,"docs":" Module for simply evaluating the strength of a current position.","sig":null,"attributes":[{"value":"/ Module for simply evaluating the strength of a current position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":375811,"byte_end":375879,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":375880,"byte_end":375883,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a VERY basic evaluation, and while decent, it certainly isn't anything exceptional.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":375884,"byte_end":375979,"line_start":3,"line_end":3,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":376154,"byte_end":376162,"line_start":14,"line_end":14,"column_start":20,"column_end":28},"name":"PAWN_POS","qualname":"::tools::eval::PAWN_POS","value":"PAWN_POS {  }","parent":null,"children":[{"krate":0,"index":3269}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526721,"byte_end":11526759,"line_start":155,"line_end":155,"column_start":9,"column_end":47}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526768,"byte_end":11526798,"line_start":156,"line_end":156,"column_start":9,"column_end":39}},{"value":"allow(dead_code)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","byte_start":11526807,"byte_end":11526826,"line_start":157,"line_end":157,"column_start":9,"column_end":28}}]},{"kind":"Static","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":376154,"byte_end":376162,"line_start":14,"line_end":14,"column_start":20,"column_end":28},"name":"PAWN_POS","qualname":"::tools::eval::PAWN_POS","value":"PAWN_POS","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377507,"byte_end":377511,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"Eval","qualname":"::tools::eval::Eval","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple evaluation structure. This is included as an example, and shouldn't\n neccessarily be used inside serious chess engines.","sig":null,"attributes":[{"value":"/ A simple evaluation structure. This is included as an example, and shouldn't","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377170,"byte_end":377250,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ neccessarily be used inside serious chess engines.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377251,"byte_end":377305,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377306,"byte_end":377309,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377310,"byte_end":377317,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use pleco::tools::eval::Eval;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377318,"byte_end":377351,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ use pleco::Board;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377352,"byte_end":377373,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377374,"byte_end":377377,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let board = Board::start_pos();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377378,"byte_end":377413,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ let score = Eval::eval_low(&board);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377414,"byte_end":377453,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/ println!(\"Score: {}\", score);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377454,"byte_end":377487,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":377488,"byte_end":377495,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":378259,"byte_end":378269,"line_start":84,"line_end":84,"column_start":11,"column_end":21},"name":"PIECE_VALS","qualname":"::tools::eval::PIECE_VALS","value":"[i32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":378512,"byte_end":378520,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"eval_low","qualname":"<Eval>::eval_low","value":"pub fn eval_low(&Board) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the score of a `Board` for the current side to move.\n","sig":null,"attributes":[{"value":"/ Evaluates the score of a `Board` for the current side to move.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":378434,"byte_end":378500,"line_start":98,"line_end":98,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tt","qualname":"::tools::tt","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":3289},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":2309},{"krate":0,"index":3323},{"krate":0,"index":3330},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":2313},{"krate":0,"index":2319},{"krate":0,"index":2324},{"krate":0,"index":2328},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2358}],"decl_id":null,"docs":" Module for the `TranspositionTable`, a type of hash-map where Zobrist Keys map to information about a position.","sig":null,"attributes":[{"value":"/ Module for the `TranspositionTable`, a type of hash-map where Zobrist Keys map to information about a position.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382368,"byte_end":382483,"line_start":1,"line_end":1,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382484,"byte_end":382487,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`TranspositionTable`] is a structure to quickly lookup chess positions and determine information from them.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382488,"byte_end":382602,"line_start":3,"line_end":3,"column_start":1,"column_end":115}},{"value":"/ It maps from Board positions to information such as the evaluation of that position, the best move found so far,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382603,"byte_end":382719,"line_start":4,"line_end":4,"column_start":1,"column_end":117}},{"value":"/ the depth that move was found at, etc.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382720,"byte_end":382762,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382763,"byte_end":382766,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Specifically, a [`TranspositionTable`] maps from a u64 to an [`Entry`].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382767,"byte_end":382842,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382843,"byte_end":382846,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is a lock-free table, able to be concurrently accessed by multiple threads quickly. However, there is still","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382847,"byte_end":382963,"line_start":9,"line_end":9,"column_start":1,"column_end":117}},{"value":"/ a risk of collisions & over-writes when using this with multiple threads. Furthermore, Keys (generated by a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":382964,"byte_end":383075,"line_start":10,"line_end":10,"column_start":1,"column_end":112}},{"value":"/ zobrist hash) are not guaranteed to uniquely map to a specific chess position, and unique keys are not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383076,"byte_end":383182,"line_start":11,"line_end":11,"column_start":1,"column_end":107}},{"value":"/ guaranteed to map to unique buckets inside the table.  The chances of collision are extremely","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383183,"byte_end":383280,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ low, but it's still something to take into account when using the transposition table.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383281,"byte_end":383371,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383372,"byte_end":383375,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383376,"byte_end":383390,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383391,"byte_end":383394,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Here, we create a new [`TranspositionTable`] with 4,000 entries, and search for a key. Because this table is empty,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383395,"byte_end":383514,"line_start":17,"line_end":17,"column_start":1,"column_end":120}},{"value":"/ found should return false. Now, we insert the data for an [`Entry`], and then search again for the key. Now, found","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383515,"byte_end":383633,"line_start":18,"line_end":18,"column_start":1,"column_end":119}},{"value":"/ will be true, and we'll end up with the data we entered.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383634,"byte_end":383694,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383695,"byte_end":383698,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383699,"byte_end":383712,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ let tt = TranspositionTable::new_num_entries(40000);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383713,"byte_end":383769,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ let prng = PRNG::init(932445561);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383770,"byte_end":383807,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383808,"byte_end":383811,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let key: u64 = prng.rand();","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383812,"byte_end":383843,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ let (found, entry): (bool, &mut Entry) = tt.probe(key);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383844,"byte_end":383903,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ assert!(!found);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383904,"byte_end":383924,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ entry.place(key, BitMove::new(0x555), 3, 4, 3, NodeBound::Exact);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383925,"byte_end":383994,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ let (found, entry) = tt.probe(key);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":383995,"byte_end":384034,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert!(found);","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384035,"byte_end":384054,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384055,"byte_end":384062,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384063,"byte_end":384066,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`TranspositionTable`]: ../../tools/tt/struct.TranspositionTable.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384067,"byte_end":384140,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ [`Entry`]: ../../tools/tt/struct.Entry.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384141,"byte_end":384188,"line_start":34,"line_end":34,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384562,"byte_end":384565,"line_start":49,"line_end":49,"column_start":10,"column_end":13},"name":"Key","qualname":"::tools::tt::Key","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384637,"byte_end":384646,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"TIME_MASK","qualname":"::tools::tt::TIME_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" BitMask for the [NodeTypeTimeBound]'s time data.\n","sig":null,"attributes":[{"value":"/ BitMask for the [NodeTypeTimeBound]'s time data.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384574,"byte_end":384626,"line_start":51,"line_end":51,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384744,"byte_end":384758,"line_start":55,"line_end":55,"column_start":11,"column_end":25},"name":"NODE_TYPE_MASK","qualname":"::tools::tt::NODE_TYPE_MASK","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" BitMask for the retrieving a [NodeTypeTimeBound]'s [NodeType].\n","sig":null,"attributes":[{"value":"/ BitMask for the retrieving a [NodeTypeTimeBound]'s [NodeType].","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384667,"byte_end":384733,"line_start":54,"line_end":54,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384824,"byte_end":384836,"line_start":58,"line_end":58,"column_start":11,"column_end":23},"name":"CLUSTER_SIZE","qualname":"::tools::tt::CLUSTER_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Number of Entries per Cluster.\n","sig":null,"attributes":[{"value":"/ Number of Entries per Cluster.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384779,"byte_end":384813,"line_start":57,"line_end":57,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385252,"byte_end":385259,"line_start":70,"line_end":70,"column_start":5,"column_end":12},"name":"NoBound","qualname":"::tools::tt::NodeBound::NoBound","value":"NodeBound::NoBound","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385269,"byte_end":385279,"line_start":71,"line_end":71,"column_start":5,"column_end":15},"name":"LowerBound","qualname":"::tools::tt::NodeBound::LowerBound","value":"NodeBound::LowerBound","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385289,"byte_end":385299,"line_start":72,"line_end":72,"column_start":5,"column_end":15},"name":"UpperBound","qualname":"::tools::tt::NodeBound::UpperBound","value":"NodeBound::UpperBound","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385309,"byte_end":385314,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"Exact","qualname":"::tools::tt::NodeBound::Exact","value":"NodeBound::Exact","parent":{"krate":0,"index":3289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385236,"byte_end":385245,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"name":"NodeBound","qualname":"::tools::tt::NodeBound","value":"pub enum NodeBound { NoBound = , LowerBound = , UpperBound = , Exact = , }","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3299}],"decl_id":null,"docs":" Designates the type of Node in the Chess Search tree.\n See the [ChessWiki](https://chessprogramming.wikispaces.com/Node+Types) for more information\n about PV Node types and their use.\n","sig":null,"attributes":[{"value":"/ Designates the type of Node in the Chess Search tree.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":384983,"byte_end":385040,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/ See the [ChessWiki](https://chessprogramming.wikispaces.com/Node+Types) for more information","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385041,"byte_end":385137,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"/ about PV Node types and their use.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385138,"byte_end":385176,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"repr(u8)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385215,"byte_end":385226,"line_start":68,"line_end":68,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3311},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385456,"byte_end":385473,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"NodeTypeTimeBound","qualname":"::tools::tt::NodeTypeTimeBound","value":"NodeTypeTimeBound {  }","parent":null,"children":[{"krate":0,"index":3312}],"decl_id":null,"docs":" Abstraction for combining the 'time' a node was found alongside the `NodeType`.\n","sig":null,"attributes":[{"value":"/ Abstraction for combining the 'time' a node was found alongside the `NodeType`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385323,"byte_end":385406,"line_start":76,"line_end":76,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385718,"byte_end":385724,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"create","qualname":"<NodeTypeTimeBound>::create","value":"pub fn create(NodeBound, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a NodeTypeTimeBound with the designated node_type and time.","sig":null,"attributes":[{"value":"/ Creates a NodeTypeTimeBound with the designated node_type and time.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385521,"byte_end":385592,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385597,"byte_end":385600,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385605,"byte_end":385616,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385621,"byte_end":385624,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ time_bound must be divisible by 8 or else Undefined behavior will follow.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385629,"byte_end":385706,"line_start":87,"line_end":87,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385922,"byte_end":385934,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"update_bound","qualname":"<NodeTypeTimeBound>::update_bound","value":"pub fn update_bound(&mut Self, NodeBound, u8)","parent":null,"children":[],"decl_id":null,"docs":" Updates the [NodeType] of an entry.\n","sig":null,"attributes":[{"value":"/ Updates the [NodeType] of an entry.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385871,"byte_end":385910,"line_start":94,"line_end":94,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386110,"byte_end":386121,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"update_time","qualname":"<NodeTypeTimeBound>::update_time","value":"pub fn update_time(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Updates the time field of an entry.\n","sig":null,"attributes":[{"value":"/ Updates the time field of an entry.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386059,"byte_end":386098,"line_start":99,"line_end":99,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3323},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386526,"byte_end":386531,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"Entry","qualname":"::tools::tt::Entry","value":"Entry { partial_key, best_move, score, eval, depth, time_node_bound }","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"decl_id":null,"docs":" Structure defining a singular Entry in a table, containing the `BestMove` found,\n the score of that node, the type of Node, depth found, as well as a key uniquely defining\n the node.\n","sig":null,"attributes":[{"value":"/ Structure defining a singular Entry in a table, containing the `BestMove` found,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386284,"byte_end":386368,"line_start":109,"line_end":109,"column_start":1,"column_end":85}},{"value":"/ the score of that node, the type of Node, depth found, as well as a key uniquely defining","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386369,"byte_end":386462,"line_start":110,"line_end":110,"column_start":1,"column_end":94}},{"value":"/ the node.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386463,"byte_end":386476,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"repr(C)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386504,"byte_end":386514,"line_start":113,"line_end":113,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386542,"byte_end":386553,"line_start":115,"line_end":115,"column_start":9,"column_end":20},"name":"partial_key","qualname":"::tools::tt::Entry::partial_key","value":"u16","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3325},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386568,"byte_end":386577,"line_start":116,"line_end":116,"column_start":9,"column_end":18},"name":"best_move","qualname":"::tools::tt::Entry::best_move","value":"core::piece_move::BitMove","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3326},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386634,"byte_end":386639,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"score","qualname":"::tools::tt::Entry::score","value":"i16","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3327},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386690,"byte_end":386694,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"eval","qualname":"::tools::tt::Entry::eval","value":"i16","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386748,"byte_end":386753,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"depth","qualname":"::tools::tt::Entry::depth","value":"i8","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3329},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386801,"byte_end":386816,"line_start":120,"line_end":120,"column_start":9,"column_end":24},"name":"time_node_bound","qualname":"::tools::tt::Entry::time_node_bound","value":"tools::tt::NodeTypeTimeBound","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386865,"byte_end":386873,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Entry>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":387013,"byte_end":387018,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"place","qualname":"<Entry>::place","value":"pub fn place(&mut Self, Key, BitMove, i16, i16, i16, NodeBound, u8)","parent":null,"children":[],"decl_id":null,"docs":" Rewrites over an Entry.\n","sig":null,"attributes":[{"value":"/ Rewrites over an Entry.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386974,"byte_end":387001,"line_start":129,"line_end":129,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":387691,"byte_end":387695,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"time","qualname":"<Entry>::time","value":"pub fn time(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the current search time of the node.\n","sig":null,"attributes":[{"value":"/ Returns the current search time of the node.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":387631,"byte_end":387679,"line_start":147,"line_end":147,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":387819,"byte_end":387828,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"node_type","qualname":"<Entry>::node_type","value":"pub fn node_type(&Self) -> NodeBound","parent":null,"children":[],"decl_id":null,"docs":" Returns the [NodeType] of an Entry.\n","sig":null,"attributes":[{"value":"/ Returns the [NodeType] of an Entry.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":387768,"byte_end":387807,"line_start":152,"line_end":152,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388212,"byte_end":388222,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"time_value","qualname":"<Entry>::time_value","value":"pub fn time_value(&Self, u8) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the node in respect to the depth searched && when it was placed into the TranspositionTable.\n","sig":null,"attributes":[{"value":"/ Returns the value of the node in respect to the depth searched && when it was placed into the TranspositionTable.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388083,"byte_end":388200,"line_start":162,"line_end":162,"column_start":5,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388587,"byte_end":388594,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"Cluster","qualname":"::tools::tt::Cluster","value":"Cluster { entry, padding }","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2322}],"decl_id":null,"docs":" Structure containing multiple Entries all mapped to by the same zobrist key.\n","sig":null,"attributes":[{"value":"/ Structure containing multiple Entries all mapped to by the same zobrist key.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388484,"byte_end":388564,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"repr(C)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388565,"byte_end":388575,"line_start":172,"line_end":172,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388605,"byte_end":388610,"line_start":174,"line_end":174,"column_start":9,"column_end":14},"name":"entry","qualname":"::tools::tt::Cluster::entry","value":"[tools::tt::Entry; _]","parent":{"krate":0,"index":2319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388643,"byte_end":388650,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"name":"padding","qualname":"::tools::tt::Cluster::padding","value":"[u8; 2]","parent":{"krate":0,"index":2319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389095,"byte_end":389113,"line_start":185,"line_end":185,"column_start":12,"column_end":30},"name":"TranspositionTable","qualname":"::tools::tt::TranspositionTable","value":"TranspositionTable {  }","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"decl_id":null,"docs":" Structure for representing a `TranspositionTable`. A Transposition Table is a type\n of HashTable that maps Zobrist Keys to information about that position, including the best move\n found, score, depth the move was found at, and other information.\n","sig":null,"attributes":[{"value":"/ Structure for representing a `TranspositionTable`. A Transposition Table is a type","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388827,"byte_end":388913,"line_start":182,"line_end":182,"column_start":1,"column_end":87}},{"value":"/ of HashTable that maps Zobrist Keys to information about that position, including the best move","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":388914,"byte_end":389013,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ found, score, depth the move was found at, and other information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389014,"byte_end":389083,"line_start":184,"line_end":184,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389408,"byte_end":389419,"line_start":192,"line_end":192,"column_start":15,"column_end":26},"name":"MAX_SIZE_MB","qualname":"::tools::tt::TranspositionTable::MAX_SIZE_MB","value":"usize","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389681,"byte_end":389684,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TranspositionTable>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new with a size of around 'mb_size'. Actual size is the nearest power\n of 2 times the size of a Cluster rounded down.","sig":null,"attributes":[{"value":"/ Creates new with a size of around 'mb_size'. Actual size is the nearest power","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389442,"byte_end":389523,"line_start":194,"line_end":194,"column_start":5,"column_end":86}},{"value":"/ of 2 times the size of a Cluster rounded down.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389528,"byte_end":389578,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389583,"byte_end":389586,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389591,"byte_end":389603,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389608,"byte_end":389611,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ mb_size should be > 0, or else a panic will occur","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389616,"byte_end":389669,"line_start":199,"line_end":199,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390147,"byte_end":390162,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"new_num_entries","qualname":"<TranspositionTable>::new_num_entries","value":"pub fn new_num_entries(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new TT rounded up to the nearest power of two number of entries.","sig":null,"attributes":[{"value":"/ Creates new TT rounded up to the nearest power of two number of entries.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389964,"byte_end":390040,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390045,"byte_end":390048,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390053,"byte_end":390065,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390070,"byte_end":390073,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ num_entries should be > 0, or else a panic will occur","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390078,"byte_end":390135,"line_start":211,"line_end":211,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390454,"byte_end":390470,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"new_num_clusters","qualname":"<TranspositionTable>::new_num_clusters","value":"pub fn new_num_clusters(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new TT rounded up to the nearest power of two number of Clusters.","sig":null,"attributes":[{"value":"/ Creates new TT rounded up to the nearest power of two number of Clusters.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390277,"byte_end":390354,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390359,"byte_end":390362,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390367,"byte_end":390379,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390384,"byte_end":390387,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Size should be > 0, or else a panic will occur","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390392,"byte_end":390442,"line_start":220,"line_end":220,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":390978,"byte_end":390996,"line_start":236,"line_end":236,"column_start":19,"column_end":37},"name":"uninitialized_init","qualname":"<TranspositionTable>::uninitialized_init","value":"pub unsafe fn uninitialized_init(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391331,"byte_end":391345,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"name":"size_kilobytes","qualname":"<TranspositionTable>::size_kilobytes","value":"pub fn size_kilobytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the heap allocated portion of the TT in KiloBytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of the heap allocated portion of the TT in KiloBytes.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391223,"byte_end":391297,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391302,"byte_end":391319,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391556,"byte_end":391570,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"size_megabytes","qualname":"<TranspositionTable>::size_megabytes","value":"pub fn size_megabytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the heap allocated portion of the TT in MegaBytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of the heap allocated portion of the TT in MegaBytes.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391448,"byte_end":391522,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391527,"byte_end":391544,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391781,"byte_end":391795,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"size_gigabytes","qualname":"<TranspositionTable>::size_gigabytes","value":"pub fn size_gigabytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the heap allocated portion of the TT in GigaBytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of the heap allocated portion of the TT in GigaBytes.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391673,"byte_end":391747,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391752,"byte_end":391769,"line_start":255,"line_end":255,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391998,"byte_end":392010,"line_start":263,"line_end":263,"column_start":12,"column_end":24},"name":"num_clusters","qualname":"<TranspositionTable>::num_clusters","value":"pub fn num_clusters(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of clusters the Transposition Table holds.\n","sig":null,"attributes":[{"value":"/ Returns the number of clusters the Transposition Table holds.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391899,"byte_end":391964,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":391969,"byte_end":391986,"line_start":262,"line_end":262,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392193,"byte_end":392204,"line_start":271,"line_end":271,"column_start":12,"column_end":23},"name":"num_entries","qualname":"<TranspositionTable>::num_entries","value":"pub fn num_entries(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of Entries the Transposition Table holds.\n","sig":null,"attributes":[{"value":"/ Returns the number of Entries the Transposition Table holds.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392095,"byte_end":392159,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392164,"byte_end":392181,"line_start":270,"line_end":270,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392705,"byte_end":392720,"line_start":286,"line_end":286,"column_start":19,"column_end":34},"name":"resize_round_up","qualname":"<TranspositionTable>::resize_round_up","value":"pub unsafe fn resize_round_up(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Re-sizes to 'size' number of Clusters and deletes all data","sig":null,"attributes":[{"value":"/ Re-sizes to 'size' number of Clusters and deletes all data","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392277,"byte_end":392339,"line_start":275,"line_end":275,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392344,"byte_end":392347,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392352,"byte_end":392363,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392368,"byte_end":392371,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ size must be greater then 0","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392376,"byte_end":392407,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392412,"byte_end":392415,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392420,"byte_end":392432,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392437,"byte_end":392440,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is function is unsafe to use if the TT is currently being accessed, Or any thread of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392445,"byte_end":392538,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/ structure contains a current reference to a `TTEntry`. Otherwise, using this function will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392543,"byte_end":392637,"line_start":284,"line_end":284,"column_start":5,"column_end":99}},{"value":"/ absolutely lead to a Segmentation Fault.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392642,"byte_end":392686,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393301,"byte_end":393320,"line_start":302,"line_end":302,"column_start":19,"column_end":38},"name":"resize_to_megabytes","qualname":"<TranspositionTable>::resize_to_megabytes","value":"pub unsafe fn resize_to_megabytes(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Re-sizes to the the mb_size number of megabytes, rounded down for power of 2\n number of clusters. Returns the actual size.","sig":null,"attributes":[{"value":"/ Re-sizes to the the mb_size number of megabytes, rounded down for power of 2","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392801,"byte_end":392881,"line_start":290,"line_end":290,"column_start":5,"column_end":85}},{"value":"/ number of clusters. Returns the actual size.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392886,"byte_end":392934,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392939,"byte_end":392942,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392947,"byte_end":392958,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392963,"byte_end":392966,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ mb_size must be greater then 0","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":392971,"byte_end":393005,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393010,"byte_end":393013,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393018,"byte_end":393030,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393035,"byte_end":393038,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This is function is unsafe to use if the TT is currently being accessed, Or any thread of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393043,"byte_end":393136,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ structure contains a current reference to a `TTEntry`. Otherwise, using this function will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393141,"byte_end":393235,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ absolutely lead to Segmentation Fault.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393240,"byte_end":393282,"line_start":301,"line_end":301,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394194,"byte_end":394199,"line_start":326,"line_end":326,"column_start":19,"column_end":24},"name":"clear","qualname":"<TranspositionTable>::clear","value":"pub unsafe fn clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire TranspositionTable","sig":null,"attributes":[{"value":"/ Clears the entire TranspositionTable","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393856,"byte_end":393896,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393901,"byte_end":393904,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393909,"byte_end":393921,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393926,"byte_end":393929,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This is function is unsafe to use if the TT is currently being accessed, Or any thread of","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":393934,"byte_end":394027,"line_start":323,"line_end":323,"column_start":5,"column_end":98}},{"value":"/ structure contains a current reference to a `TTEntry`. Otherwise, using this function will","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394032,"byte_end":394126,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/ absolutely lead to a Segmentation Fault.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394131,"byte_end":394175,"line_start":325,"line_end":325,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394356,"byte_end":394366,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"new_search","qualname":"<TranspositionTable>::new_search","value":"pub fn new_search(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394335,"byte_end":394344,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394561,"byte_end":394569,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"time_age","qualname":"<TranspositionTable>::time_age","value":"pub fn time_age(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the current time age of a TT.\n","sig":null,"attributes":[{"value":"/ Returns the current time age of a TT.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394494,"byte_end":394535,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394540,"byte_end":394549,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394815,"byte_end":394830,"line_start":351,"line_end":351,"column_start":12,"column_end":27},"name":"time_age_cylces","qualname":"<TranspositionTable>::time_age_cylces","value":"pub fn time_age_cylces(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of cycles a TT has gone through. Cycles is simply the\n number of times refresh has been called.\n","sig":null,"attributes":[{"value":"/ Returns the current number of cycles a TT has gone through. Cycles is simply the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394656,"byte_end":394740,"line_start":348,"line_end":348,"column_start":5,"column_end":89}},{"value":"/ number of times refresh has been called.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394745,"byte_end":394789,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394794,"byte_end":394803,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395540,"byte_end":395545,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"probe","qualname":"<TranspositionTable>::probe","value":"pub fn probe(&Self, Key) -> (bool, &mut Entry)","parent":null,"children":[],"decl_id":null,"docs":" Probes the Transposition Table for a specified Key. Returns (true, entry) if either (1) an\n Entry corresponding to the current key is found, or an Open Entry slot is found for the key.\n In the case of an open Entry, the entry can be tested for its contents by using `Entry::is_empty()`.\n If no entry is found && there are no open entries, returns the entry that is is most irrelevent to\n the current search, e.g. has the shallowest depth or was found in a previous search.","sig":null,"attributes":[{"value":"/ Probes the Transposition Table for a specified Key. Returns (true, entry) if either (1) an","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":394935,"byte_end":395029,"line_start":357,"line_end":357,"column_start":5,"column_end":99}},{"value":"/ Entry corresponding to the current key is found, or an Open Entry slot is found for the key.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395034,"byte_end":395130,"line_start":358,"line_end":358,"column_start":5,"column_end":101}},{"value":"/ In the case of an open Entry, the entry can be tested for its contents by using `Entry::is_empty()`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395135,"byte_end":395239,"line_start":359,"line_end":359,"column_start":5,"column_end":109}},{"value":"/ If no entry is found && there are no open entries, returns the entry that is is most irrelevent to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395244,"byte_end":395346,"line_start":360,"line_end":360,"column_start":5,"column_end":107}},{"value":"/ the current search, e.g. has the shallowest depth or was found in a previous search.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395351,"byte_end":395439,"line_start":361,"line_end":361,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395444,"byte_end":395447,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If 'true' is returned, the Entry is guaranteed to have the correct time.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":395452,"byte_end":395528,"line_start":363,"line_end":363,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":398173,"byte_end":398185,"line_start":432,"line_end":432,"column_start":12,"column_end":24},"name":"hash_percent","qualname":"<TranspositionTable>::hash_percent","value":"pub fn hash_percent(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Returns the % of the hash table that is full.\n","sig":null,"attributes":[{"value":"/ Returns the % of the hash table that is full.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":398112,"byte_end":398161,"line_start":431,"line_end":431,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pleco_arc","qualname":"::tools::pleco_arc","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2387},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2399},{"krate":0,"index":2403},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2423},{"krate":0,"index":2427},{"krate":0,"index":2430}],"decl_id":null,"docs":" A faster version of `std::sync::Arc`.","sig":null,"attributes":[{"value":"/ A faster version of `std::sync::Arc`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404575,"byte_end":404616,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404617,"byte_end":404620,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is mostly copied from [servo_arc](https://doc.servo.org/servo_arc/index.html), so see","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404621,"byte_end":404715,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ that documentation for more information.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404716,"byte_end":404760,"line_start":4,"line_end":4,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404977,"byte_end":404985,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ArcInner","qualname":"::tools::pleco_arc::ArcInner","value":"ArcInner {  }","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386}],"decl_id":null,"docs":" The Inner structure of an `Arc`.\n","sig":null,"attributes":[{"value":"/ The Inner structure of an `Arc`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":404929,"byte_end":404965,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405197,"byte_end":405206,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"UniqueArc","qualname":"::tools::pleco_arc::UniqueArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An `Arc` that ensures a single reference to it. Allows for modification to the\n state inside, and also transformation into an `Arc`.\n","sig":null,"attributes":[{"value":"/ An `Arc` that ensures a single reference to it. Allows for modification to the","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405046,"byte_end":405128,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/ state inside, and also transformation into an `Arc`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405129,"byte_end":405185,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405433,"byte_end":405436,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueArc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new UniqueArc\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405378,"byte_end":405387,"line_start":26,"line_end":26,"column_start":5,"column_end":14}},{"value":"/ Construct a new UniqueArc","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405392,"byte_end":405421,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405585,"byte_end":405594,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"shareable","qualname":"<UniqueArc<T>>::shareable","value":"pub fn shareable(Self) -> Arc<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert to a shareable Arc<T> once we're done using it\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405501,"byte_end":405510,"line_start":32,"line_end":32,"column_start":5,"column_end":14}},{"value":"/ Convert to a shareable Arc<T> once we're done using it","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405515,"byte_end":405573,"line_start":33,"line_end":33,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405989,"byte_end":405992,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"Arc","qualname":"::tools::pleco_arc::Arc","value":"Arc {  }","parent":null,"children":[{"krate":0,"index":2408}],"decl_id":null,"docs":" Reference counting pointer, sharable between threads.\n","sig":null,"attributes":[{"value":"/ Reference counting pointer, sharable between threads.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405920,"byte_end":405977,"line_start":53,"line_end":53,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406222,"byte_end":406225,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Arc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Arc`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Arc`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406172,"byte_end":406196,"line_start":63,"line_end":63,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406201,"byte_end":406210,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407138,"byte_end":407145,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Arc<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a `& mut T` of the inner value if there is only one reference.\n","sig":null,"attributes":[{"value":"/ Gets a `& mut T` of the inner value if there is only one reference.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407041,"byte_end":407112,"line_start":95,"line_end":95,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407117,"byte_end":407126,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407511,"byte_end":407520,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"is_unique","qualname":"<Arc<T>>::is_unique","value":"pub fn is_unique(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Allows for determining if the reference count is zero.\n","sig":null,"attributes":[{"value":"/ Allows for determining if the reference count is zero.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407427,"byte_end":407485,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":407490,"byte_end":407499,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370026,"byte_end":370034,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"Searcher","qualname":"::tools::Searcher","value":"Searcher","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"decl_id":null,"docs":" Defines an object that can play chess.\n","sig":null,"attributes":[{"value":"/ Defines an object that can play chess.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369973,"byte_end":370015,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370086,"byte_end":370090,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"name","qualname":"::tools::Searcher::name","value":"pub fn name() -> &'static str where Self: Sized","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" Returns the name of the searcher.\n","sig":null,"attributes":[{"value":"/ Returns the name of the searcher.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370041,"byte_end":370078,"line_start":17,"line_end":17,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370203,"byte_end":370212,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"best_move","qualname":"::tools::Searcher::best_move","value":"pub fn best_move(Board, u16) -> BitMove where Self: Sized","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":" Returns the BestMove of a position from a search of depth.\n","sig":null,"attributes":[{"value":"/ Returns the BestMove of a position from a search of depth.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370133,"byte_end":370195,"line_start":20,"line_end":20,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370426,"byte_end":370438,"line_start":28,"line_end":28,"column_start":11,"column_end":23},"name":"PreFetchable","qualname":"::tools::PreFetchable","value":"PreFetchable","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444}],"decl_id":null,"docs":" Allows an object to have it's entries pre-fetchable.\n","sig":null,"attributes":[{"value":"/ Allows an object to have it's entries pre-fetchable.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370359,"byte_end":370415,"line_start":27,"line_end":27,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370543,"byte_end":370551,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"prefetch","qualname":"::tools::PreFetchable::prefetch","value":"pub fn prefetch(&Self, u64)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":" Pre-fetches a particular key. This means bringing it into the cache for faster access.\n","sig":null,"attributes":[{"value":"/ Pre-fetches a particular key. This means bringing it into the cache for faster access.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370445,"byte_end":370535,"line_start":29,"line_end":29,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370640,"byte_end":370649,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"prefetch2","qualname":"::tools::PreFetchable::prefetch2","value":"pub fn prefetch2(&Self, u64)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":" Pre-fetches a particular key, alongside the next key.\n","sig":null,"attributes":[{"value":"/ Pre-fetches a particular key, alongside the next key.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370575,"byte_end":370632,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":371133,"byte_end":371147,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"prefetch_write","qualname":"::tools::prefetch_write","value":"pub fn prefetch_write<T>(*const T)","parent":null,"children":[],"decl_id":null,"docs":" Prefetch's `ptr` to all levels of the cache.","sig":null,"attributes":[{"value":"/ Prefetch's `ptr` to all levels of the cache.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370738,"byte_end":370786,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370787,"byte_end":370790,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ For some platforms this may compile down to nothing, and be optimized away.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370791,"byte_end":370870,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ To prevent compiling down into nothing, compilation must be done for a","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370871,"byte_end":370945,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ `x86` or `x86_64` platform with SSE instructions available. An easy way to","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":370946,"byte_end":371024,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ do this is to add the environmental variable `RUSTFLAGS=-C target-cpu=native`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":371025,"byte_end":371107,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":371108,"byte_end":371125,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372330,"byte_end":372334,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"name":"hint","qualname":"::tools::hint","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454}],"decl_id":null,"docs":" Hints to the compiler for optimizations.","sig":null,"attributes":[{"value":"/ Hints to the compiler for optimizations.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372186,"byte_end":372230,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372231,"byte_end":372234,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ These functions normally compile down to no-operations without the `nightly` flag.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372235,"byte_end":372321,"line_start":97,"line_end":97,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372633,"byte_end":372641,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"unlikely","qualname":"::tools::hint::unlikely","value":"pub fn unlikely(bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Hints to the compiler that branch condition is likely to be false.\n Returns the value passed to it.","sig":null,"attributes":[{"value":"/ Hints to the compiler that branch condition is likely to be false.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372399,"byte_end":372469,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/ Returns the value passed to it.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372474,"byte_end":372509,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372514,"byte_end":372517,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Any use other than with `if` statements will probably not have an effect.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372522,"byte_end":372599,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372604,"byte_end":372621,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":373064,"byte_end":373070,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"likely","qualname":"::tools::hint::likely","value":"pub fn likely(bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Hints to the compiler that branch condition is likely to be true.\n Returns the value passed to it.","sig":null,"attributes":[{"value":"/ Hints to the compiler that branch condition is likely to be true.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372831,"byte_end":372900,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ Returns the value passed to it.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372905,"byte_end":372940,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372945,"byte_end":372948,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Any use other than with `if` statements will probably not have an effect.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":372953,"byte_end":373030,"line_start":119,"line_end":119,"column_start":5,"column_end":82}},{"value":"inline(always)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":373035,"byte_end":373052,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3140,"byte_end":3151,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"bot_prelude","qualname":"::bot_prelude","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516}],"decl_id":null,"docs":" Easy importing of all available bots.\n","sig":null,"attributes":[{"value":"/ Easy importing of all available bots.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":3158,"byte_end":3199,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45994,"byte_end":46001,"line_start":143,"line_end":143,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46178,"byte_end":46185,"line_start":151,"line_end":151,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56476,"byte_end":56487,"line_start":479,"line_end":479,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56645,"byte_end":56656,"line_start":489,"line_end":489,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58126,"byte_end":58137,"line_start":554,"line_end":554,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58259,"byte_end":58270,"line_start":560,"line_end":560,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58400,"byte_end":58411,"line_start":566,"line_end":566,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75319,"byte_end":75328,"line_start":89,"line_end":89,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":76902,"byte_end":76911,"line_start":151,"line_end":151,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79619,"byte_end":79629,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79739,"byte_end":79754,"line_start":257,"line_end":257,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79869,"byte_end":79882,"line_start":264,"line_end":264,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79995,"byte_end":80013,"line_start":271,"line_end":271,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80131,"byte_end":80146,"line_start":278,"line_end":278,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80261,"byte_end":80279,"line_start":285,"line_end":285,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81893,"byte_end":81901,"line_start":335,"line_end":335,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81996,"byte_end":82004,"line_start":342,"line_end":342,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82114,"byte_end":82124,"line_start":349,"line_end":349,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82219,"byte_end":82229,"line_start":356,"line_end":356,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82339,"byte_end":82349,"line_start":363,"line_end":363,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82444,"byte_end":82454,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82562,"byte_end":82570,"line_start":377,"line_end":377,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82665,"byte_end":82673,"line_start":384,"line_end":384,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82782,"byte_end":82791,"line_start":391,"line_end":391,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82886,"byte_end":82895,"line_start":398,"line_end":398,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":83003,"byte_end":83011,"line_start":405,"line_end":405,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":83106,"byte_end":83114,"line_start":412,"line_end":412,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85670,"byte_end":85672,"line_start":76,"line_end":76,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90977,"byte_end":90979,"line_start":268,"line_end":268,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94643,"byte_end":94645,"line_start":401,"line_end":401,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96703,"byte_end":96711,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103447,"byte_end":103455,"line_start":261,"line_end":261,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103630,"byte_end":103638,"line_start":270,"line_end":270,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103868,"byte_end":103876,"line_start":283,"line_end":283,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104542,"byte_end":104554,"line_start":311,"line_end":311,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104765,"byte_end":104777,"line_start":323,"line_end":323,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112377,"byte_end":112385,"line_start":89,"line_end":89,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112564,"byte_end":112572,"line_start":99,"line_end":99,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112762,"byte_end":112770,"line_start":108,"line_end":108,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112985,"byte_end":112993,"line_start":116,"line_end":116,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113079,"byte_end":113087,"line_start":123,"line_end":123,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115112,"byte_end":115120,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115345,"byte_end":115353,"line_start":225,"line_end":225,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115576,"byte_end":115584,"line_start":235,"line_end":235,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115744,"byte_end":115752,"line_start":244,"line_end":244,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115896,"byte_end":115904,"line_start":252,"line_end":252,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":116699,"byte_end":116707,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117489,"byte_end":117497,"line_start":324,"line_end":324,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117533,"byte_end":117541,"line_start":326,"line_end":326,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117744,"byte_end":117756,"line_start":337,"line_end":337,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118273,"byte_end":118281,"line_start":360,"line_end":360,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118530,"byte_end":118538,"line_start":373,"line_end":373,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118761,"byte_end":118773,"line_start":383,"line_end":383,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118801,"byte_end":118813,"line_start":385,"line_end":385,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119079,"byte_end":119094,"line_start":397,"line_end":397,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119287,"byte_end":119302,"line_start":407,"line_end":407,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119491,"byte_end":119506,"line_start":415,"line_end":415,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119716,"byte_end":119731,"line_start":423,"line_end":423,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119821,"byte_end":119836,"line_start":430,"line_end":430,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121533,"byte_end":121548,"line_start":496,"line_end":496,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121781,"byte_end":121796,"line_start":508,"line_end":508,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122023,"byte_end":122038,"line_start":518,"line_end":518,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122206,"byte_end":122221,"line_start":527,"line_end":527,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122368,"byte_end":122383,"line_start":534,"line_end":534,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":123217,"byte_end":123230,"line_start":571,"line_end":571,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124029,"byte_end":124042,"line_start":607,"line_end":607,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124078,"byte_end":124091,"line_start":609,"line_end":609,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124318,"byte_end":124335,"line_start":620,"line_end":620,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124856,"byte_end":124871,"line_start":643,"line_end":643,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125126,"byte_end":125141,"line_start":656,"line_end":656,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125371,"byte_end":125388,"line_start":666,"line_end":666,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125416,"byte_end":125433,"line_start":668,"line_end":668,"column_start":24,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127704,"byte_end":127709,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128430,"byte_end":128435,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128603,"byte_end":128608,"line_start":90,"line_end":90,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128758,"byte_end":128763,"line_start":99,"line_end":99,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128892,"byte_end":128897,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129046,"byte_end":129051,"line_start":113,"line_end":113,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129180,"byte_end":129185,"line_start":119,"line_end":119,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129300,"byte_end":129305,"line_start":127,"line_end":127,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129454,"byte_end":129459,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129610,"byte_end":129615,"line_start":144,"line_end":144,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129765,"byte_end":129770,"line_start":152,"line_end":152,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4980,"byte_end":4986,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7073,"byte_end":7079,"line_start":144,"line_end":144,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7289,"byte_end":7295,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8768,"byte_end":8777,"line_start":217,"line_end":217,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10366,"byte_end":10375,"line_start":280,"line_end":280,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11420,"byte_end":11425,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":19289,"byte_end":19294,"line_start":579,"line_end":579,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":19525,"byte_end":19530,"line_start":589,"line_end":589,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20549,"byte_end":20553,"line_start":624,"line_end":624,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22070,"byte_end":22074,"line_start":693,"line_end":693,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22517,"byte_end":22521,"line_start":718,"line_end":718,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231056,"byte_end":231061,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231133,"byte_end":231144,"line_start":110,"line_end":110,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231529,"byte_end":231536,"line_start":125,"line_end":125,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":235018,"byte_end":235030,"line_start":202,"line_end":202,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1132},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257572,"byte_end":257580,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261840,"byte_end":261848,"line_start":184,"line_end":184,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263572,"byte_end":263586,"line_start":39,"line_end":39,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267436,"byte_end":267450,"line_start":148,"line_end":148,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267656,"byte_end":267670,"line_start":155,"line_end":155,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267971,"byte_end":267989,"line_start":172,"line_end":172,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":268429,"byte_end":268443,"line_start":190,"line_end":190,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272898,"byte_end":272908,"line_start":85,"line_end":85,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":279120,"byte_end":279130,"line_start":260,"line_end":260,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288948,"byte_end":288958,"line_start":27,"line_end":27,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":289208,"byte_end":289218,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":296512,"byte_end":296521,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":298631,"byte_end":298641,"line_start":118,"line_end":118,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":298753,"byte_end":298763,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":299638,"byte_end":299645,"line_start":162,"line_end":162,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":299773,"byte_end":299780,"line_start":169,"line_end":169,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":301973,"byte_end":301980,"line_start":228,"line_end":228,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":303249,"byte_end":303256,"line_start":295,"line_end":295,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":303624,"byte_end":303627,"line_start":321,"line_end":321,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132194,"byte_end":132207,"line_start":64,"line_end":64,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132339,"byte_end":132352,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134093,"byte_end":134106,"line_start":92,"line_end":92,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136515,"byte_end":136520,"line_start":161,"line_end":161,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136658,"byte_end":136663,"line_start":168,"line_end":168,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136807,"byte_end":136812,"line_start":174,"line_end":174,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137104,"byte_end":137109,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137197,"byte_end":137202,"line_start":189,"line_end":189,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137273,"byte_end":137278,"line_start":195,"line_end":195,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212772,"byte_end":212782,"line_start":2260,"line_end":2260,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213255,"byte_end":213260,"line_start":2270,"line_end":2270,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216916,"byte_end":216925,"line_start":2377,"line_end":2377,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217196,"byte_end":217205,"line_start":2390,"line_end":2390,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306607,"byte_end":306616,"line_start":52,"line_end":52,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306865,"byte_end":306882,"line_start":63,"line_end":63,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307200,"byte_end":307217,"line_start":76,"line_end":76,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307461,"byte_end":307477,"line_start":86,"line_end":86,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307787,"byte_end":307802,"line_start":99,"line_end":99,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":308025,"byte_end":308048,"line_start":110,"line_end":110,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/magic.rs","byte_start":332897,"byte_end":332903,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/magic.rs","byte_start":333233,"byte_end":333242,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323621,"byte_end":323627,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323653,"byte_end":323659,"line_start":33,"line_end":33,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323681,"byte_end":323687,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323753,"byte_end":323759,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373618,"byte_end":373622,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":378423,"byte_end":378427,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385497,"byte_end":385514,"line_start":82,"line_end":82,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386845,"byte_end":386850,"line_start":123,"line_end":123,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389373,"byte_end":389391,"line_start":191,"line_end":191,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399009,"byte_end":399027,"line_start":454,"line_end":454,"column_start":22,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399054,"byte_end":399072,"line_start":456,"line_end":456,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399484,"byte_end":399502,"line_start":469,"line_end":469,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405274,"byte_end":405282,"line_start":22,"line_end":22,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405335,"byte_end":405343,"line_start":23,"line_end":23,"column_start":47,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405359,"byte_end":405368,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405655,"byte_end":405664,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405766,"byte_end":405775,"line_start":46,"line_end":46,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406083,"byte_end":406086,"line_start":58,"line_end":58,"column_start":47,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406139,"byte_end":406142,"line_start":59,"line_end":59,"column_start":47,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406158,"byte_end":406161,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406477,"byte_end":406480,"line_start":78,"line_end":78,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408333,"byte_end":408336,"line_start":129,"line_end":129,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408468,"byte_end":408471,"line_start":138,"line_end":138,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408690,"byte_end":408693,"line_start":148,"line_end":148,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2805,"byte_end":2809,"line_start":94,"line_end":94,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3779,"byte_end":3791,"line_start":7,"line_end":7,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3801,"byte_end":3811,"line_start":8,"line_end":8,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3821,"byte_end":3826,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":130}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3836,"byte_end":3847,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":228}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3857,"byte_end":3859,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":365}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3869,"byte_end":3877,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":466}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3887,"byte_end":3896,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":3906,"byte_end":3911,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":755}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2819,"byte_end":2824,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":901}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131392,"byte_end":131399,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1000}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131409,"byte_end":131422,"line_start":40,"line_end":40,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1147}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131432,"byte_end":131447,"line_start":41,"line_end":41,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":1171}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131457,"byte_end":131468,"line_start":42,"line_end":42,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1210}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131478,"byte_end":131481,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1263}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":131491,"byte_end":131496,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1304}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2834,"byte_end":2838,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1653}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305230,"byte_end":305237,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1655}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305247,"byte_end":305263,"line_start":8,"line_end":8,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":1661}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305273,"byte_end":305282,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1674}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305292,"byte_end":305300,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1686}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":305310,"byte_end":305336,"line_start":11,"line_end":11,"column_start":9,"column_end":35},"ref_id":{"krate":0,"index":1705}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2848,"byte_end":2854,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1772}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323296,"byte_end":323303,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2024}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/lib.rs","byte_start":2864,"byte_end":2869,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2173}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369870,"byte_end":369874,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2174}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369884,"byte_end":369888,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2188}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369898,"byte_end":369900,"line_start":8,"line_end":8,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2270}},{"kind":"Mod","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/mod.rs","byte_start":369910,"byte_end":369919,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2359}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":45994,"byte_end":46001,"line_start":143,"line_end":143,"column_start":23,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2519},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":46178,"byte_end":46185,"line_start":151,"line_end":151,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56476,"byte_end":56487,"line_start":479,"line_end":479,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":56645,"byte_end":56656,"line_start":489,"line_end":489,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58126,"byte_end":58137,"line_start":554,"line_end":554,"column_start":14,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58259,"byte_end":58270,"line_start":560,"line_end":560,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/piece_move.rs","byte_start":58400,"byte_end":58411,"line_start":566,"line_end":566,"column_start":20,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2584},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":75319,"byte_end":75328,"line_start":89,"line_end":89,"column_start":22,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":265},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":76902,"byte_end":76911,"line_start":151,"line_end":151,"column_start":22,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":266},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79619,"byte_end":79629,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79739,"byte_end":79754,"line_start":257,"line_end":257,"column_start":23,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":310},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79869,"byte_end":79882,"line_start":264,"line_end":264,"column_start":23,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":311},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":79995,"byte_end":80013,"line_start":271,"line_end":271,"column_start":23,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":312},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80131,"byte_end":80146,"line_start":278,"line_end":278,"column_start":23,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":313},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":80261,"byte_end":80279,"line_start":285,"line_end":285,"column_start":23,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":307}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81893,"byte_end":81901,"line_start":335,"line_end":335,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":329},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":81996,"byte_end":82004,"line_start":342,"line_end":342,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82114,"byte_end":82124,"line_start":349,"line_end":349,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82219,"byte_end":82229,"line_start":356,"line_end":356,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82339,"byte_end":82349,"line_start":363,"line_end":363,"column_start":21,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82444,"byte_end":82454,"line_start":370,"line_end":370,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82562,"byte_end":82570,"line_start":377,"line_end":377,"column_start":21,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82665,"byte_end":82673,"line_start":384,"line_end":384,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82782,"byte_end":82791,"line_start":391,"line_end":391,"column_start":21,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":333},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":82886,"byte_end":82895,"line_start":398,"line_end":398,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":83003,"byte_end":83011,"line_start":405,"line_end":405,"column_start":21,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":334},"to":{"krate":0,"index":327}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mono_traits.rs","byte_start":83106,"byte_end":83114,"line_start":412,"line_end":412,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":85670,"byte_end":85672,"line_start":76,"line_end":76,"column_start":6,"column_end":8},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":90977,"byte_end":90979,"line_start":268,"line_end":268,"column_start":6,"column_end":8},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/sq.rs","byte_start":94643,"byte_end":94645,"line_start":401,"line_end":401,"column_start":23,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2595},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":96703,"byte_end":96711,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103447,"byte_end":103455,"line_start":261,"line_end":261,"column_start":18,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":3127}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103630,"byte_end":103638,"line_start":270,"line_end":270,"column_start":19,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":103868,"byte_end":103876,"line_start":283,"line_end":283,"column_start":23,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104542,"byte_end":104554,"line_start":311,"line_end":311,"column_start":18,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/bitboard.rs","byte_start":104765,"byte_end":104777,"line_start":323,"line_end":323,"column_start":6,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110401,"byte_end":110406,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110409,"byte_end":110417,"line_start":27,"line_end":27,"column_start":31,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3289},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110427,"byte_end":110432,"line_start":27,"line_end":27,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":3285},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":110442,"byte_end":110450,"line_start":27,"line_end":27,"column_start":64,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":3213},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112377,"byte_end":112385,"line_start":89,"line_end":89,"column_start":18,"column_end":26},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112564,"byte_end":112572,"line_start":99,"line_end":99,"column_start":29,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112762,"byte_end":112770,"line_start":108,"line_end":108,"column_start":32,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":112985,"byte_end":112993,"line_start":116,"line_end":116,"column_start":29,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":113079,"byte_end":113087,"line_start":123,"line_end":123,"column_start":6,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115112,"byte_end":115120,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115345,"byte_end":115353,"line_start":225,"line_end":225,"column_start":19,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115576,"byte_end":115584,"line_start":235,"line_end":235,"column_start":23,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115744,"byte_end":115752,"line_start":244,"line_end":244,"column_start":26,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":115896,"byte_end":115904,"line_start":252,"line_end":252,"column_start":21,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":609},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":116699,"byte_end":116707,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117489,"byte_end":117497,"line_start":324,"line_end":324,"column_start":32,"column_end":40},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117533,"byte_end":117541,"line_start":326,"line_end":326,"column_start":28,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":117744,"byte_end":117756,"line_start":337,"line_end":337,"column_start":19,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118273,"byte_end":118281,"line_start":360,"line_end":360,"column_start":23,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118530,"byte_end":118538,"line_start":373,"line_end":373,"column_start":32,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118761,"byte_end":118773,"line_start":383,"line_end":383,"column_start":28,"column_end":40},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":118801,"byte_end":118813,"line_start":385,"line_end":385,"column_start":24,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":665},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119079,"byte_end":119094,"line_start":397,"line_end":397,"column_start":18,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119287,"byte_end":119302,"line_start":407,"line_end":407,"column_start":29,"column_end":44},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119491,"byte_end":119506,"line_start":415,"line_end":415,"column_start":25,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119716,"byte_end":119731,"line_start":423,"line_end":423,"column_start":33,"column_end":48},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":119821,"byte_end":119836,"line_start":430,"line_end":430,"column_start":6,"column_end":21},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121533,"byte_end":121548,"line_start":496,"line_end":496,"column_start":16,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":121781,"byte_end":121796,"line_start":508,"line_end":508,"column_start":19,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122023,"byte_end":122038,"line_start":518,"line_end":518,"column_start":23,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122206,"byte_end":122221,"line_start":527,"line_end":527,"column_start":26,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":122368,"byte_end":122383,"line_start":534,"line_end":534,"column_start":21,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":681},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":123217,"byte_end":123230,"line_start":571,"line_end":571,"column_start":23,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124029,"byte_end":124042,"line_start":607,"line_end":607,"column_start":32,"column_end":45},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124078,"byte_end":124091,"line_start":609,"line_end":609,"column_start":28,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124318,"byte_end":124335,"line_start":620,"line_end":620,"column_start":19,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":124856,"byte_end":124871,"line_start":643,"line_end":643,"column_start":23,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125126,"byte_end":125141,"line_start":656,"line_end":656,"column_start":32,"column_end":47},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125371,"byte_end":125388,"line_start":666,"line_end":666,"column_start":28,"column_end":45},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/move_list.rs","byte_start":125416,"byte_end":125433,"line_start":668,"line_end":668,"column_start":24,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":127704,"byte_end":127709,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128430,"byte_end":128435,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128603,"byte_end":128608,"line_start":90,"line_end":90,"column_start":14,"column_end":19},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128758,"byte_end":128763,"line_start":99,"line_end":99,"column_start":20,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3087}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":128892,"byte_end":128897,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3061}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129046,"byte_end":129051,"line_start":113,"line_end":113,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129180,"byte_end":129185,"line_start":119,"line_end":119,"column_start":14,"column_end":19},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129300,"byte_end":129305,"line_start":127,"line_end":127,"column_start":18,"column_end":23},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3066}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129454,"byte_end":129459,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3066}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129610,"byte_end":129615,"line_start":144,"line_end":144,"column_start":19,"column_end":24},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3066}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/score.rs","byte_start":129765,"byte_end":129770,"line_start":152,"line_end":152,"column_start":19,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":3066}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":4980,"byte_end":4986,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7073,"byte_end":7079,"line_start":144,"line_end":144,"column_start":14,"column_end":20},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":3108}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":7289,"byte_end":7295,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":8768,"byte_end":8777,"line_start":217,"line_end":217,"column_start":6,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":10366,"byte_end":10375,"line_start":280,"line_end":280,"column_start":23,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2901},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":11420,"byte_end":11425,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":19289,"byte_end":19294,"line_start":579,"line_end":579,"column_start":23,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2934},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":19525,"byte_end":19530,"line_start":589,"line_end":589,"column_start":21,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2934},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":20549,"byte_end":20553,"line_start":624,"line_end":624,"column_start":6,"column_end":10},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22070,"byte_end":22074,"line_start":693,"line_end":693,"column_start":14,"column_end":18},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2980},"to":{"krate":2,"index":3108}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/core/mod.rs","byte_start":22517,"byte_end":22521,"line_start":718,"line_end":718,"column_start":6,"column_end":10},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231056,"byte_end":231061,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1056},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231133,"byte_end":231144,"line_start":110,"line_end":110,"column_start":19,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1057},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":231529,"byte_end":231536,"line_start":125,"line_end":125,"column_start":6,"column_end":13},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/movegen.rs","byte_start":235018,"byte_end":235030,"line_start":202,"line_end":202,"column_start":26,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":257572,"byte_end":257580,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/castle_rights.rs","byte_start":261840,"byte_end":261848,"line_start":184,"line_end":184,"column_start":23,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":263572,"byte_end":263586,"line_start":39,"line_end":39,"column_start":6,"column_end":20},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267436,"byte_end":267450,"line_start":148,"line_end":148,"column_start":16,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267656,"byte_end":267670,"line_start":155,"line_end":155,"column_start":20,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":267971,"byte_end":267989,"line_start":172,"line_end":172,"column_start":19,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/piece_locations.rs","byte_start":268429,"byte_end":268443,"line_start":190,"line_end":190,"column_start":23,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":272898,"byte_end":272908,"line_start":85,"line_end":85,"column_start":6,"column_end":16},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/board_state.rs","byte_start":279120,"byte_end":279130,"line_start":260,"line_end":260,"column_start":20,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3202},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":288948,"byte_end":288958,"line_start":27,"line_end":27,"column_start":18,"column_end":28},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/perft.rs","byte_start":289208,"byte_end":289218,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":296512,"byte_end":296521,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":298631,"byte_end":298641,"line_start":118,"line_end":118,"column_start":18,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":298753,"byte_end":298763,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":299638,"byte_end":299645,"line_start":162,"line_end":162,"column_start":23,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":299773,"byte_end":299780,"line_start":169,"line_end":169,"column_start":6,"column_end":13},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":301973,"byte_end":301980,"line_start":228,"line_end":228,"column_start":18,"column_end":25},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":303249,"byte_end":303256,"line_start":295,"line_end":295,"column_start":6,"column_end":13},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/pgn.rs","byte_start":303624,"byte_end":303627,"line_start":321,"line_end":321,"column_start":6,"column_end":9},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132194,"byte_end":132207,"line_start":64,"line_end":64,"column_start":35,"column_end":48},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":132339,"byte_end":132352,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":134093,"byte_end":134106,"line_start":92,"line_end":92,"column_start":23,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1488},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136515,"byte_end":136520,"line_start":161,"line_end":161,"column_start":23,"column_end":28},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136658,"byte_end":136663,"line_start":168,"line_end":168,"column_start":21,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":136807,"byte_end":136812,"line_start":174,"line_end":174,"column_start":20,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137104,"byte_end":137109,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137197,"byte_end":137202,"line_start":189,"line_end":189,"column_start":18,"column_end":23},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":137273,"byte_end":137278,"line_start":195,"line_end":195,"column_start":6,"column_end":11},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":212772,"byte_end":212782,"line_start":2260,"line_end":2260,"column_start":21,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1614},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":213255,"byte_end":213260,"line_start":2270,"line_end":2270,"column_start":6,"column_end":11},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":216916,"byte_end":216925,"line_start":2377,"line_end":2377,"column_start":18,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1629},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/board/mod.rs","byte_start":217196,"byte_end":217205,"line_start":2390,"line_end":2390,"column_start":6,"column_end":15},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306607,"byte_end":306616,"line_start":52,"line_end":52,"column_start":19,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1747},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":306865,"byte_end":306882,"line_start":63,"line_end":63,"column_start":19,"column_end":36},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1750},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307200,"byte_end":307217,"line_start":76,"line_end":76,"column_start":19,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1752},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307461,"byte_end":307477,"line_start":86,"line_end":86,"column_start":19,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1751},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":307787,"byte_end":307802,"line_start":99,"line_end":99,"column_start":19,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1748},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/bots/mod.rs","byte_start":308025,"byte_end":308048,"line_start":110,"line_end":110,"column_start":19,"column_end":42},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1749},"to":{"krate":0,"index":2439}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/magic.rs","byte_start":332897,"byte_end":332903,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/magic.rs","byte_start":333233,"byte_end":333242,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323621,"byte_end":323627,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323653,"byte_end":323659,"line_start":33,"line_end":33,"column_start":22,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323681,"byte_end":323687,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/helper/mod.rs","byte_start":323753,"byte_end":323759,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/prng.rs","byte_start":373618,"byte_end":373622,"line_start":11,"line_end":11,"column_start":6,"column_end":10},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/eval.rs","byte_start":378423,"byte_end":378427,"line_start":97,"line_end":97,"column_start":6,"column_end":10},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":385497,"byte_end":385514,"line_start":82,"line_end":82,"column_start":6,"column_end":23},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":386845,"byte_end":386850,"line_start":123,"line_end":123,"column_start":6,"column_end":11},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":389373,"byte_end":389391,"line_start":191,"line_end":191,"column_start":6,"column_end":24},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399009,"byte_end":399027,"line_start":454,"line_end":454,"column_start":22,"column_end":40},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2324},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399054,"byte_end":399072,"line_start":456,"line_end":456,"column_start":23,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2324},"to":{"krate":0,"index":2442}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/tt.rs","byte_start":399484,"byte_end":399502,"line_start":469,"line_end":469,"column_start":15,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2324},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405274,"byte_end":405282,"line_start":22,"line_end":22,"column_start":47,"column_end":55},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2383},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405335,"byte_end":405343,"line_start":23,"line_end":23,"column_start":47,"column_end":55},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2383},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405359,"byte_end":405368,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405655,"byte_end":405664,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":405766,"byte_end":405775,"line_start":46,"line_end":46,"column_start":22,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406083,"byte_end":406086,"line_start":58,"line_end":58,"column_start":47,"column_end":50},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406139,"byte_end":406142,"line_start":59,"line_end":59,"column_start":47,"column_end":50},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406158,"byte_end":406161,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":406477,"byte_end":406480,"line_start":78,"line_end":78,"column_start":17,"column_end":20},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408333,"byte_end":408336,"line_start":129,"line_end":129,"column_start":27,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408468,"byte_end":408471,"line_start":138,"line_end":138,"column_start":27,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/pleco-0.5.0/src/tools/pleco_arc.rs","byte_start":408690,"byte_end":408693,"line_start":148,"line_end":148,"column_start":26,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":3224}}]}