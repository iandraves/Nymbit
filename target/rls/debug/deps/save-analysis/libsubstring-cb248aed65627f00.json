{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5","program":"/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","substring","/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=cb248aed65627f00","-C","extra-filename=-cb248aed65627f00","--out-dir","/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps","-L","dependency=/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps","--cap-lints","allow","--cfg","rustc_1_6","--error-format=json","--sysroot","/Users/iandraves/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/iandraves/Documents/Code/rust_chess/target/rls/debug/deps/libsubstring-cb248aed65627f00.rmeta"},"prelude":{"crate_id":{"name":"substring","disambiguator":[12250154609455380031,0]},"crate_root":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src","external_crates":[{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16214626321829081561,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14004541350322100676,0]}},{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14513964228136080925,0]}}],"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":0,"byte_end":4577,"line_start":1,"line_end":140,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":0,"byte_end":4577,"line_start":1,"line_end":140,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6}],"decl_id":null,"docs":" Substring method for string types.","sig":null,"attributes":[{"value":"/ Substring method for string types.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":39,"byte_end":42,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides a [`substring()`] method on Rust string types. The method takes a start and","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":43,"byte_end":142,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ end character index and returns a string slice of the characters within that range.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":143,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":231,"byte_end":234,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The method is provided via the [`Substring`] trait which is implemented on the [`str`]","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":235,"byte_end":325,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ primitive.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":326,"byte_end":340,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":341,"byte_end":344,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":345,"byte_end":358,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":359,"byte_end":366,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use substring::Substring;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":367,"byte_end":396,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":397,"byte_end":400,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // Works on a string slice.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":401,"byte_end":432,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(\"foobar\".substring(2,5), \"oba\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":433,"byte_end":480,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":481,"byte_end":484,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Also works on a String.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":485,"byte_end":515,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(\"foobar\".to_string().substring(1,6), \"oobar\");","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":516,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":578,"byte_end":585,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":586,"byte_end":589,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ As Rust strings are UTF-8 encoded, the algorithm for finding a character substring is `O(n)`,","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":590,"byte_end":687,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ where `n` is the byte length of the string. This is due to characters not being of predictible","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":688,"byte_end":786,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ byte lengths.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":787,"byte_end":804,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":805,"byte_end":808,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":809,"byte_end":819,"line_start":24,"line_end":24,"column_start":1,"column_end":11}},{"value":"/ The indexing of substrings is based on [*Unicode Scalar Value*]. As such, substrings may not","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":820,"byte_end":916,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ always match your intuition:","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":917,"byte_end":949,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":950,"byte_end":953,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":954,"byte_end":961,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use substring::Substring;","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":962,"byte_end":991,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":992,"byte_end":995,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"ã\".substring(0, 1), \"a\");  // As opposed to \"ã\".","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":996,"byte_end":1064,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(\"ã\".substring(1, 2), \"\\u{0303}\")","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1065,"byte_end":1114,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1115,"byte_end":1122,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1123,"byte_end":1126,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The above example occurs because \"ã\" is technically made up of two UTF-8 scalar values.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1127,"byte_end":1220,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1221,"byte_end":1224,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1225,"byte_end":1286,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ [`Substring`]: trait.Substring.html","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1287,"byte_end":1326,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/ [`substring()`]: trait.Substring.html#tymethod.substring","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1327,"byte_end":1387,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [*Unicode Scalar Value*]: http://www.unicode.org/glossary/#unicode_scalar_value","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1392,"byte_end":1475,"line_start":41,"line_end":41,"column_start":1,"column_end":84}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1477,"byte_end":1499,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"allow(deprecated)","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1637,"byte_end":1658,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"no_std","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1682,"byte_end":1688,"line_start":47,"line_end":47,"column_start":24,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":4},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1993,"byte_end":2002,"line_start":58,"line_end":58,"column_start":11,"column_end":20},"name":"Substring","qualname":"::Substring","value":"Substring","parent":null,"children":[{"krate":0,"index":5}],"decl_id":null,"docs":" Provides a [`substring()`] method.","sig":null,"attributes":[{"value":"/ Provides a [`substring()`] method.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1742,"byte_end":1780,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1781,"byte_end":1784,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The [`substring()`] method obtains a string slice of characters within the range specified by","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1785,"byte_end":1882,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ `start_index` and `end_index`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1883,"byte_end":1917,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1918,"byte_end":1921,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`substring()`]: trait.Substring.html#tymethod.substring","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":1922,"byte_end":1982,"line_start":57,"line_end":57,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":2214,"byte_end":2223,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"substring","qualname":"::Substring::substring","value":"pub fn substring(&Self, usize, usize) -> &str","parent":{"krate":0,"index":4},"children":[],"decl_id":null,"docs":" Obtains a string slice containing the characters within the range specified by\n `start_index` and `end_index`.","sig":null,"attributes":[{"value":"/ Obtains a string slice containing the characters within the range specified by","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":2009,"byte_end":2091,"line_start":59,"line_end":59,"column_start":5,"column_end":87}},{"value":"/ `start_index` and `end_index`.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":2096,"byte_end":2130,"line_start":60,"line_end":60,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":2135,"byte_end":2138,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The range specified is a character range, not a byte range.","span":{"file_name":"/Users/iandraves/.cargo/registry/src/github.com-1ecc6299db9ec823/substring-1.4.5/src/lib.rs","byte_start":2143,"byte_end":2206,"line_start":62,"line_end":62,"column_start":5,"column_end":68}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}